---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-cni
  namespace: kube-system
  labels:
    app: kuma-cni
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: kuma-cni-config
  namespace: kube-system
  labels:
    app: kuma-cni
data:
  # The CNI network configuration to add to the plugin chain on each node.  The special
  # values in this config will be automatically populated.
  cni_network_config: |-
    {
      "cniVersion": "0.3.1",
      "name": "kuma-cni",
      "type": "kuma-cni",
      "log_level": "info",
      "kubernetes": {
          "kubeconfig": "__KUBECONFIG_FILEPATH__",
          "cni_bin_dir": "/var/lib/cni/bin",
          "exclude_namespaces": [ "kube-system" ]
      }
    }
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-cni
  labels:
    app: kuma-cni
rules:
  - apiGroups: [""]
    resources:
      - pods
      - nodes
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-cni
  labels:
    app: kuma-cni
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-cni
subjects:
  - kind: ServiceAccount
    name: kuma-cni
    namespace: kube-system
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: kuma-cni-node
  namespace: kube-system
  labels:
    k8s-app: kuma-cni-node
spec:
  selector:
    matchLabels:
      k8s-app: kuma-cni-node
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        k8s-app: kuma-cni-node
      annotations:
        # This, along with the CriticalAddonsOnly toleration below,
        # marks the pod as a critical add-on, ensuring it gets
        # priority scheduling and that its resources are reserved
        # if it ever gets evicted.
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      nodeSelector:
        beta.kubernetes.io/os: linux
      hostNetwork: true
      tolerations:
        # Make sure kuma-cni-node gets scheduled on all nodes.
        - effect: NoSchedule
          operator: Exists
        # Mark the pod as a critical add-on for rescheduling.
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
      priorityClassName: system-cluster-critical
      serviceAccountName: kuma-cni
      # Minimize downtime during a rolling upgrade or deletion; tell Kubernetes to do a "force
      # deletion": https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods.
      terminationGracePeriodSeconds: 5
      containers:
        - name: install-cni
          image: {{ .CNIImage }}:{{ .CNIVersion }}
          imagePullPolicy: Always
          command: ["/install-cni.sh"]
          env:
            # Name of the CNI config file to create.
            - name: CNI_CONF_NAME
              value: "kuma-cni.conf"
            # The CNI network config to install on each node.
            - name: CNI_NETWORK_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: kuma-cni-config
                  key: cni_network_config
            - name: CNI_NET_DIR
              value: /etc/cni/multus/net.d
            # If true, deploy as a chained CNI plugin, otherwise deploy as a standalone CNI
            - name: CHAINED_CNI_PLUGIN
              value: "false"
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-bin-dir
            - mountPath: /host/etc/cni/net.d
              name: cni-net-dir
      volumes:
        # Used to install CNI.
        - name: cni-bin-dir
          hostPath:
            path: /var/lib/cni/bin
        - name: cni-net-dir
          hostPath:
            path: /etc/cni/multus/net.d
