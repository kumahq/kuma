---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-injector
  namespace: {{ .Namespace }}
---
apiVersion: v1
kind: Service
metadata:
  name: kuma-injector
  namespace: {{ .Namespace }}
spec:
  ports:
  - port: 443
    name: https
    targetPort: 8443
  selector:
    app: kuma-injector
---
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: kuma-injector-tls-cert
  namespace: {{ .Namespace }}
data:
  tls.crt: {{ .InjectorTlsCert | b64enc }}
  tls.key: {{ .InjectorTlsKey | b64enc }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kuma-injector-config
  namespace: {{ .Namespace }}
data:
  config.yaml: |
    injector:
      sidecarContainer:
        redirectPort: 15001
        uid: 5678
        gid: 5678
        adminPort: 9901
        drainTime: 30s

        readinessProbe:
          initialDelaySeconds: 1
          timeoutSeconds:      3
          periodSeconds:       5
          successThreshold:    1
          failureThreshold:    12
        livenessProbe:
          initialDelaySeconds: 60
          timeoutSeconds:      3
          periodSeconds:       5
          failureThreshold:    12
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 1000m
            memory: 512Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-injector
  namespace: {{ .Namespace }}
  labels:
    app: kuma-injector
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: kuma-injector
  template:
    metadata:
      labels:
        app: kuma-injector
    spec:
      serviceAccountName: kuma-injector
      containers:
      - name: kuma-injector
        image: {{ .InjectorImage }}:{{ .ControlPlaneVersion }}
        imagePullPolicy: {{ .ImagePullPolicy }}
        env:
        - name: KUMA_INJECTOR_WEBHOOK_SERVER_PORT
          value: "8443"
        - name: KUMA_INJECTOR_WEBHOOK_SERVER_CERT_DIR
          value: /var/run/secrets/kuma.io/kuma-injector/tls-cert
        - name: KUMA_INJECTOR_CONTROL_PLANE_BOOTSTRAP_SERVER_URL
          value: http://kuma-control-plane.{{ .Namespace }}:5682
        - name: KUMA_INJECTOR_CONTROL_PLANE_API_SERVER_URL
          value: http://kuma-control-plane.{{ .Namespace }}:5681
        - name: KUMA_INJECTOR_SIDECAR_CONTAINER_IMAGE
          value: {{ .DataplaneImage }}:{{ .ControlPlaneVersion }}
        - name: KUMA_INJECTOR_INIT_CONTAINER_IMAGE
          value: {{ .DataplaneInitImage }}:{{ .ControlPlaneVersion }}
        - name: KUMA_INJECTOR_INIT_CONTAINER_ENABLED
          value: "{{ not .CNIEnabled }}"
        args:
        - run
        - --log-level=info
        - --config-file=/etc/kuma.io/kuma-injector/config.yaml
        ports:
        - containerPort: 8443
        livenessProbe:
          httpGet:
            path: /healthy
            port: 8443
            scheme: HTTPS
        readinessProbe:
          httpGet:
            path: /ready
            port: 8443
            scheme: HTTPS
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
        volumeMounts:
        - name: kuma-injector-tls-cert
          mountPath: /var/run/secrets/kuma.io/kuma-injector/tls-cert
          readOnly: true
        - name: kuma-injector-config
          mountPath: /etc/kuma.io/kuma-injector
          readOnly: true
      volumes:
      - name: kuma-injector-tls-cert
        secret:
          secretName: kuma-injector-tls-cert
      - name: kuma-injector-config
        configMap:
          name: kuma-injector-config
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: kuma-injector-webhook-configuration
webhooks:
- name: kuma-injector.kuma.io
  namespaceSelector:
    matchLabels:
      kuma.io/sidecar-injection: enabled
  failurePolicy: {{ .InjectorFailurePolicy }}
  clientConfig:
    caBundle: {{ .InjectorTlsCert | b64enc }}
    service:
      namespace: {{ .Namespace }}
      name: kuma-injector
      path: /inject-sidecar
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
