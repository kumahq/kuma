
---
apiVersion: v1
kind: Namespace
metadata:
  name: kuma-system
  labels:
    kuma.io/system-namespace: "true"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-cni
  namespace: kube-system
  labels:
  
    app: kuma-cni
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-control-plane
  namespace: kuma-system
  labels:
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: kuma-cni-config
  namespace: kube-system
  labels:
  
    app: kuma-cni
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
data:
  # The CNI network configuration to add to the plugin chain on each node.
  cni_network_config: |-
    {
      "cniVersion": "0.3.1",
      "name": "kuma-cni",
      "type": "kuma-cni",
      "log_level": "info",
      "kubernetes": {
          "kubeconfig": "__KUBECONFIG_FILEPATH__",
          "cni_bin_dir": "/var/lib/cni/bin",
          "exclude_namespaces": [ "kube-system" ]
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kuma-control-plane-config
  namespace: kuma-system
  labels:
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
data:
  config.yaml: |
    # use this file to override default configuration of `kuma-cp`
    #
    # see conf/kuma-cp.conf.yml for available settings
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: circuitbreakers.kuma.io
spec:
  group: kuma.io
  names:
    kind: CircuitBreaker
    plural: circuitbreakers
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: CircuitBreaker is the Schema for the circuitbreaker API
          properties:
            mesh:
              type: string
            spec:
              x-kubernetes-preserve-unknown-fields: true
              type: object
          type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: dataplanes.kuma.io
spec:
  group: kuma.io
  names:
    kind: Dataplane
    plural: dataplanes
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: Dataplane is the Schema for the dataplanes API
          properties:
            mesh:
              type: string
            spec:
              x-kubernetes-preserve-unknown-fields: true
              type: object
          type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: serviceinsights.kuma.io
spec:
  group: kuma.io
  names:
    kind: ServiceInsight
    plural: serviceinsights
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: ServiceInsight is the Schema for the services insights API
          properties:
            mesh:
              type: string
            spec:
              x-kubernetes-preserve-unknown-fields: true
              type: object
          type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: timeouts.kuma.io
spec:
  group: kuma.io
  names:
    kind: Timeout
    plural: timeouts
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: Timeout is the Schema for the timeout API
          properties:
            mesh:
              type: string
            spec:
              x-kubernetes-preserve-unknown-fields: true
              type: object
          type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: trafficlogs.kuma.io
spec:
  group: kuma.io
  names:
    kind: TrafficLog
    plural: trafficlogs
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: TrafficLog is the Schema for the trafficlogs API
          properties:
            mesh:
              type: string
            spec:
              x-kubernetes-preserve-unknown-fields: true
              type: object
          type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: trafficpermissions.kuma.io
spec:
  group: kuma.io
  names:
    kind: TrafficPermission
    plural: trafficpermissions
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: TrafficPermission is the Schema for the trafficpermissions API
          properties:
            mesh:
              type: string
            spec:
              x-kubernetes-preserve-unknown-fields: true
              type: object
          type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: trafficroutes.kuma.io
spec:
  group: kuma.io
  names:
    kind: TrafficRoute
    plural: trafficroutes
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: TrafficRoute is the Schema for the trafficroutes API
          properties:
            mesh:
              type: string
            spec:
              x-kubernetes-preserve-unknown-fields: true
              type: object
          type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: traffictraces.kuma.io
spec:
  group: kuma.io
  names:
    kind: TrafficTrace
    plural: traffictraces
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: TrafficTrace is the Schema for the traffictraces API
          properties:
            mesh:
              type: string
            spec:
              x-kubernetes-preserve-unknown-fields: true
              type: object
          type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: zoneinsights.kuma.io
spec:
  group: kuma.io
  names:
    kind: ZoneInsight
    plural: zoneinsights
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: ZoneInsight is the Schema for the zone insight API
          properties:
            mesh:
              type: string
            spec:
              x-kubernetes-preserve-unknown-fields: true
              type: object
          type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: zones.kuma.io
spec:
  group: kuma.io
  names:
    kind: Zone
    plural: zones
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: Zone is the Schema for the zone API
          properties:
            mesh:
              type: string
            spec:
              x-kubernetes-preserve-unknown-fields: true
              type: object
          type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: dataplaneinsights.kuma.io
spec:
  group: kuma.io
  names:
    kind: DataplaneInsight
    plural: dataplaneinsights
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: DataplaneInsight is the Schema for the dataplane insights API
          properties:
            mesh:
              type: string
            status:
              x-kubernetes-preserve-unknown-fields: true
              type: object
          type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: externalservices.kuma.io
spec:
  group: kuma.io
  names:
    kind: ExternalService
    plural: externalservices
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          properties:
            mesh:
              type: string
            spec:
              x-kubernetes-preserve-unknown-fields: true
              type: object
          type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: faultinjections.kuma.io
spec:
  group: kuma.io
  names:
    kind: FaultInjection
    plural: faultinjections
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: FaultInjection is the Schema for the faultinjections API
          properties:
            mesh:
              type: string
            spec:
              x-kubernetes-preserve-unknown-fields: true
              type: object
          type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: healthchecks.kuma.io
spec:
  group: kuma.io
  names:
    kind: HealthCheck
    plural: healthchecks
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: HealthCheck is the Schema for the healthchecks API
          properties:
            mesh:
              type: string
            spec:
              x-kubernetes-preserve-unknown-fields: true
              type: object
          type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: meshinsights.kuma.io
spec:
  group: kuma.io
  names:
    kind: MeshInsight
    plural: meshinsights
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: MeshInsight is the Schema for the meshes insights API
          properties:
            mesh:
              type: string
            spec:
              x-kubernetes-preserve-unknown-fields: true
              type: object
          type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: meshes.kuma.io
spec:
  group: kuma.io
  names:
    kind: Mesh
    plural: meshes
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: Mesh is the Schema for the meshes API
          properties:
            spec:
              x-kubernetes-preserve-unknown-fields: true
              type: object
          type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: proxytemplates.kuma.io
spec:
  group: kuma.io
  names:
    kind: ProxyTemplate
    plural: proxytemplates
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: ProxyTemplate is the Schema for the proxytemplates API
          properties:
            mesh:
              type: string
            spec:
              x-kubernetes-preserve-unknown-fields: true
              type: object
          type: object
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: retries.kuma.io
spec:
  group: kuma.io
  names:
    kind: Retry
    plural: retries
  scope: Cluster
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: Retry is the Schema for the retries API
          properties:
            mesh:
              type: string
            spec:
              x-kubernetes-preserve-unknown-fields: true
              type: object
          type: object
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-cni
  labels:
  
    app: kuma-cni
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
rules:
  - apiGroups: [""]
    resources:
      - pods
      - nodes
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-control-plane
  labels:
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
      - configmaps
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - kuma.io
    resources:
      - dataplanes
      - dataplaneinsights
      - meshes
      - zones
      - zoneinsights
      - meshinsights
      - serviceinsights
      - proxytemplates
      - trafficpermissions
      - trafficroutes
      - timeouts
      - retries
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - kuma.io
    resources:
      - circuitbreakers
      - externalservices
      - faultinjections
      - healthchecks
      - trafficlogs
      - traffictraces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - k8s.cni.cncf.io
    resources:
      - network-attachment-definitions
    verbs:
      - get
      - list
      - watch
      - create
      - delete
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/finalizers
    verbs:
      - "*"
  - apiGroups:
      - kuma.io
    resources:
      - meshes/finalizers
    verbs:
      - "*"
  - apiGroups:
      - kuma.io
    resources:
      - dataplanes/finalizers
    verbs:
      - "*"
  # validate k8s token before issueing mTLS cert
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-cni
  labels:
  
    app: kuma-cni
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-cni
subjects:
  - kind: ServiceAccount
    name: kuma-cni
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-control-plane
  labels:
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-control-plane
subjects:
  - kind: ServiceAccount
    name: kuma-control-plane
    namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kuma-control-plane
  namespace: kuma-system
  labels:
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kuma-control-plane
  namespace: kuma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kuma-control-plane
subjects:
  - kind: ServiceAccount
    name: kuma-control-plane
    namespace: kuma-system
---
apiVersion: v1
kind: Service
metadata:
  name: kuma-control-plane
  namespace: kuma-system
  labels:
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5680"
spec:
  type: ClusterIP
  ports:
    - port: 5681
      name: http-api-server
    - port: 5682
      name: https-api-server
    - port: 443
      name: https-admission-server
      targetPort: 5443
    - port: 5676
      name: mads-server
    - port: 5678
      name: dp-server
    - port: 5653
      name: dns-server
      protocol: UDP
  selector:
    app: kuma-control-plane
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: kuma-cni-node
  namespace: kube-system
  labels:
    app: kuma-cni
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
spec:
  selector:
    matchLabels:
      app: kuma-cni
      app.kubernetes.io/name: kuma
      app.kubernetes.io/instance: kuma
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: kuma-cni
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
      annotations:
        # This, along with the CriticalAddonsOnly toleration below,
        # marks the pod as a critical add-on, ensuring it gets
        # priority scheduling and that its resources are reserved
        # if it ever gets evicted.
        scheduler.alpha.kubernetes.io/critical-pod: ''
        checksum/config: 505be7b4d07918f7988be434a631cc4e92f0338dbc9f06ece3c8df7c85f3a0df
    spec:
      nodeSelector:
      
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      hostNetwork: true
      tolerations:
        # Make sure kuma-cni-node gets scheduled on all nodes.
        - effect: NoSchedule
          operator: Exists
        # Mark the pod as a critical add-on for rescheduling.
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
      priorityClassName: system-cluster-critical
      serviceAccountName: kuma-cni
      # Minimize downtime during a rolling upgrade or deletion; tell Kubernetes to do a "force
      # deletion": https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods.
      terminationGracePeriodSeconds: 5
      containers:
        - name: install-cni
          image: "docker.io/lobkovilya/install-cni:0.0.2"
          imagePullPolicy: Always
          command: ["/install-cni.sh"]
          env:
            # Name of the CNI config file to create.
            - name: CNI_CONF_NAME
              value: "kuma-cni.conf"
            # The CNI network config to install on each node.
            - name: CNI_NETWORK_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: kuma-cni-config
                  key: cni_network_config
            - name: CNI_NET_DIR
              value: "/etc/cni/multus/net.d"
            # If true, deploy as a chained CNI plugin, otherwise deploy as a standalone CNI
            - name: CHAINED_CNI_PLUGIN
              value: "false"
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-bin-dir
            - mountPath: /host/etc/cni/net.d
              name: cni-net-dir
      volumes:
        # Used to install CNI.
        - name: cni-bin-dir
          hostPath:
            path: /var/lib/cni/bin
        - name: cni-net-dir
          hostPath:
            path: /etc/cni/multus/net.d
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-control-plane
  namespace: kuma-system
  labels:
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app: kuma-control-plane
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: kuma
      app.kubernetes.io/instance: kuma
      app: kuma-control-plane
  template:
    metadata:
      annotations:
        checksum/config: fdb21568e6f33a5b9474d2e7302b322626aadb40d1974d72fa727a87629b881e
        checksum/tls-secrets: 4d375fb4c34c119b605a0c04b56a1813633bdb25e5c9216e55c97f49ed8e1722
      labels:
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app: kuma-control-plane
    spec:
      serviceAccountName: kuma-control-plane
      nodeSelector:
        
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      containers:
        - name: control-plane
          image: "kong-docker-kuma-docker.bintray.io/kuma-cp:0.0.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: KUMA_API_SERVER_READ_ONLY
              value: "true"
            - name: KUMA_DEFAULTS_SKIP_MESH_CREATION
              value: "false"
            - name: KUMA_DP_SERVER_HDS_ENABLED
              value: "false"
            - name: KUMA_ENVIRONMENT
              value: "kubernetes"
            - name: KUMA_GENERAL_TLS_CERT_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/tls.crt"
            - name: KUMA_GENERAL_TLS_KEY_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/tls.key"
            - name: KUMA_INJECTOR_INIT_CONTAINER_IMAGE
              value: "kong-docker-kuma-docker.bintray.io/kuma-init:0.0.1"
            - name: KUMA_MODE
              value: "standalone"
            - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_CERT_DIR
              value: "/var/run/secrets/kuma.io/tls-cert"
            - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_PORT
              value: "5443"
            - name: KUMA_RUNTIME_KUBERNETES_CONTROL_PLANE_SERVICE_NAME
              value: "kuma-control-plane"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CA_CERT_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/ca.crt"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CNI_ENABLED
              value: "true"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_SIDECAR_CONTAINER_IMAGE
              value: "kong-docker-kuma-docker.bintray.io/kuma-dp:0.0.1"
            - name: KUMA_STORE_KUBERNETES_SYSTEM_NAMESPACE
              value: "kuma-system"
            - name: KUMA_STORE_TYPE
              value: "kubernetes"
          args:
            - run
            - --log-level=info
            - --config-file=/etc/kuma.io/kuma-control-plane/config.yaml
          ports:
            - containerPort: 5681
            - containerPort: 5682
            - containerPort: 5443
            - containerPort: 5678
            - containerPort: 5653
              protocol: UDP
          livenessProbe:
            httpGet:
              path: /healthy
              port: 5680
          readinessProbe:
            httpGet:
              path: /ready
              port: 5680
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
            - name: general-tls-cert
              mountPath: /var/run/secrets/kuma.io/tls-cert
              readOnly: true
            - name: kuma-control-plane-config
              mountPath: /etc/kuma.io/kuma-control-plane
              readOnly: true
      volumes:
        - name: general-tls-cert
          secret:
            secretName: general-tls-secret
        - name: kuma-control-plane-config
          configMap:
            name: kuma-control-plane-config
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: kuma-admission-mutating-webhook-configuration
  namespace: kuma-system
  labels:
  
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
webhooks:
  - name: mesh.defaulter.kuma-admission.kuma.io
    failurePolicy: Fail
    clientConfig:
      caBundle: XYZ
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /default-kuma-io-v1alpha1-mesh
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - meshes
    sideEffects: None
  - name: owner-reference.kuma-admission.kuma.io
    failurePolicy: Fail
    clientConfig:
      caBundle: XYZ
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /owner-reference-kuma-io-v1alpha1
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
        resources:
          - circuitbreakers
          - externalservices
          - faultinjections
          - healthchecks
          - retries
          - proxytemplates
          - trafficlogs
          - trafficpermissions
          - trafficroutes
          - traffictraces
    
      
    sideEffects: None
  - name: kuma-injector.kuma.io
    failurePolicy: Ignore
    clientConfig:
      caBundle: XYZ
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /inject-sidecar
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
    sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: kuma-validating-webhook-configuration
  namespace: kuma-system
  labels:
  
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
webhooks:
  - name: validator.kuma-admission.kuma.io
    failurePolicy: Fail
    clientConfig:
      caBundle: XYZ
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /validate-kuma-io-v1alpha1
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - circuitbreakers
          - dataplanes
          - externalservices
          - faultinjections
          - healthchecks
          - retries
          - meshes
          - proxytemplates
          - trafficlogs
          - trafficpermissions
          - trafficroutes
          - traffictraces
          - zones
    
      
    sideEffects: None
  - name: service.validator.kuma-admission.kuma.io
    failurePolicy: Ignore
    clientConfig:
      caBundle: XYZ
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /validate-v1-service
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - services
    sideEffects: None
  - name: secret.validator.kuma-admission.kuma.io
    namespaceSelector:
      matchLabels:
        kuma.io/system-namespace: "true"
    failurePolicy: Ignore
    clientConfig:
      caBundle: XYZ
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /validate-v1-secret
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - secrets
    sideEffects: None