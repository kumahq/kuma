# bash completion for kumactl                              -*- shell-script -*-

__kumactl_debug()
{
    if [[ -n ${BASH_COMP_DEBUG_FILE:-} ]]; then
        echo "$*" >> "${BASH_COMP_DEBUG_FILE}"
    fi
}

# Homebrew on Macs have version 1.3 of bash-completion which doesn't include
# _init_completion. This is a very minimal version of that function.
__kumactl_init_completion()
{
    COMPREPLY=()
    _get_comp_words_by_ref "$@" cur prev words cword
}

__kumactl_index_of_word()
{
    local w word=$1
    shift
    index=0
    for w in "$@"; do
        [[ $w = "$word" ]] && return
        index=$((index+1))
    done
    index=-1
}

__kumactl_contains_word()
{
    local w word=$1; shift
    for w in "$@"; do
        [[ $w = "$word" ]] && return
    done
    return 1
}

__kumactl_handle_go_custom_completion()
{
    __kumactl_debug "${FUNCNAME[0]}: cur is ${cur}, words[*] is ${words[*]}, #words[@] is ${#words[@]}"

    local shellCompDirectiveError=1
    local shellCompDirectiveNoSpace=2
    local shellCompDirectiveNoFileComp=4
    local shellCompDirectiveFilterFileExt=8
    local shellCompDirectiveFilterDirs=16

    local out requestComp lastParam lastChar comp directive args

    # Prepare the command to request completions for the program.
    # Calling ${words[0]} instead of directly kumactl allows to handle aliases
    args=("${words[@]:1}")
    # Disable ActiveHelp which is not supported for bash completion v1
    requestComp="KUMACTL_ACTIVE_HELP=0 ${words[0]} __completeNoDesc ${args[*]}"

    lastParam=${words[$((${#words[@]}-1))]}
    lastChar=${lastParam:$((${#lastParam}-1)):1}
    __kumactl_debug "${FUNCNAME[0]}: lastParam ${lastParam}, lastChar ${lastChar}"

    if [ -z "${cur}" ] && [ "${lastChar}" != "=" ]; then
        # If the last parameter is complete (there is a space following it)
        # We add an extra empty parameter so we can indicate this to the go method.
        __kumactl_debug "${FUNCNAME[0]}: Adding extra empty parameter"
        requestComp="${requestComp} \"\""
    fi

    __kumactl_debug "${FUNCNAME[0]}: calling ${requestComp}"
    # Use eval to handle any environment variables and such
    out=$(eval "${requestComp}" 2>/dev/null)

    # Extract the directive integer at the very end of the output following a colon (:)
    directive=${out##*:}
    # Remove the directive
    out=${out%:*}
    if [ "${directive}" = "${out}" ]; then
        # There is not directive specified
        directive=0
    fi
    __kumactl_debug "${FUNCNAME[0]}: the completion directive is: ${directive}"
    __kumactl_debug "${FUNCNAME[0]}: the completions are: ${out}"

    if [ $((directive & shellCompDirectiveError)) -ne 0 ]; then
        # Error code.  No completion.
        __kumactl_debug "${FUNCNAME[0]}: received error from custom completion go code"
        return
    else
        if [ $((directive & shellCompDirectiveNoSpace)) -ne 0 ]; then
            if [[ $(type -t compopt) = "builtin" ]]; then
                __kumactl_debug "${FUNCNAME[0]}: activating no space"
                compopt -o nospace
            fi
        fi
        if [ $((directive & shellCompDirectiveNoFileComp)) -ne 0 ]; then
            if [[ $(type -t compopt) = "builtin" ]]; then
                __kumactl_debug "${FUNCNAME[0]}: activating no file completion"
                compopt +o default
            fi
        fi
    fi

    if [ $((directive & shellCompDirectiveFilterFileExt)) -ne 0 ]; then
        # File extension filtering
        local fullFilter filter filteringCmd
        # Do not use quotes around the $out variable or else newline
        # characters will be kept.
        for filter in ${out}; do
            fullFilter+="$filter|"
        done

        filteringCmd="_filedir $fullFilter"
        __kumactl_debug "File filtering command: $filteringCmd"
        $filteringCmd
    elif [ $((directive & shellCompDirectiveFilterDirs)) -ne 0 ]; then
        # File completion for directories only
        local subdir
        # Use printf to strip any trailing newline
        subdir=$(printf "%s" "${out}")
        if [ -n "$subdir" ]; then
            __kumactl_debug "Listing directories in $subdir"
            __kumactl_handle_subdirs_in_dir_flag "$subdir"
        else
            __kumactl_debug "Listing directories in ."
            _filedir -d
        fi
    else
        while IFS='' read -r comp; do
            COMPREPLY+=("$comp")
        done < <(compgen -W "${out}" -- "$cur")
    fi
}

__kumactl_handle_reply()
{
    __kumactl_debug "${FUNCNAME[0]}"
    local comp
    case $cur in
        -*)
            if [[ $(type -t compopt) = "builtin" ]]; then
                compopt -o nospace
            fi
            local allflags
            if [ ${#must_have_one_flag[@]} -ne 0 ]; then
                allflags=("${must_have_one_flag[@]}")
            else
                allflags=("${flags[*]} ${two_word_flags[*]}")
            fi
            while IFS='' read -r comp; do
                COMPREPLY+=("$comp")
            done < <(compgen -W "${allflags[*]}" -- "$cur")
            if [[ $(type -t compopt) = "builtin" ]]; then
                [[ "${COMPREPLY[0]}" == *= ]] || compopt +o nospace
            fi

            # complete after --flag=abc
            if [[ $cur == *=* ]]; then
                if [[ $(type -t compopt) = "builtin" ]]; then
                    compopt +o nospace
                fi

                local index flag
                flag="${cur%=*}"
                __kumactl_index_of_word "${flag}" "${flags_with_completion[@]}"
                COMPREPLY=()
                if [[ ${index} -ge 0 ]]; then
                    PREFIX=""
                    cur="${cur#*=}"
                    ${flags_completion[${index}]}
                    if [ -n "${ZSH_VERSION:-}" ]; then
                        # zsh completion needs --flag= prefix
                        eval "COMPREPLY=( \"\${COMPREPLY[@]/#/${flag}=}\" )"
                    fi
                fi
            fi

            if [[ -z "${flag_parsing_disabled}" ]]; then
                # If flag parsing is enabled, we have completed the flags and can return.
                # If flag parsing is disabled, we may not know all (or any) of the flags, so we fallthrough
                # to possibly call handle_go_custom_completion.
                return 0;
            fi
            ;;
    esac

    # check if we are handling a flag with special work handling
    local index
    __kumactl_index_of_word "${prev}" "${flags_with_completion[@]}"
    if [[ ${index} -ge 0 ]]; then
        ${flags_completion[${index}]}
        return
    fi

    # we are parsing a flag and don't have a special handler, no completion
    if [[ ${cur} != "${words[cword]}" ]]; then
        return
    fi

    local completions
    completions=("${commands[@]}")
    if [[ ${#must_have_one_noun[@]} -ne 0 ]]; then
        completions+=("${must_have_one_noun[@]}")
    elif [[ -n "${has_completion_function}" ]]; then
        # if a go completion function is provided, defer to that function
        __kumactl_handle_go_custom_completion
    fi
    if [[ ${#must_have_one_flag[@]} -ne 0 ]]; then
        completions+=("${must_have_one_flag[@]}")
    fi
    while IFS='' read -r comp; do
        COMPREPLY+=("$comp")
    done < <(compgen -W "${completions[*]}" -- "$cur")

    if [[ ${#COMPREPLY[@]} -eq 0 && ${#noun_aliases[@]} -gt 0 && ${#must_have_one_noun[@]} -ne 0 ]]; then
        while IFS='' read -r comp; do
            COMPREPLY+=("$comp")
        done < <(compgen -W "${noun_aliases[*]}" -- "$cur")
    fi

    if [[ ${#COMPREPLY[@]} -eq 0 ]]; then
        if declare -F __kumactl_custom_func >/dev/null; then
            # try command name qualified custom func
            __kumactl_custom_func
        else
            # otherwise fall back to unqualified for compatibility
            declare -F __custom_func >/dev/null && __custom_func
        fi
    fi

    # available in bash-completion >= 2, not always present on macOS
    if declare -F __ltrim_colon_completions >/dev/null; then
        __ltrim_colon_completions "$cur"
    fi

    # If there is only 1 completion and it is a flag with an = it will be completed
    # but we don't want a space after the =
    if [[ "${#COMPREPLY[@]}" -eq "1" ]] && [[ $(type -t compopt) = "builtin" ]] && [[ "${COMPREPLY[0]}" == --*= ]]; then
       compopt -o nospace
    fi
}

# The arguments should be in the form "ext1|ext2|extn"
__kumactl_handle_filename_extension_flag()
{
    local ext="$1"
    _filedir "@(${ext})"
}

__kumactl_handle_subdirs_in_dir_flag()
{
    local dir="$1"
    pushd "${dir}" >/dev/null 2>&1 && _filedir -d && popd >/dev/null 2>&1 || return
}

__kumactl_handle_flag()
{
    __kumactl_debug "${FUNCNAME[0]}: c is $c words[c] is ${words[c]}"

    # if a command required a flag, and we found it, unset must_have_one_flag()
    local flagname=${words[c]}
    local flagvalue=""
    # if the word contained an =
    if [[ ${words[c]} == *"="* ]]; then
        flagvalue=${flagname#*=} # take in as flagvalue after the =
        flagname=${flagname%=*} # strip everything after the =
        flagname="${flagname}=" # but put the = back
    fi
    __kumactl_debug "${FUNCNAME[0]}: looking for ${flagname}"
    if __kumactl_contains_word "${flagname}" "${must_have_one_flag[@]}"; then
        must_have_one_flag=()
    fi

    # if you set a flag which only applies to this command, don't show subcommands
    if __kumactl_contains_word "${flagname}" "${local_nonpersistent_flags[@]}"; then
      commands=()
    fi

    # keep flag value with flagname as flaghash
    # flaghash variable is an associative array which is only supported in bash > 3.
    if [[ -z "${BASH_VERSION:-}" || "${BASH_VERSINFO[0]:-}" -gt 3 ]]; then
        if [ -n "${flagvalue}" ] ; then
            flaghash[${flagname}]=${flagvalue}
        elif [ -n "${words[ $((c+1)) ]}" ] ; then
            flaghash[${flagname}]=${words[ $((c+1)) ]}
        else
            flaghash[${flagname}]="true" # pad "true" for bool flag
        fi
    fi

    # skip the argument to a two word flag
    if [[ ${words[c]} != *"="* ]] && __kumactl_contains_word "${words[c]}" "${two_word_flags[@]}"; then
        __kumactl_debug "${FUNCNAME[0]}: found a flag ${words[c]}, skip the next argument"
        c=$((c+1))
        # if we are looking for a flags value, don't show commands
        if [[ $c -eq $cword ]]; then
            commands=()
        fi
    fi

    c=$((c+1))

}

__kumactl_handle_noun()
{
    __kumactl_debug "${FUNCNAME[0]}: c is $c words[c] is ${words[c]}"

    if __kumactl_contains_word "${words[c]}" "${must_have_one_noun[@]}"; then
        must_have_one_noun=()
    elif __kumactl_contains_word "${words[c]}" "${noun_aliases[@]}"; then
        must_have_one_noun=()
    fi

    nouns+=("${words[c]}")
    c=$((c+1))
}

__kumactl_handle_command()
{
    __kumactl_debug "${FUNCNAME[0]}: c is $c words[c] is ${words[c]}"

    local next_command
    if [[ -n ${last_command} ]]; then
        next_command="_${last_command}_${words[c]//:/__}"
    else
        if [[ $c -eq 0 ]]; then
            next_command="_kumactl_root_command"
        else
            next_command="_${words[c]//:/__}"
        fi
    fi
    c=$((c+1))
    __kumactl_debug "${FUNCNAME[0]}: looking for ${next_command}"
    declare -F "$next_command" >/dev/null && $next_command
}

__kumactl_handle_word()
{
    if [[ $c -ge $cword ]]; then
        __kumactl_handle_reply
        return
    fi
    __kumactl_debug "${FUNCNAME[0]}: c is $c words[c] is ${words[c]}"
    if [[ "${words[c]}" == -* ]]; then
        __kumactl_handle_flag
    elif __kumactl_contains_word "${words[c]}" "${commands[@]}"; then
        __kumactl_handle_command
    elif [[ $c -eq 0 ]]; then
        __kumactl_handle_command
    elif __kumactl_contains_word "${words[c]}" "${command_aliases[@]}"; then
        # aliashash variable is an associative array which is only supported in bash > 3.
        if [[ -z "${BASH_VERSION:-}" || "${BASH_VERSINFO[0]:-}" -gt 3 ]]; then
            words[c]=${aliashash[${words[c]}]}
            __kumactl_handle_command
        else
            __kumactl_handle_noun
        fi
    else
        __kumactl_handle_noun
    fi
    __kumactl_handle_word
}

_kumactl_apply()
{
    last_command="kumactl_apply"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--dry-run")
    local_nonpersistent_flags+=("--dry-run")
    flags+=("--file=")
    two_word_flags+=("--file")
    two_word_flags+=("-f")
    local_nonpersistent_flags+=("--file")
    local_nonpersistent_flags+=("--file=")
    local_nonpersistent_flags+=("-f")
    flags+=("--var=")
    two_word_flags+=("--var")
    two_word_flags+=("-v")
    local_nonpersistent_flags+=("--var")
    local_nonpersistent_flags+=("--var=")
    local_nonpersistent_flags+=("-v")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_flag+=("--file=")
    must_have_one_flag+=("-f")
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_completion_bash()
{
    last_command="kumactl_completion_bash"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--help")
    flags+=("-h")
    local_nonpersistent_flags+=("--help")
    local_nonpersistent_flags+=("-h")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_completion_fish()
{
    last_command="kumactl_completion_fish"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_completion_zsh()
{
    last_command="kumactl_completion_zsh"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_completion()
{
    last_command="kumactl_completion"

    command_aliases=()

    commands=()
    commands+=("bash")
    commands+=("fish")
    commands+=("zsh")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_config_control-planes_add()
{
    last_command="kumactl_config_control-planes_add"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--address=")
    two_word_flags+=("--address")
    local_nonpersistent_flags+=("--address")
    local_nonpersistent_flags+=("--address=")
    flags+=("--auth-conf=")
    two_word_flags+=("--auth-conf")
    local_nonpersistent_flags+=("--auth-conf")
    local_nonpersistent_flags+=("--auth-conf=")
    flags+=("--auth-type=")
    two_word_flags+=("--auth-type")
    local_nonpersistent_flags+=("--auth-type")
    local_nonpersistent_flags+=("--auth-type=")
    flags+=("--ca-cert-file=")
    two_word_flags+=("--ca-cert-file")
    local_nonpersistent_flags+=("--ca-cert-file")
    local_nonpersistent_flags+=("--ca-cert-file=")
    flags+=("--client-cert-file=")
    two_word_flags+=("--client-cert-file")
    local_nonpersistent_flags+=("--client-cert-file")
    local_nonpersistent_flags+=("--client-cert-file=")
    flags+=("--client-key-file=")
    two_word_flags+=("--client-key-file")
    local_nonpersistent_flags+=("--client-key-file")
    local_nonpersistent_flags+=("--client-key-file=")
    flags+=("--headers=")
    two_word_flags+=("--headers")
    local_nonpersistent_flags+=("--headers")
    local_nonpersistent_flags+=("--headers=")
    flags+=("--name=")
    two_word_flags+=("--name")
    local_nonpersistent_flags+=("--name")
    local_nonpersistent_flags+=("--name=")
    flags+=("--overwrite")
    local_nonpersistent_flags+=("--overwrite")
    flags+=("--skip-verify")
    local_nonpersistent_flags+=("--skip-verify")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_flag+=("--address=")
    must_have_one_flag+=("--name=")
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_config_control-planes_list()
{
    last_command="kumactl_config_control-planes_list"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_config_control-planes_remove()
{
    last_command="kumactl_config_control-planes_remove"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--name=")
    two_word_flags+=("--name")
    local_nonpersistent_flags+=("--name")
    local_nonpersistent_flags+=("--name=")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_flag+=("--name=")
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_config_control-planes_switch()
{
    last_command="kumactl_config_control-planes_switch"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--name=")
    two_word_flags+=("--name")
    local_nonpersistent_flags+=("--name")
    local_nonpersistent_flags+=("--name=")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_flag+=("--name=")
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_config_control-planes()
{
    last_command="kumactl_config_control-planes"

    command_aliases=()

    commands=()
    commands+=("add")
    commands+=("list")
    commands+=("remove")
    commands+=("switch")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_config_view()
{
    last_command="kumactl_config_view"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_config()
{
    last_command="kumactl_config"

    command_aliases=()

    commands=()
    commands+=("control-planes")
    commands+=("view")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_delete()
{
    last_command="kumactl_delete"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_generate_dataplane-token()
{
    last_command="kumactl_generate_dataplane-token"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--name=")
    two_word_flags+=("--name")
    local_nonpersistent_flags+=("--name")
    local_nonpersistent_flags+=("--name=")
    flags+=("--proxy-type=")
    two_word_flags+=("--proxy-type")
    local_nonpersistent_flags+=("--proxy-type")
    local_nonpersistent_flags+=("--proxy-type=")
    flags+=("--tag=")
    two_word_flags+=("--tag")
    local_nonpersistent_flags+=("--tag")
    local_nonpersistent_flags+=("--tag=")
    flags+=("--valid-for=")
    two_word_flags+=("--valid-for")
    local_nonpersistent_flags+=("--valid-for")
    local_nonpersistent_flags+=("--valid-for=")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_generate_signing-key()
{
    last_command="kumactl_generate_signing-key"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_generate_tls-certificate()
{
    last_command="kumactl_generate_tls-certificate"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cert-file=")
    two_word_flags+=("--cert-file")
    local_nonpersistent_flags+=("--cert-file")
    local_nonpersistent_flags+=("--cert-file=")
    flags+=("--hostname=")
    two_word_flags+=("--hostname")
    local_nonpersistent_flags+=("--hostname")
    local_nonpersistent_flags+=("--hostname=")
    flags+=("--key-file=")
    two_word_flags+=("--key-file")
    local_nonpersistent_flags+=("--key-file")
    local_nonpersistent_flags+=("--key-file=")
    flags+=("--key-type=")
    two_word_flags+=("--key-type")
    local_nonpersistent_flags+=("--key-type")
    local_nonpersistent_flags+=("--key-type=")
    flags+=("--type=")
    two_word_flags+=("--type")
    local_nonpersistent_flags+=("--type")
    local_nonpersistent_flags+=("--type=")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_flag+=("--hostname=")
    must_have_one_flag+=("--type=")
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_generate_user-token()
{
    last_command="kumactl_generate_user-token"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--group=")
    two_word_flags+=("--group")
    local_nonpersistent_flags+=("--group")
    local_nonpersistent_flags+=("--group=")
    flags+=("--name=")
    two_word_flags+=("--name")
    local_nonpersistent_flags+=("--name")
    local_nonpersistent_flags+=("--name=")
    flags+=("--valid-for=")
    two_word_flags+=("--valid-for")
    local_nonpersistent_flags+=("--valid-for")
    local_nonpersistent_flags+=("--valid-for=")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_flag+=("--name=")
    must_have_one_flag+=("--valid-for=")
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_generate_zone-ingress-token()
{
    last_command="kumactl_generate_zone-ingress-token"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--valid-for=")
    two_word_flags+=("--valid-for")
    local_nonpersistent_flags+=("--valid-for")
    local_nonpersistent_flags+=("--valid-for=")
    flags+=("--zone=")
    two_word_flags+=("--zone")
    local_nonpersistent_flags+=("--zone")
    local_nonpersistent_flags+=("--zone=")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_generate_zone-token()
{
    last_command="kumactl_generate_zone-token"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--scope=")
    two_word_flags+=("--scope")
    local_nonpersistent_flags+=("--scope")
    local_nonpersistent_flags+=("--scope=")
    flags+=("--valid-for=")
    two_word_flags+=("--valid-for")
    local_nonpersistent_flags+=("--valid-for")
    local_nonpersistent_flags+=("--valid-for=")
    flags+=("--zone=")
    two_word_flags+=("--zone")
    local_nonpersistent_flags+=("--zone")
    local_nonpersistent_flags+=("--zone=")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_flag+=("--valid-for=")
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_generate()
{
    last_command="kumactl_generate"

    command_aliases=()

    commands=()
    commands+=("dataplane-token")
    commands+=("signing-key")
    commands+=("tls-certificate")
    commands+=("user-token")
    commands+=("zone-ingress-token")
    commands+=("zone-token")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_circuit-breaker()
{
    last_command="kumactl_get_circuit-breaker"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_circuit-breakers()
{
    last_command="kumactl_get_circuit-breakers"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_dataplane()
{
    last_command="kumactl_get_dataplane"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_dataplanes()
{
    last_command="kumactl_get_dataplanes"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_external-service()
{
    last_command="kumactl_get_external-service"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_external-services()
{
    last_command="kumactl_get_external-services"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_fault-injection()
{
    last_command="kumactl_get_fault-injection"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_fault-injections()
{
    last_command="kumactl_get_fault-injections"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_global-secret()
{
    last_command="kumactl_get_global-secret"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_global-secrets()
{
    last_command="kumactl_get_global-secrets"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_healthcheck()
{
    last_command="kumactl_get_healthcheck"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_healthchecks()
{
    last_command="kumactl_get_healthchecks"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_mesh()
{
    last_command="kumactl_get_mesh"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_meshes()
{
    last_command="kumactl_get_meshes"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_meshgateway()
{
    last_command="kumactl_get_meshgateway"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_meshgatewayroute()
{
    last_command="kumactl_get_meshgatewayroute"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_meshgatewayroutes()
{
    last_command="kumactl_get_meshgatewayroutes"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_meshgateways()
{
    last_command="kumactl_get_meshgateways"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_meshtrafficpermission()
{
    last_command="kumactl_get_meshtrafficpermission"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_meshtrafficpermissions()
{
    last_command="kumactl_get_meshtrafficpermissions"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_proxytemplate()
{
    last_command="kumactl_get_proxytemplate"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_proxytemplates()
{
    last_command="kumactl_get_proxytemplates"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_rate-limit()
{
    last_command="kumactl_get_rate-limit"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_rate-limits()
{
    last_command="kumactl_get_rate-limits"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_retries()
{
    last_command="kumactl_get_retries"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_retry()
{
    last_command="kumactl_get_retry"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_secret()
{
    last_command="kumactl_get_secret"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_secrets()
{
    last_command="kumactl_get_secrets"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_timeout()
{
    last_command="kumactl_get_timeout"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_timeouts()
{
    last_command="kumactl_get_timeouts"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_traffic-log()
{
    last_command="kumactl_get_traffic-log"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_traffic-logs()
{
    last_command="kumactl_get_traffic-logs"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_traffic-permission()
{
    last_command="kumactl_get_traffic-permission"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_traffic-permissions()
{
    last_command="kumactl_get_traffic-permissions"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_traffic-route()
{
    last_command="kumactl_get_traffic-route"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_traffic-routes()
{
    last_command="kumactl_get_traffic-routes"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_traffic-trace()
{
    last_command="kumactl_get_traffic-trace"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_traffic-traces()
{
    last_command="kumactl_get_traffic-traces"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_virtual-outbound()
{
    last_command="kumactl_get_virtual-outbound"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_virtual-outbounds()
{
    last_command="kumactl_get_virtual-outbounds"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_zone()
{
    last_command="kumactl_get_zone"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_zone-ingress()
{
    last_command="kumactl_get_zone-ingress"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_zone-ingresses()
{
    last_command="kumactl_get_zone-ingresses"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_zoneegress()
{
    last_command="kumactl_get_zoneegress"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_zoneegresses()
{
    last_command="kumactl_get_zoneegresses"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get_zones()
{
    last_command="kumactl_get_zones"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--offset=")
    two_word_flags+=("--offset")
    flags+=("--size=")
    two_word_flags+=("--size")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_get()
{
    last_command="kumactl_get"

    command_aliases=()

    commands=()
    commands+=("circuit-breaker")
    commands+=("circuit-breakers")
    commands+=("dataplane")
    commands+=("dataplanes")
    commands+=("external-service")
    commands+=("external-services")
    commands+=("fault-injection")
    commands+=("fault-injections")
    commands+=("global-secret")
    commands+=("global-secrets")
    commands+=("healthcheck")
    commands+=("healthchecks")
    commands+=("mesh")
    commands+=("meshes")
    commands+=("meshgateway")
    commands+=("meshgatewayroute")
    commands+=("meshgatewayroutes")
    commands+=("meshgateways")
    commands+=("meshtrafficpermission")
    commands+=("meshtrafficpermissions")
    commands+=("proxytemplate")
    commands+=("proxytemplates")
    commands+=("rate-limit")
    commands+=("rate-limits")
    commands+=("retries")
    commands+=("retry")
    commands+=("secret")
    commands+=("secrets")
    commands+=("timeout")
    commands+=("timeouts")
    commands+=("traffic-log")
    commands+=("traffic-logs")
    commands+=("traffic-permission")
    commands+=("traffic-permissions")
    commands+=("traffic-route")
    commands+=("traffic-routes")
    commands+=("traffic-trace")
    commands+=("traffic-traces")
    commands+=("virtual-outbound")
    commands+=("virtual-outbounds")
    commands+=("zone")
    commands+=("zone-ingress")
    commands+=("zone-ingresses")
    commands+=("zoneegress")
    commands+=("zoneegresses")
    commands+=("zones")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_help()
{
    last_command="kumactl_help"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    has_completion_function=1
    noun_aliases=()
}

_kumactl_inspect_circuit-breaker()
{
    last_command="kumactl_inspect_circuit-breaker"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_dataplane()
{
    last_command="kumactl_inspect_dataplane"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--type=")
    two_word_flags+=("--type")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_dataplanes()
{
    last_command="kumactl_inspect_dataplanes"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--gateway")
    flags+=("--ingress")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--tag=")
    two_word_flags+=("--tag")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_fault-injection()
{
    last_command="kumactl_inspect_fault-injection"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_healthcheck()
{
    last_command="kumactl_inspect_healthcheck"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_meshes()
{
    last_command="kumactl_inspect_meshes"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_meshgateway()
{
    last_command="kumactl_inspect_meshgateway"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_meshtrafficpermission()
{
    last_command="kumactl_inspect_meshtrafficpermission"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_proxytemplate()
{
    last_command="kumactl_inspect_proxytemplate"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_rate-limit()
{
    last_command="kumactl_inspect_rate-limit"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_retry()
{
    last_command="kumactl_inspect_retry"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_services()
{
    last_command="kumactl_inspect_services"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_timeout()
{
    last_command="kumactl_inspect_timeout"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_traffic-log()
{
    last_command="kumactl_inspect_traffic-log"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_traffic-permission()
{
    last_command="kumactl_inspect_traffic-permission"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_traffic-route()
{
    last_command="kumactl_inspect_traffic-route"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_traffic-trace()
{
    last_command="kumactl_inspect_traffic-trace"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_zone-ingresses()
{
    last_command="kumactl_inspect_zone-ingresses"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_zoneegress()
{
    last_command="kumactl_inspect_zoneegress"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--type=")
    two_word_flags+=("--type")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_zoneegresses()
{
    last_command="kumactl_inspect_zoneegresses"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_zoneingress()
{
    last_command="kumactl_inspect_zoneingress"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--type=")
    two_word_flags+=("--type")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect_zones()
{
    last_command="kumactl_inspect_zones"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")
    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_inspect()
{
    last_command="kumactl_inspect"

    command_aliases=()

    commands=()
    commands+=("circuit-breaker")
    commands+=("dataplane")
    commands+=("dataplanes")
    commands+=("fault-injection")
    commands+=("healthcheck")
    commands+=("meshes")
    commands+=("meshgateway")
    commands+=("meshtrafficpermission")
    commands+=("proxytemplate")
    commands+=("rate-limit")
    commands+=("retry")
    commands+=("services")
    commands+=("timeout")
    commands+=("traffic-log")
    commands+=("traffic-permission")
    commands+=("traffic-route")
    commands+=("traffic-trace")
    commands+=("zone-ingresses")
    commands+=("zoneegress")
    commands+=("zoneegresses")
    commands+=("zoneingress")
    commands+=("zones")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--output=")
    two_word_flags+=("--output")
    two_word_flags+=("-o")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install_control-plane()
{
    last_command="kumactl_install_control-plane"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--cni-bin-dir=")
    two_word_flags+=("--cni-bin-dir")
    local_nonpersistent_flags+=("--cni-bin-dir")
    local_nonpersistent_flags+=("--cni-bin-dir=")
    flags+=("--cni-chained")
    local_nonpersistent_flags+=("--cni-chained")
    flags+=("--cni-conf-name=")
    two_word_flags+=("--cni-conf-name")
    local_nonpersistent_flags+=("--cni-conf-name")
    local_nonpersistent_flags+=("--cni-conf-name=")
    flags+=("--cni-enabled")
    local_nonpersistent_flags+=("--cni-enabled")
    flags+=("--cni-net-dir=")
    two_word_flags+=("--cni-net-dir")
    local_nonpersistent_flags+=("--cni-net-dir")
    local_nonpersistent_flags+=("--cni-net-dir=")
    flags+=("--cni-node-selector=")
    two_word_flags+=("--cni-node-selector")
    local_nonpersistent_flags+=("--cni-node-selector")
    local_nonpersistent_flags+=("--cni-node-selector=")
    flags+=("--cni-registry=")
    two_word_flags+=("--cni-registry")
    local_nonpersistent_flags+=("--cni-registry")
    local_nonpersistent_flags+=("--cni-registry=")
    flags+=("--cni-repository=")
    two_word_flags+=("--cni-repository")
    local_nonpersistent_flags+=("--cni-repository")
    local_nonpersistent_flags+=("--cni-repository=")
    flags+=("--cni-version=")
    two_word_flags+=("--cni-version")
    local_nonpersistent_flags+=("--cni-version")
    local_nonpersistent_flags+=("--cni-version=")
    flags+=("--control-plane-node-selector=")
    two_word_flags+=("--control-plane-node-selector")
    local_nonpersistent_flags+=("--control-plane-node-selector")
    local_nonpersistent_flags+=("--control-plane-node-selector=")
    flags+=("--control-plane-registry=")
    two_word_flags+=("--control-plane-registry")
    local_nonpersistent_flags+=("--control-plane-registry")
    local_nonpersistent_flags+=("--control-plane-registry=")
    flags+=("--control-plane-repository=")
    two_word_flags+=("--control-plane-repository")
    local_nonpersistent_flags+=("--control-plane-repository")
    local_nonpersistent_flags+=("--control-plane-repository=")
    flags+=("--control-plane-service-name=")
    two_word_flags+=("--control-plane-service-name")
    local_nonpersistent_flags+=("--control-plane-service-name")
    local_nonpersistent_flags+=("--control-plane-service-name=")
    flags+=("--control-plane-version=")
    two_word_flags+=("--control-plane-version")
    local_nonpersistent_flags+=("--control-plane-version")
    local_nonpersistent_flags+=("--control-plane-version=")
    flags+=("--dataplane-init-registry=")
    two_word_flags+=("--dataplane-init-registry")
    local_nonpersistent_flags+=("--dataplane-init-registry")
    local_nonpersistent_flags+=("--dataplane-init-registry=")
    flags+=("--dataplane-init-repository=")
    two_word_flags+=("--dataplane-init-repository")
    local_nonpersistent_flags+=("--dataplane-init-repository")
    local_nonpersistent_flags+=("--dataplane-init-repository=")
    flags+=("--dataplane-init-version=")
    two_word_flags+=("--dataplane-init-version")
    local_nonpersistent_flags+=("--dataplane-init-version")
    local_nonpersistent_flags+=("--dataplane-init-version=")
    flags+=("--dataplane-registry=")
    two_word_flags+=("--dataplane-registry")
    local_nonpersistent_flags+=("--dataplane-registry")
    local_nonpersistent_flags+=("--dataplane-registry=")
    flags+=("--dataplane-repository=")
    two_word_flags+=("--dataplane-repository")
    local_nonpersistent_flags+=("--dataplane-repository")
    local_nonpersistent_flags+=("--dataplane-repository=")
    flags+=("--dataplane-version=")
    two_word_flags+=("--dataplane-version")
    local_nonpersistent_flags+=("--dataplane-version")
    local_nonpersistent_flags+=("--dataplane-version=")
    flags+=("--dump-values")
    local_nonpersistent_flags+=("--dump-values")
    flags+=("--egress-drain-time=")
    two_word_flags+=("--egress-drain-time")
    local_nonpersistent_flags+=("--egress-drain-time")
    local_nonpersistent_flags+=("--egress-drain-time=")
    flags+=("--egress-enabled")
    local_nonpersistent_flags+=("--egress-enabled")
    flags+=("--egress-node-selector=")
    two_word_flags+=("--egress-node-selector")
    local_nonpersistent_flags+=("--egress-node-selector")
    local_nonpersistent_flags+=("--egress-node-selector=")
    flags+=("--egress-service-type=")
    two_word_flags+=("--egress-service-type")
    local_nonpersistent_flags+=("--egress-service-type")
    local_nonpersistent_flags+=("--egress-service-type=")
    flags+=("--env-var=")
    two_word_flags+=("--env-var")
    local_nonpersistent_flags+=("--env-var")
    local_nonpersistent_flags+=("--env-var=")
    flags+=("--experimental-gatewayapi")
    local_nonpersistent_flags+=("--experimental-gatewayapi")
    flags+=("--hooks-node-selector=")
    two_word_flags+=("--hooks-node-selector")
    local_nonpersistent_flags+=("--hooks-node-selector")
    local_nonpersistent_flags+=("--hooks-node-selector=")
    flags+=("--image-pull-policy=")
    two_word_flags+=("--image-pull-policy")
    local_nonpersistent_flags+=("--image-pull-policy")
    local_nonpersistent_flags+=("--image-pull-policy=")
    flags+=("--ingress-drain-time=")
    two_word_flags+=("--ingress-drain-time")
    local_nonpersistent_flags+=("--ingress-drain-time")
    local_nonpersistent_flags+=("--ingress-drain-time=")
    flags+=("--ingress-enabled")
    local_nonpersistent_flags+=("--ingress-enabled")
    flags+=("--ingress-node-selector=")
    two_word_flags+=("--ingress-node-selector")
    local_nonpersistent_flags+=("--ingress-node-selector")
    local_nonpersistent_flags+=("--ingress-node-selector=")
    flags+=("--ingress-use-node-port")
    local_nonpersistent_flags+=("--ingress-use-node-port")
    flags+=("--injector-failure-policy=")
    two_word_flags+=("--injector-failure-policy")
    local_nonpersistent_flags+=("--injector-failure-policy")
    local_nonpersistent_flags+=("--injector-failure-policy=")
    flags+=("--kds-global-address=")
    two_word_flags+=("--kds-global-address")
    local_nonpersistent_flags+=("--kds-global-address")
    local_nonpersistent_flags+=("--kds-global-address=")
    flags+=("--mode=")
    two_word_flags+=("--mode")
    local_nonpersistent_flags+=("--mode")
    local_nonpersistent_flags+=("--mode=")
    flags+=("--namespace=")
    two_word_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace=")
    flags+=("--registry=")
    two_word_flags+=("--registry")
    local_nonpersistent_flags+=("--registry")
    local_nonpersistent_flags+=("--registry=")
    flags+=("--set=")
    two_word_flags+=("--set")
    local_nonpersistent_flags+=("--set")
    local_nonpersistent_flags+=("--set=")
    flags+=("--tls-api-server-client-certs-secret=")
    two_word_flags+=("--tls-api-server-client-certs-secret")
    local_nonpersistent_flags+=("--tls-api-server-client-certs-secret")
    local_nonpersistent_flags+=("--tls-api-server-client-certs-secret=")
    flags+=("--tls-api-server-secret=")
    two_word_flags+=("--tls-api-server-secret")
    local_nonpersistent_flags+=("--tls-api-server-secret")
    local_nonpersistent_flags+=("--tls-api-server-secret=")
    flags+=("--tls-general-ca-bundle=")
    two_word_flags+=("--tls-general-ca-bundle")
    local_nonpersistent_flags+=("--tls-general-ca-bundle")
    local_nonpersistent_flags+=("--tls-general-ca-bundle=")
    flags+=("--tls-general-ca-secret=")
    two_word_flags+=("--tls-general-ca-secret")
    local_nonpersistent_flags+=("--tls-general-ca-secret")
    local_nonpersistent_flags+=("--tls-general-ca-secret=")
    flags+=("--tls-general-secret=")
    two_word_flags+=("--tls-general-secret")
    local_nonpersistent_flags+=("--tls-general-secret")
    local_nonpersistent_flags+=("--tls-general-secret=")
    flags+=("--tls-kds-global-server-secret=")
    two_word_flags+=("--tls-kds-global-server-secret")
    local_nonpersistent_flags+=("--tls-kds-global-server-secret")
    local_nonpersistent_flags+=("--tls-kds-global-server-secret=")
    flags+=("--tls-kds-zone-client-secret=")
    two_word_flags+=("--tls-kds-zone-client-secret")
    local_nonpersistent_flags+=("--tls-kds-zone-client-secret")
    local_nonpersistent_flags+=("--tls-kds-zone-client-secret=")
    flags+=("--use-node-port")
    local_nonpersistent_flags+=("--use-node-port")
    flags+=("--values=")
    two_word_flags+=("--values")
    two_word_flags+=("-f")
    local_nonpersistent_flags+=("--values")
    local_nonpersistent_flags+=("--values=")
    local_nonpersistent_flags+=("-f")
    flags+=("--version=")
    two_word_flags+=("--version")
    local_nonpersistent_flags+=("--version")
    local_nonpersistent_flags+=("--version=")
    flags+=("--without-kubernetes-connection")
    local_nonpersistent_flags+=("--without-kubernetes-connection")
    flags+=("--zone=")
    two_word_flags+=("--zone")
    local_nonpersistent_flags+=("--zone")
    local_nonpersistent_flags+=("--zone=")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install_crds()
{
    last_command="kumactl_install_crds"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--experimental-gatewayapi")
    local_nonpersistent_flags+=("--experimental-gatewayapi")
    flags+=("--only-missing")
    local_nonpersistent_flags+=("--only-missing")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install_demo()
{
    last_command="kumactl_install_demo"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--namespace=")
    two_word_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace=")
    flags+=("--without-gateway")
    local_nonpersistent_flags+=("--without-gateway")
    flags+=("--zone=")
    two_word_flags+=("--zone")
    local_nonpersistent_flags+=("--zone")
    local_nonpersistent_flags+=("--zone=")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install_gateway_kong()
{
    last_command="kumactl_install_gateway_kong"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    local_nonpersistent_flags+=("--mesh")
    local_nonpersistent_flags+=("--mesh=")
    flags+=("--namespace=")
    two_word_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace=")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install_gateway_kong-enterprise()
{
    last_command="kumactl_install_gateway_kong-enterprise"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--license-path=")
    two_word_flags+=("--license-path")
    local_nonpersistent_flags+=("--license-path")
    local_nonpersistent_flags+=("--license-path=")
    flags+=("--namespace=")
    two_word_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace=")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_flag+=("--license-path=")
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install_gateway()
{
    last_command="kumactl_install_gateway"

    command_aliases=()

    commands=()
    commands+=("kong")
    commands+=("kong-enterprise")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install_logging()
{
    last_command="kumactl_install_logging"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--namespace=")
    two_word_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace=")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install_metrics()
{
    last_command="kumactl_install_metrics"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--jaeger-address=")
    two_word_flags+=("--jaeger-address")
    local_nonpersistent_flags+=("--jaeger-address")
    local_nonpersistent_flags+=("--jaeger-address=")
    flags+=("--kuma-cp-address=")
    two_word_flags+=("--kuma-cp-address")
    local_nonpersistent_flags+=("--kuma-cp-address")
    local_nonpersistent_flags+=("--kuma-cp-address=")
    flags+=("--loki-address=")
    two_word_flags+=("--loki-address")
    local_nonpersistent_flags+=("--loki-address")
    local_nonpersistent_flags+=("--loki-address=")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--namespace=")
    two_word_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace=")
    flags+=("--without-grafana")
    local_nonpersistent_flags+=("--without-grafana")
    flags+=("--without-prometheus")
    local_nonpersistent_flags+=("--without-prometheus")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install_observability()
{
    last_command="kumactl_install_observability"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--components=")
    two_word_flags+=("--components")
    local_nonpersistent_flags+=("--components")
    local_nonpersistent_flags+=("--components=")
    flags+=("--jaeger-address=")
    two_word_flags+=("--jaeger-address")
    local_nonpersistent_flags+=("--jaeger-address")
    local_nonpersistent_flags+=("--jaeger-address=")
    flags+=("--kuma-cp-address=")
    two_word_flags+=("--kuma-cp-address")
    local_nonpersistent_flags+=("--kuma-cp-address")
    local_nonpersistent_flags+=("--kuma-cp-address=")
    flags+=("--loki-address=")
    two_word_flags+=("--loki-address")
    local_nonpersistent_flags+=("--loki-address")
    local_nonpersistent_flags+=("--loki-address=")
    flags+=("--mesh=")
    two_word_flags+=("--mesh")
    two_word_flags+=("-m")
    flags+=("--namespace=")
    two_word_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace=")
    flags+=("--prometheus-address=")
    two_word_flags+=("--prometheus-address")
    local_nonpersistent_flags+=("--prometheus-address")
    local_nonpersistent_flags+=("--prometheus-address=")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install_tracing()
{
    last_command="kumactl_install_tracing"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--namespace=")
    two_word_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace")
    local_nonpersistent_flags+=("--namespace=")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install_transparent-proxy()
{
    last_command="kumactl_install_transparent-proxy"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--dry-run")
    local_nonpersistent_flags+=("--dry-run")
    flags+=("--ebpf-bpffs-path=")
    two_word_flags+=("--ebpf-bpffs-path")
    local_nonpersistent_flags+=("--ebpf-bpffs-path")
    local_nonpersistent_flags+=("--ebpf-bpffs-path=")
    flags+=("--ebpf-enabled")
    local_nonpersistent_flags+=("--ebpf-enabled")
    flags+=("--ebpf-instance-ip=")
    two_word_flags+=("--ebpf-instance-ip")
    local_nonpersistent_flags+=("--ebpf-instance-ip")
    local_nonpersistent_flags+=("--ebpf-instance-ip=")
    flags+=("--ebpf-programs-source-path=")
    two_word_flags+=("--ebpf-programs-source-path")
    local_nonpersistent_flags+=("--ebpf-programs-source-path")
    local_nonpersistent_flags+=("--ebpf-programs-source-path=")
    flags+=("--exclude-inbound-ports=")
    two_word_flags+=("--exclude-inbound-ports")
    local_nonpersistent_flags+=("--exclude-inbound-ports")
    local_nonpersistent_flags+=("--exclude-inbound-ports=")
    flags+=("--exclude-outbound-ports=")
    two_word_flags+=("--exclude-outbound-ports")
    local_nonpersistent_flags+=("--exclude-outbound-ports")
    local_nonpersistent_flags+=("--exclude-outbound-ports=")
    flags+=("--exclude-outbound-tcp-ports-for-uids=")
    two_word_flags+=("--exclude-outbound-tcp-ports-for-uids")
    local_nonpersistent_flags+=("--exclude-outbound-tcp-ports-for-uids")
    local_nonpersistent_flags+=("--exclude-outbound-tcp-ports-for-uids=")
    flags+=("--exclude-outbound-udp-ports-for-uids=")
    two_word_flags+=("--exclude-outbound-udp-ports-for-uids")
    local_nonpersistent_flags+=("--exclude-outbound-udp-ports-for-uids")
    local_nonpersistent_flags+=("--exclude-outbound-udp-ports-for-uids=")
    flags+=("--experimental-transparent-proxy-engine")
    local_nonpersistent_flags+=("--experimental-transparent-proxy-engine")
    flags+=("--kuma-dp-uid=")
    two_word_flags+=("--kuma-dp-uid")
    local_nonpersistent_flags+=("--kuma-dp-uid")
    local_nonpersistent_flags+=("--kuma-dp-uid=")
    flags+=("--kuma-dp-user=")
    two_word_flags+=("--kuma-dp-user")
    local_nonpersistent_flags+=("--kuma-dp-user")
    local_nonpersistent_flags+=("--kuma-dp-user=")
    flags+=("--redirect-all-dns-traffic")
    local_nonpersistent_flags+=("--redirect-all-dns-traffic")
    flags+=("--redirect-dns")
    local_nonpersistent_flags+=("--redirect-dns")
    flags+=("--redirect-dns-port=")
    two_word_flags+=("--redirect-dns-port")
    local_nonpersistent_flags+=("--redirect-dns-port")
    local_nonpersistent_flags+=("--redirect-dns-port=")
    flags+=("--redirect-dns-upstream-target-chain=")
    two_word_flags+=("--redirect-dns-upstream-target-chain")
    local_nonpersistent_flags+=("--redirect-dns-upstream-target-chain")
    local_nonpersistent_flags+=("--redirect-dns-upstream-target-chain=")
    flags+=("--redirect-inbound")
    local_nonpersistent_flags+=("--redirect-inbound")
    flags+=("--redirect-inbound-port=")
    two_word_flags+=("--redirect-inbound-port")
    local_nonpersistent_flags+=("--redirect-inbound-port")
    local_nonpersistent_flags+=("--redirect-inbound-port=")
    flags+=("--redirect-inbound-port-v6=")
    two_word_flags+=("--redirect-inbound-port-v6")
    local_nonpersistent_flags+=("--redirect-inbound-port-v6")
    local_nonpersistent_flags+=("--redirect-inbound-port-v6=")
    flags+=("--redirect-outbound-port=")
    two_word_flags+=("--redirect-outbound-port")
    local_nonpersistent_flags+=("--redirect-outbound-port")
    local_nonpersistent_flags+=("--redirect-outbound-port=")
    flags+=("--skip-dns-conntrack-zone-split")
    local_nonpersistent_flags+=("--skip-dns-conntrack-zone-split")
    flags+=("--store-firewalld")
    local_nonpersistent_flags+=("--store-firewalld")
    flags+=("--verbose")
    local_nonpersistent_flags+=("--verbose")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_install()
{
    last_command="kumactl_install"

    command_aliases=()

    commands=()
    commands+=("control-plane")
    commands+=("crds")
    commands+=("demo")
    commands+=("gateway")
    commands+=("logging")
    commands+=("metrics")
    commands+=("observability")
    commands+=("tracing")
    commands+=("transparent-proxy")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_uninstall_transparent-proxy()
{
    last_command="kumactl_uninstall_transparent-proxy"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--dry-run")
    local_nonpersistent_flags+=("--dry-run")
    flags+=("--verbose")
    local_nonpersistent_flags+=("--verbose")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_uninstall()
{
    last_command="kumactl_uninstall"

    command_aliases=()

    commands=()
    commands+=("transparent-proxy")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_version()
{
    last_command="kumactl_version"

    command_aliases=()

    commands=()

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--detailed")
    flags+=("-a")
    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

_kumactl_root_command()
{
    last_command="kumactl"

    command_aliases=()

    commands=()
    commands+=("apply")
    commands+=("completion")
    commands+=("config")
    commands+=("delete")
    commands+=("generate")
    commands+=("get")
    commands+=("help")
    commands+=("inspect")
    commands+=("install")
    commands+=("uninstall")
    commands+=("version")

    flags=()
    two_word_flags=()
    local_nonpersistent_flags=()
    flags_with_completion=()
    flags_completion=()

    flags+=("--api-timeout=")
    two_word_flags+=("--api-timeout")
    flags+=("--config-file=")
    two_word_flags+=("--config-file")
    flags+=("--log-level=")
    two_word_flags+=("--log-level")
    flags+=("--no-config")

    must_have_one_flag=()
    must_have_one_noun=()
    noun_aliases=()
}

__start_kumactl()
{
    local cur prev words cword split
    declare -A flaghash 2>/dev/null || :
    declare -A aliashash 2>/dev/null || :
    if declare -F _init_completion >/dev/null 2>&1; then
        _init_completion -s || return
    else
        __kumactl_init_completion -n "=" || return
    fi

    local c=0
    local flag_parsing_disabled=
    local flags=()
    local two_word_flags=()
    local local_nonpersistent_flags=()
    local flags_with_completion=()
    local flags_completion=()
    local commands=("kumactl")
    local command_aliases=()
    local must_have_one_flag=()
    local must_have_one_noun=()
    local has_completion_function=""
    local last_command=""
    local nouns=()
    local noun_aliases=()

    __kumactl_handle_word
}

if [[ $(type -t compopt) = "builtin" ]]; then
    complete -o default -F __start_kumactl kumactl
else
    complete -o default -o nospace -F __start_kumactl kumactl
fi

# ex: ts=4 sw=4 et filetype=sh
