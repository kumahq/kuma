apiVersion: v1
kind: Pod
metadata:
  annotations:
    kuma.io/mesh: default
    kuma.io/sidecar-injected: "true"
    kuma.io/transparent-proxying: enabled
    kuma.io/transparent-proxying-port: "15001"
  creationTimestamp: null
  generateName: coredns-fb8b8dccf-
  labels:
    k8s-app: kube-dns
    pod-template-hash: fb8b8dccf
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: coredns-fb8b8dccf
    uid: 844452a6-aec8-11e9-9753-0242ac110002
spec:
  containers:
  - args:
    - -conf
    - /etc/coredns/Corefile
    image: k8s.gcr.io/coredns:1.3.1
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 5
      httpGet:
        path: /health
        port: 8080
        scheme: HTTP
      initialDelaySeconds: 60
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    name: coredns
    ports:
    - containerPort: 53
      name: dns
      protocol: UDP
    - containerPort: 53
      name: dns-tcp
      protocol: TCP
    - containerPort: 9153
      name: metrics
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /health
        port: 8080
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      limits:
        memory: 170Mi
      requests:
        cpu: 100m
        memory: 70Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        add:
        - NET_BIND_SERVICE
        drop:
        - all
      procMount: Default
      readOnlyRootFilesystem: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/coredns
      name: config-volume
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: coredns-token-9gmrh
      readOnly: true
  - args:
    - run
    - --log-level=info
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: INSTANCE_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
    - name: KUMA_CONTROL_PLANE_API_SERVER_URL
      value: http://kuma-control-plane.kuma-system:5681
    - name: KUMA_DATAPLANE_MESH
      value: default
    - name: KUMA_DATAPLANE_NAME
      value: $(POD_NAME).$(POD_NAMESPACE)
    - name: KUMA_DATAPLANE_ADMIN_PORT
      value: "9901"
    - name: KUMA_DATAPLANE_DRAIN_TIME
      value: 31s
    - name: KUMA_DATAPLANE_RUNTIME_TOKEN_PATH
      value: /var/run/secrets/kubernetes.io/serviceaccount/token
    image: kuma/kuma-sidecar:latest
    imagePullPolicy: IfNotPresent
    livenessProbe:
      exec:
        command:
        - wget
        - -qO-
        - http://127.0.0.1:9901
      failureThreshold: 212
      initialDelaySeconds: 260
      periodSeconds: 25
      successThreshold: 1
      timeoutSeconds: 23
    name: kuma-sidecar
    readinessProbe:
      exec:
        command:
        - wget
        - -qO-
        - http://127.0.0.1:9901
      failureThreshold: 112
      initialDelaySeconds: 11
      periodSeconds: 15
      successThreshold: 11
      timeoutSeconds: 13
    resources:
      limits:
        cpu: 1100m
        memory: 1512Mi
      requests:
        cpu: 150m
        memory: 164Mi
    securityContext:
      runAsGroup: 5678
      runAsUser: 5678
    volumeMounts:
    - name: coredns-token-9gmrh
      readOnly: true
      mountPath: "/var/run/secrets/kubernetes.io/serviceaccount"
  dnsPolicy: Default
  enableServiceLinks: true
  initContainers:
  - args:
    - -p
    - "15001"
    - -u
    - "5678"
    - -g
    - "5678"
    - -m
    - REDIRECT
    - -i
    - '*'
    - -b
    - '*'
    image: kuma/kuma-init:latest
    imagePullPolicy: IfNotPresent
    name: kuma-init
    resources:
      limits:
        cpu: 100m
        memory: 50M
      requests:
        cpu: 10m
        memory: 10M
    securityContext:
      capabilities:
        add:
        - NET_ADMIN
      runAsGroup: 0
      runAsUser: 0
  nodeSelector:
    beta.kubernetes.io/os: linux
  priority: 2000000000
  priorityClassName: system-cluster-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: coredns
  serviceAccountName: coredns
  terminationGracePeriodSeconds: 30
  tolerations:
  - key: CriticalAddonsOnly
    operator: Exists
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - configMap:
      defaultMode: 420
      items:
      - key: Corefile
        path: Corefile
      name: coredns
    name: config-volume
  - name: coredns-token-9gmrh
    secret:
      secretName: coredns-token-9gmrh
status: {}
