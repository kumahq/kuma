import{d as q,r as d,p as c,o as i,w as r,b as p,e as s,l as o,c as x,t as m,N as k,L as C,M as A,q as S,m as v,Y as _,a5 as Q}from"./index-CDV8WoYF.js";const K={key:0},Y={key:1},G=q({__name:"MeshServiceSummaryView",props:{items:{}},setup(b){const X=b;return(Z,e)=>{const V=d("RouteTitle"),w=d("XAction"),h=d("XBadge"),f=d("XLayout"),B=d("XSelect"),E=d("KumaPort"),F=d("XTable"),M=d("XCodeBlock"),z=d("DataLoader"),L=d("AppView"),P=d("DataCollection"),D=d("RouteView");return i(),c(D,{name:"mesh-service-summary-view",params:{mesh:"",service:"",codeSearch:"",codeFilter:!1,codeRegExp:!1,format:String}},{default:r(({route:t,t:u,can:N,uri:T})=>[p(P,{items:X.items,predicate:n=>n.id===t.params.service},{item:r(({item:n})=>[p(L,null,{title:r(()=>[p(f,{size:"small"},{default:r(()=>[o("h2",null,[p(w,{to:{name:"mesh-service-detail-view",params:{mesh:t.params.mesh,service:t.params.service}}},{default:r(()=>[p(V,{title:u("services.routes.item.title",{name:n.name})},null,8,["title"])]),_:2},1032,["to"])]),e[0]||(e[0]=s()),p(h,{appearance:u(`common.status.appearance.${n.spec.state}`,void 0,{defaultMessage:"neutral"})},{default:r(()=>[s(m(u(`http.api.value.${n.spec.state}`)),1)]),_:2},1032,["appearance"])]),_:2},1024)]),default:r(()=>[e[17]||(e[17]=s()),p(f,{type:"stack"},{default:r(()=>[o("header",null,[p(f,{type:"separated",size:"max"},{default:r(()=>[o("h3",null,m(u("services.routes.item.config")),1),e[1]||(e[1]=s()),(i(),x(k,null,C([["structured","universal","k8s"]],l=>o("div",{key:typeof l},[p(B,{label:u("services.routes.item.format"),selected:t.params.format,onChange:a=>{t.update({format:a})},onVnodeBeforeMount:a=>{var g;return((g=a==null?void 0:a.props)==null?void 0:g.selected)&&l.includes(a.props.selected)&&a.props.selected!==t.params.format&&t.update({format:a.props.selected})}},A({_:2},[C(l,a=>({name:`${a}-option`,fn:r(()=>[s(m(u(`services.routes.item.formats.${a}`)),1)])}))]),1032,["label","selected","onChange","onVnodeBeforeMount"])])),64))]),_:2},1024)]),e[16]||(e[16]=s()),t.params.format==="structured"?(i(),c(F,{key:0,"data-testid":"structured-view",variant:"kv"},{default:r(()=>{var l,a,g;return[o("tr",null,[e[2]||(e[2]=o("th",{scope:"row"},`
                    Data plane proxies
                  `,-1)),e[3]||(e[3]=s()),o("td",null,m((l=n.status.dataplaneProxies)==null?void 0:l.connected)+" connected, "+m((a=n.status.dataplaneProxies)==null?void 0:a.healthy)+" healthy ("+m((g=n.status.dataplaneProxies)==null?void 0:g.total)+` total)
                  `,1)]),e[12]||(e[12]=s()),n.namespace?(i(),x("tr",K,[e[4]||(e[4]=o("th",{scope:"row"},`
                    Namespace
                  `,-1)),e[5]||(e[5]=s()),o("td",null,m(n.namespace),1)])):S("",!0),e[13]||(e[13]=s()),N("use zones")&&n.zone?(i(),x("tr",Y,[e[6]||(e[6]=o("th",{scope:"row"},`
                    Zone
                  `,-1)),e[7]||(e[7]=s()),o("td",null,[p(w,{to:{name:"zone-cp-detail-view",params:{zone:n.zone}}},{default:r(()=>[s(m(n.zone),1)]),_:2},1032,["to"])])])):S("",!0),e[14]||(e[14]=s()),o("tr",null,[e[8]||(e[8]=o("th",{scope:"row"},`
                    Ports
                  `,-1)),e[9]||(e[9]=s()),o("td",null,[p(f,{type:"separated",truncate:""},{default:r(()=>[(i(!0),x(k,null,C(n.spec.ports,y=>(i(),c(E,{key:y.port,port:{...y,targetPort:void 0}},null,8,["port"]))),128))]),_:2},1024)])]),e[15]||(e[15]=s()),o("tr",null,[e[10]||(e[10]=o("th",{scope:"row"},`
                    Selector
                  `,-1)),e[11]||(e[11]=s()),o("td",null,[p(f,{type:"separated",truncate:""},{default:r(()=>[(i(!0),x(k,null,C(n.spec.selector.dataplaneTags,(y,R)=>(i(),c(h,{key:`${R}:${y}`,appearance:"info"},{default:r(()=>[s(m(R)+":"+m(y),1)]),_:2},1024))),128))]),_:2},1024)])])]}),_:2},1024)):t.params.format==="universal"?(i(),c(M,{key:1,"data-testid":"codeblock-yaml-universal",language:"yaml",code:v(_).stringify(n.config),"show-k8s-copy-button":!1,"is-searchable":"",query:t.params.codeSearch,"is-filter-mode":t.params.codeFilter,"is-reg-exp-mode":t.params.codeRegExp,onQueryChange:l=>t.update({codeSearch:l}),onFilterModeChange:l=>t.update({codeFilter:l}),onRegExpModeChange:l=>t.update({codeRegExp:l})},null,8,["code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])):(i(),c(z,{key:2,src:T(v(Q),"/meshes/:mesh/mesh-service/:name/as/kubernetes",{mesh:t.params.mesh,name:t.params.service})},{default:r(({data:l})=>[p(M,{"data-testid":"codeblock-yaml-k8s",language:"yaml",code:v(_).stringify(l),"show-k8s-copy-button":!1,"is-searchable":"",query:t.params.codeSearch,"is-filter-mode":t.params.codeFilter,"is-reg-exp-mode":t.params.codeRegExp,onQueryChange:a=>t.update({codeSearch:a}),onFilterModeChange:a=>t.update({codeFilter:a}),onRegExpModeChange:a=>t.update({codeRegExp:a})},null,8,["code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])]),_:2},1032,["src"]))]),_:2},1024)]),_:2},1024)]),_:2},1032,["items","predicate"])]),_:1})}}});export{G as default};
