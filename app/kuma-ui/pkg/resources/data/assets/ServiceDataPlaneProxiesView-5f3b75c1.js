import{E as b}from"./ErrorBlock-085322b0.js";import{D as z,F as C}from"./FilterBar-ec6193f2.js";import{S as V}from"./SummaryView-9fcb58ca.js";import{d as x,a as r,o as i,b as n,w as s,e as t,p as P,f as l,t as k,H as q,v as u,_ as T}from"./index-203d56a2.js";import"./index-9dd3e7d3.js";import"./TextWithCopyButton-45b0690a.js";import"./CopyButton-4a565fd0.js";import"./WarningIcon.vue_vue_type_script_setup_true_lang-297a38e2.js";import"./AppCollection-0aeb195e.js";import"./EmptyBlock.vue_vue_type_script_setup_true_lang-01997eab.js";import"./StatusBadge-01928c30.js";import"./dataplane-dcd0858b.js";const R=x({__name:"ServiceDataPlaneProxiesView",setup($){return(B,N)=>{const y=r("RouteTitle"),f=r("KSelect"),v=r("KCard"),g=r("RouterView"),m=r("DataSource"),w=r("AppView"),h=r("RouteView");return i(),n(m,{src:"/me"},{default:s(({data:c})=>[c?(i(),n(h,{key:0,name:"service-data-plane-proxies-view",params:{page:1,size:c.pageSize,query:"",dataplaneType:"all",s:"",mesh:"",service:"",dataPlane:""}},{default:s(({can:S,route:e,t:d})=>[t(w,null,{title:s(()=>[P("h2",null,[t(y,{title:d("services.routes.item.navigation.service-data-plane-proxies-view")},null,8,["title"])])]),default:s(()=>[l(),t(m,{src:`/meshes/${e.params.mesh}/dataplanes/for/${e.params.service}/of/${e.params.dataplaneType}?page=${e.params.page}&size=${e.params.size}&search=${e.params.s}`},{default:s(({data:o,error:p})=>[t(v,null,{body:s(()=>[p!==void 0?(i(),n(b,{key:0,error:p},null,8,["error"])):(i(),n(z,{key:1,"data-testid":"data-plane-collection",class:"data-plane-collection","page-number":parseInt(e.params.page),"page-size":parseInt(e.params.size),total:o==null?void 0:o.total,items:o==null?void 0:o.items,error:p,"is-selected-row":a=>a.name===e.params.dataPlane,"summary-route-name":"service-data-plane-summary-view","can-use-zones":S("use zones"),onChange:e.update},{toolbar:s(()=>[t(C,{class:"data-plane-proxy-filter",placeholder:"tag: 'kuma.io/protocol: http'",query:e.params.query,fields:{name:{description:"filter by name or parts of a name"},protocol:{description:"filter by “kuma.io/protocol” value"},tag:{description:"filter by tags (e.g. “tag: version:2”)"},zone:{description:"filter by “kuma.io/zone” value"}},onFieldsChange:a=>e.update({query:a.query,s:a.query.length>0?JSON.stringify(a.fields):""})},null,8,["placeholder","query","fields","onFieldsChange"]),l(),t(f,{label:"Type","overlay-label":!0,items:["all","standard","builtin","delegated"].map(a=>({value:a,label:d(`data-planes.type.${a}`),selected:a===e.params.dataplaneType})),appearance:"select",onSelected:a=>e.update({dataplaneType:String(a.value)})},{"item-template":s(({item:a})=>[l(k(a.label),1)]),_:2},1032,["items","onSelected"])]),_:2},1032,["page-number","page-size","total","items","error","is-selected-row","can-use-zones","onChange"]))]),_:2},1024),l(),e.params.dataPlane?(i(),n(g,{key:0},{default:s(a=>[t(V,{onClose:_=>e.replace({name:"service-data-plane-proxies-view",params:{mesh:e.params.mesh},query:{page:e.params.page,size:e.params.size}})},{default:s(()=>[(i(),n(q(a.Component),{name:e.params.dataPlane,"dataplane-overview":o==null?void 0:o.items.find(_=>_.name===e.params.dataPlane)},null,8,["name","dataplane-overview"]))]),_:2},1032,["onClose"])]),_:2},1024)):u("",!0)]),_:2},1032,["src"])]),_:2},1024)]),_:2},1032,["params"])):u("",!0)]),_:1})}}});const Q=T(R,[["__scopeId","data-v-f877664e"]]);export{Q as default};
