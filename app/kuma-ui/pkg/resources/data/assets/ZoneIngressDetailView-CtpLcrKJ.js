import{d as H,a2 as J,r as l,p as c,o as s,w as e,b as n,e as t,q as w,O as C,T as M,t as r,c as y,N as _,m as X,a3 as Q,L as b,y as U,K as W,l as Y,_ as ee}from"./index-rkLVsYtq.js";import{C as S,b as R,a as te}from"./ConnectionTraffic-BiXbeTWq.js";import"./TagList-BcaxaZPc.js";const ne=H({__name:"ZoneIngressDetailView",props:{data:{}},setup($){const d=$,A=J();return(oe,o)=>{const D=l("XBadge"),T=l("XCopyButton"),L=l("XAboutCard"),I=l("XAction"),h=l("DataCollection"),z=l("XLayout"),q=l("XInputSwitch"),V=l("XCard"),N=l("XDrawer"),O=l("RouterView"),j=l("DataLoader"),Z=l("XI18n"),E=l("XIcon"),F=l("AppView"),G=l("RouteView");return s(),c(G,{name:"zone-ingress-detail-view",params:{subscription:"",proxy:"",inactive:Boolean}},{default:e(({t:i,me:g,route:u,uri:K})=>[n(F,null,{default:e(()=>[n(L,{title:i("zone-ingresses.routes.item.about.title"),created:d.data.creationTime,modified:d.data.modificationTime},{default:e(()=>[n(C,{layout:"horizontal"},{title:e(()=>[t(r(i("http.api.property.status")),1)]),body:e(()=>[n(M,{status:d.data.state},null,8,["status"])]),_:2},1024),o[4]||(o[4]=t()),d.data.namespace.length>0?(s(),c(C,{key:0,layout:"horizontal"},{title:e(()=>[t(r(i("http.api.property.namespace")),1)]),body:e(()=>[n(D,{appearance:"decorative"},{default:e(()=>[t(r(d.data.namespace),1)]),_:1})]),_:2},1024)):w("",!0),o[5]||(o[5]=t()),n(C,{layout:"horizontal"},{title:e(()=>[t(r(i("http.api.property.address")),1)]),body:e(()=>[d.data.zoneIngress.socketAddress.length>0?(s(),c(T,{key:0,variant:"badge",format:"default",text:d.data.zoneIngress.socketAddress},null,8,["text"])):(s(),y(_,{key:1},[t(r(i("common.detail.none")),1)],64))]),_:2},1024),o[6]||(o[6]=t()),n(C,{layout:"horizontal"},{title:e(()=>[t(r(i("http.api.property.advertisedAddress")),1)]),body:e(()=>[d.data.zoneIngress.advertisedSocketAddress.length>0?(s(),c(D,{key:0,appearance:"decorative"},{default:e(()=>[n(T,{text:d.data.zoneIngress.advertisedSocketAddress},null,8,["text"])]),_:1})):(s(),y(_,{key:1},[t(r(i("common.detail.none")),1)],64))]),_:2},1024)]),_:2},1032,["title","created","modified"]),o[20]||(o[20]=t()),n(j,{src:K(X(Q),"/connections/stats/for/:proxyType/:name/:mesh/:socketAddress",{name:u.params.proxy,mesh:"*",socketAddress:d.data.zoneIngress.socketAddress,proxyType:"zone-ingress"})},{default:e(({data:a,refresh:m})=>[n(V,null,{default:e(()=>[n(z,{type:"columns"},{default:e(()=>[n(S,null,{default:e(()=>[n(z,{type:"stack",size:"small"},{default:e(()=>[n(h,{type:"inbounds",items:Object.entries(a.inbounds)},{default:e(({items:p})=>[(s(!0),y(_,null,b(p,([k,v])=>(s(),c(R,{key:`${k}`,protocol:"",traffic:v},{default:e(()=>[n(I,{"data-action":"",to:{name:(f=>f.includes("bound")?f.replace("-outbound-","-inbound-"):"zone-ingress-connection-inbound-summary-stats-view")(String(X(A).name)),params:{connection:k,proxyType:"ingresses"},query:{inactive:u.params.inactive}}},{default:e(()=>[t(`
                        :`+r(k.split("_").at(-1)),1)]),_:2},1032,["to"])]),_:2},1032,["traffic"]))),128))]),_:2},1032,["items"])]),_:2},1024)]),_:2},1024),o[11]||(o[11]=t()),n(S,null,{actions:e(()=>[n(q,{checked:u.params.inactive,"data-testid":"dataplane-outbounds-inactive-toggle",onChange:p=>u.update({inactive:p})},{label:e(()=>[...o[7]||(o[7]=[t(`
                    Show inactive
                  `,-1)])]),_:1},8,["checked","onChange"]),o[9]||(o[9]=t()),n(I,{action:"refresh",appearance:"primary",onClick:m},{default:e(()=>[...o[8]||(o[8]=[t(`
                  Refresh
                `,-1)])]),_:1},8,["onClick"])]),default:e(()=>[o[10]||(o[10]=t()),(s(),y(_,null,b(["upstream"],p=>n(h,{key:p,type:"outbounds",items:Object.entries(a.outbounds)},{default:e(({items:k})=>[n(h,{type:"activeOutbounds",predicate:u.params.inactive?void 0:([v,f])=>((typeof f.tcp<"u"?f.tcp?.[`${p}_cx_rx_bytes_total`]:f.http?.[`${p}_rq_total`])??0)>0,items:k},{default:e(({items:v})=>[v.length>0?(s(),c(te,{key:0,type:"outbound"},{default:e(()=>[(s(),y(_,null,b([/-([a-f0-9]){16}$/],f=>n(z,{key:f,type:"stack",size:"small"},{default:e(()=>[(s(!0),y(_,null,b(v,([x,P])=>(s(),c(R,{key:`${x}`,"data-testid":"dataplane-outbound",protocol:"",traffic:P,direction:p},{default:e(()=>[n(I,{"data-action":"",to:{name:(B=>B.includes("bound")?B.replace("-inbound-","-outbound-"):"zone-ingress-connection-outbound-summary-stats-view")(String(X(A).name)),params:{connection:x},query:{inactive:u.params.inactive}}},{default:e(()=>[t(r(x),1)]),_:2},1032,["to"])]),_:2},1032,["traffic","direction"]))),128))]),_:2},1024)),64))]),_:2},1024)):w("",!0)]),_:2},1032,["predicate","items"])]),_:2},1032,["items"])),64))]),_:2},1024)]),_:2},1024)]),_:2},1024),o[12]||(o[12]=t()),n(O,null,{default:e(p=>[p.route.name!==u.name?(s(),c(N,{key:0,width:"670px",onClose:function(){u.replace({name:"zone-ingress-detail-view",params:{proxy:u.params.proxy,proxyType:"ingresses"},query:{inactive:u.params.inactive?null:void 0}})}},{default:e(()=>[(s(),c(U(p.Component),{data:u.params.subscription.length>0?d.data.zoneIngressInsight.subscriptions:p.route.name.includes("-inbound-")?[d.data.zoneIngress]:a?.outbounds||{},networking:d.data.zoneIngress.networking},null,8,["data","networking"]))]),_:2},1032,["onClose"])):w("",!0)]),_:2},1024)]),_:2},1032,["src"]),o[21]||(o[21]=t()),d.data.zoneIngressInsight.subscriptions.length>0?(s(),c(V,{key:0},{title:e(()=>[Y("h2",null,r(i("zone-ingresses.routes.item.subscriptions.title")),1)]),default:e(()=>[o[19]||(o[19]=t()),n(z,null,{default:e(()=>[n(Z,{path:"zone-ingresses.routes.item.subscriptions.description"}),o[18]||(o[18]=t()),n(W,{headers:[{...g.get("headers.connection"),label:"Â ",key:"connection"},{...g.get("headers.instanceId"),label:i("http.api.property.instanceId"),key:"instanceId"},{...g.get("headers.version"),label:i("http.api.property.version"),key:"version"},{...g.get("headers.connected"),label:i("http.api.property.connected"),key:"connected"},{...g.get("headers.disconnected"),label:i("http.api.property.disconnected"),key:"disconnected"},{...g.get("headers.responses"),label:i("http.api.property.responses"),key:"responses"}],"is-selected-row":a=>a.id===u.params.subscription,items:d.data.zoneIngressInsight.subscriptions.map((a,m,p)=>p[p.length-(m+1)]),onResize:g.set},{connection:e(({row:a})=>[(s(!0),y(_,null,b([a.connectTime&&!a.disconnectTime?"healthy":"unhealthy"],m=>(s(),c(E,{key:`${m}`,name:m},{default:e(()=>[t(r(i(`common.connection.${m}`)),1)]),_:2},1032,["name"]))),128))]),instanceId:e(({row:a})=>[n(I,{"data-action":"",to:{name:"zone-ingress-subscription-summary-view",params:{subscription:a.id}}},{default:e(()=>[t(r(a.controlPlaneInstanceId),1)]),_:2},1032,["to"])]),version:e(({row:a})=>[t(r(a.version?.kumaDp?.version??"-"),1)]),connected:e(({row:a})=>[t(r(i("common.formats.datetime",{value:Date.parse(a.connectTime??"")})),1)]),disconnected:e(({row:a})=>[a.disconnectTime?(s(),y(_,{key:0},[t(r(i("common.formats.datetime",{value:Date.parse(a.disconnectTime)})),1)],64)):w("",!0)]),responses:e(({row:a})=>[(s(!0),y(_,null,b([a.status?.total??{}],m=>(s(),y(_,null,[t(r(m.responsesSent)+"/"+r(m.responsesAcknowledged),1)],64))),256))]),_:2},1032,["headers","is-selected-row","items","onResize"])]),_:2},1024)]),_:2},1024)):w("",!0)]),_:2},1024)]),_:1})}}}),ie=ee(ne,[["__scopeId","data-v-501f4771"]]);export{ie as default};
