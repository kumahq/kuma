import{d as T,r as o,p as k,o as B,w as a,b as n,e as d,m as E,a3 as F,l as N}from"./index-DGSbEvIm.js";const v={ref:"$el"},M=T({__name:"ConnectionsClustersView",props:{routeName:{}},setup(i){const l=i;return(m,s)=>{const _=o("RouteTitle"),u=o("XAction"),g=o("XCodeBlock"),f=o("XWindow"),h=o("DataLoader"),x=o("XCard"),C=o("AppView"),y=o("RouteView");return B(),k(y,{name:l.routeName,params:{mesh:"",proxy:"",proxyType:"",codeSearch:"",codeFilter:!1,codeRegExp:!1}},{default:a(({route:e,t:R,uri:w})=>[n(C,null,{default:a(()=>[n(_,{render:!1,title:R("data-planes.routes.item.navigation.data-plane-clusters-view")},null,8,["title"]),s[1]||(s[1]=d()),n(x,null,{default:a(()=>[n(h,{src:w(E(F),"/connections/clusters/for/:proxyType/:name/:mesh",{proxyType:{ingresses:"zone-ingress",egresses:"zone-egress"}[e.params.proxyType]??"dataplane",name:e.params.proxy,mesh:e.params.mesh||"*"})},{default:a(({data:V,refresh:X})=>[n(f,{resize:!0},{default:a(({resize:r})=>{var p,c;return[N("div",v,[n(g,{"max-height":`${(((p=r==null?void 0:r.target)==null?void 0:p.innerHeight)??0)-(((c=m.$el)==null?void 0:c.getBoundingClientRect().top)+200)}`,language:"json",code:V,"is-searchable":"",query:e.params.codeSearch,"is-filter-mode":e.params.codeFilter,"is-reg-exp-mode":e.params.codeRegExp,onQueryChange:t=>e.update({codeSearch:t}),onFilterModeChange:t=>e.update({codeFilter:t}),onRegExpModeChange:t=>e.update({codeRegExp:t})},{"primary-actions":a(()=>[n(u,{action:"refresh",appearance:"primary",onClick:X},{default:a(()=>s[0]||(s[0]=[d(`
                    Refresh
                  `,-1)])),_:2,__:[0]},1032,["onClick"])]),_:2},1032,["max-height","code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])],512)]}),_:2},1024)]),_:2},1032,["src"])]),_:2},1024)]),_:2,__:[1]},1024)]),_:1},8,["name"])}}});export{M as default};
