import{_ as B}from"./ResourceCodeBlock.vue_vue_type_script_setup_true_lang-DdLUQCto.js";import{d as D,r as o,o as c,m as p,w as t,b as s,k as i,e as r,Z as g,c as v,L as C,M as y,t as l,p as F}from"./index-BZS2OlAU.js";import"./CodeBlock-CzUB6YWi.js";const $={class:"stack"},z={class:"stack-with-borders"},T={class:"mt-4"},P=D({__name:"MeshMultiZoneServiceSummaryView",props:{items:{}},setup(x){const S=x;return(A,K)=>{const w=o("RouteTitle"),k=o("XAction"),u=o("KBadge"),_=o("KTruncate"),R=o("DataSource"),V=o("AppView"),E=o("DataCollection"),b=o("RouteView");return c(),p(b,{name:"mesh-multi-zone-service-summary-view",params:{mesh:"",service:"",codeSearch:"",codeFilter:!1,codeRegExp:!1}},{default:t(({route:a,t:h})=>[s(E,{items:S.items,predicate:n=>n.id===a.params.service},{item:t(({item:n})=>[s(V,null,{title:t(()=>[i("h2",null,[s(k,{to:{name:"mesh-multi-zone-service-detail-view",params:{mesh:a.params.mesh,service:a.params.service}}},{default:t(()=>[s(w,{title:h("services.routes.item.title",{name:n.name})},null,8,["title"])]),_:2},1032,["to"])])]),default:t(()=>[r(),i("div",$,[i("div",z,[s(g,{layout:"horizontal"},{title:t(()=>[r(`
                  Ports
                `)]),body:t(()=>[s(_,null,{default:t(()=>[(c(!0),v(C,null,y(n.spec.ports,e=>(c(),p(u,{key:e.port,appearance:"info"},{default:t(()=>[r(l(e.port)+"/"+l(e.appProtocol)+l(e.name&&e.name!==String(e.port)?` (${e.name})`:""),1)]),_:2},1024))),128))]),_:2},1024)]),_:2},1024),r(),s(g,{layout:"horizontal"},{title:t(()=>[r(`
                  Selector
                `)]),body:t(()=>[s(_,null,{default:t(()=>[(c(!0),v(C,null,y(n.spec.selector.meshService.matchLabels,(e,m)=>(c(),p(u,{key:`${m}:${e}`,appearance:"info"},{default:t(()=>[r(l(m)+":"+l(e),1)]),_:2},1024))),128))]),_:2},1024)]),_:2},1024)]),r(),i("div",null,[i("h3",null,l(h("services.routes.item.config")),1),r(),i("div",T,[s(B,{resource:n.config,"is-searchable":"",query:a.params.codeSearch,"is-filter-mode":a.params.codeFilter,"is-reg-exp-mode":a.params.codeRegExp,onQueryChange:e=>a.update({codeSearch:e}),onFilterModeChange:e=>a.update({codeFilter:e}),onRegExpModeChange:e=>a.update({codeRegExp:e})},{default:t(({copy:e,copying:m})=>[m?(c(),p(R,{key:0,src:`/meshes/${a.params.mesh}/mesh-multi-zone-service/${a.params.service}/as/kubernetes?no-store`,onChange:d=>{e(f=>f(d))},onError:d=>{e((f,M)=>M(d))}},null,8,["src","onChange","onError"])):F("",!0)]),_:2},1032,["resource","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])])])])]),_:2},1024)]),_:2},1032,["items","predicate"])]),_:1})}}});export{P as default};
