import{d as h,r as n,o as k,q as w,w as a,b as s,e as p,p as R,$ as A}from"./index-DELdVnGm.js";const S=h({__name:"ConnectionOutboundSummaryStatsView",props:{networking:{},routeName:{}},setup(i){const c=i;return(T,t)=>{const d=n("RouteTitle"),m=n("XAction"),l=n("XCodeBlock"),_=n("DataCollection"),g=n("DataLoader"),u=n("AppView"),f=n("RouteView");return k(),w(f,{params:{codeSearch:"",codeFilter:!1,codeRegExp:!1,mesh:"",proxy:"",proxyType:"",connection:""},name:c.routeName},{default:a(({route:e,uri:x})=>[s(d,{render:!1,title:"Stats"}),t[1]||(t[1]=p()),s(u,null,{default:a(()=>[s(g,{src:x(R(A),"/connections/stats/for/:proxyType/:name/:mesh/:socketAddress",{proxyType:{ingresses:"zone-ingress",egresses:"zone-egress"}[e.params.proxyType]??"dataplane",name:e.params.proxy,mesh:e.params.mesh||"*",socketAddress:c.networking.inboundAddress})},{default:a(({data:y,refresh:C})=>[s(_,{items:y.raw.split(`
`),predicate:r=>r.includes(`.${e.params.connection}.`)},{default:a(({items:r})=>[s(l,{language:"json",code:r.map(o=>o.replace(`${e.params.connection}.`,"")).join(`
`),"is-searchable":"",query:e.params.codeSearch,"is-filter-mode":e.params.codeFilter,"is-reg-exp-mode":e.params.codeRegExp,onQueryChange:o=>e.update({codeSearch:o}),onFilterModeChange:o=>e.update({codeFilter:o}),onRegExpModeChange:o=>e.update({codeRegExp:o})},{"primary-actions":a(()=>[s(m,{action:"refresh",appearance:"primary",onClick:C},{default:a(()=>t[0]||(t[0]=[p(`
                Refresh
              `)])),_:2},1032,["onClick"])]),_:2},1032,["code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])]),_:2},1032,["items","predicate"])]),_:2},1032,["src"])]),_:2},1024)]),_:1},8,["name"])}}});export{S as default};
