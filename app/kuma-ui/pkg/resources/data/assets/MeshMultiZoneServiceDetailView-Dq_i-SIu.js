import{d as T,r,p,o as n,w as e,b as s,e as l,O as X,c as h,N as y,L as f,t as c,m as v,a1 as q,K as Q,l as w,M as K,Y as z,_ as P}from"./index-DPa2DUOC.js";const $=T({__name:"MeshMultiZoneServiceDetailView",props:{data:{}},setup(_){const m=_;return(j,i)=>{const S=r("KumaPort"),u=r("XLayout"),C=r("XBadge"),R=r("XAboutCard"),B=r("XCopyButton"),V=r("XAction"),E=r("DataCollection"),k=r("DataLoader"),b=r("XCard"),F=r("XSelect"),x=r("XCodeBlock"),L=r("AppView"),A=r("RouteView");return n(),p(A,{name:"mesh-multi-zone-service-detail-view",params:{mesh:"",service:"",codeSearch:"",codeFilter:!1,codeRegExp:!1,environment:String}},{default:e(({route:o,t:d,uri:D,me:g})=>[s(L,null,{default:e(()=>[s(u,{type:"stack"},{default:e(()=>[s(R,{title:d("services.mesh-multi-zone-service.about.title"),created:m.data.creationTime,modified:m.data.modificationTime},{default:e(()=>[s(X,{layout:"horizontal"},{title:e(()=>[l(c(d("http.api.property.ports")),1)]),body:e(()=>[m.data.spec.ports.length?(n(),p(u,{key:0,type:"separated",truncate:""},{default:e(()=>[(n(!0),h(y,null,f(m.data.spec.ports,a=>(n(),p(S,{key:a.port,port:{...a,targetPort:void 0}},null,8,["port"]))),128))]),_:1})):(n(),h(y,{key:1},[l(c(d("common.detail.none")),1)],64))]),_:2},1024),i[2]||(i[2]=l()),s(X,{layout:"horizontal"},{title:e(()=>[l(c(d("http.api.property.selector")),1)]),body:e(()=>[Object.keys(_.data.spec.selector.meshService.matchLabels??{}).length?(n(),p(u,{key:0,type:"separated",truncate:""},{default:e(()=>[(n(!0),h(y,null,f(_.data.spec.selector.meshService.matchLabels,(a,t)=>(n(),p(C,{key:`${t}:${a}`,appearance:"info"},{default:e(()=>[l(c(t)+":"+c(a),1)]),_:2},1024))),128))]),_:1})):(n(),h(y,{key:1},[l(c(d("common.detail.none")),1)],64))]),_:2},1024)]),_:2},1032,["title","created","modified"]),i[6]||(i[6]=l()),s(b,null,{title:e(()=>[l(c(d("services.detail.hostnames.title")),1)]),default:e(()=>[i[4]||(i[4]=l()),s(k,{src:D(v(q),"/meshes/:mesh/:serviceType/:serviceName/_hostnames",{mesh:o.params.mesh,serviceType:"meshmultizoneservices",serviceName:o.params.service}),variant:"list"},{default:e(({data:a})=>[s(E,{type:"hostnames",items:a.items},{default:e(()=>[s(Q,{type:"hostnames-collection","data-testid":"hostnames-collection",items:a.items,headers:[{...g.get("headers.hostname"),label:d("services.detail.hostnames.hostname"),key:"hostname"},{...g.get("headers.zones"),label:d("services.detail.hostnames.zone"),key:"zones"}],onResize:g.set},{hostname:e(({row:t})=>[w("b",null,[s(B,{text:t.hostname},null,8,["text"])])]),zones:e(({row:t})=>[s(u,{type:"separated"},{default:e(()=>[(n(!0),h(y,null,f(t.zones,(M,N)=>(n(),p(C,{key:N,appearance:"decorative"},{default:e(()=>[s(V,{to:{name:"zone-cp-detail-view",params:{zone:M.name}}},{default:e(()=>[l(c(M.name),1)]),_:2},1032,["to"])]),_:2},1024))),128))]),_:2},1024)]),_:1},8,["items","headers","onResize"])]),_:2},1032,["items"])]),_:2},1032,["src"])]),_:2},1024),i[7]||(i[7]=l()),s(b,null,{default:e(()=>[s(u,null,{default:e(()=>[s(u,{type:"separated",justify:"end"},{default:e(()=>[(n(),h(y,null,f([["universal","k8s"]],a=>w("div",{key:typeof a},[s(F,{label:d("services.routes.item.format"),selected:o.params.environment,onChange:t=>{o.update({environment:t})},onVnodeBeforeMount:t=>t?.props?.selected&&a.includes(t.props.selected)&&t.props.selected!==o.params.environment&&o.update({environment:t.props.selected})},K({_:2},[f(a,t=>({name:`${t}-option`,fn:e(()=>[l(c(d(`services.routes.item.formats.${t}`)),1)])}))]),1032,["label","selected","onChange","onVnodeBeforeMount"])])),64))]),_:2},1024),i[5]||(i[5]=l()),o.params.environment==="universal"?(n(),p(x,{key:0,"data-testid":"codeblock-yaml-universal",language:"yaml",code:v(z).stringify(m.data.config),"show-k8s-copy-button":!1,"is-searchable":"",query:o.params.codeSearch,"is-filter-mode":o.params.codeFilter,"is-reg-exp-mode":o.params.codeRegExp,onQueryChange:a=>o.update({codeSearch:a}),onFilterModeChange:a=>o.update({codeFilter:a}),onRegExpModeChange:a=>o.update({codeRegExp:a})},null,8,["code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])):(n(),p(k,{key:1,src:`/meshes/${m.data.mesh}/mesh-multi-zone-service/${m.data.id}/as/kubernetes`},{default:e(({data:a})=>[s(x,{"data-testid":"codeblock-yaml-k8s",language:"yaml",code:v(z).stringify(a),"show-k8s-copy-button":!1,"is-searchable":"",query:o.params.codeSearch,"is-filter-mode":o.params.codeFilter,"is-reg-exp-mode":o.params.codeRegExp,onQueryChange:t=>o.update({codeSearch:t}),onFilterModeChange:t=>o.update({codeFilter:t}),onRegExpModeChange:t=>o.update({codeRegExp:t})},null,8,["code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])]),_:2},1032,["src"]))]),_:2},1024)]),_:2},1024)]),_:2},1024)]),_:2},1024)]),_:1})}}}),Y=P($,[["__scopeId","data-v-102216ee"]]);export{Y as default};
