import{d as D,r as o,p as d,o as c,w as s,b as t,e as n,l as w,I as q,m as K,af as M,q as T,K as G,t as r,c as y,N as z,L as I,y as E,_ as F}from"./index-CVAY3lZR.js";import{S as Z}from"./SummaryView-DdgBc8Ig.js";const $=D({__name:"MeshServiceListView",setup(j){return(H,p)=>{const C=o("RouteTitle"),k=o("XSearch"),u=o("XAction"),X=o("XCopyButton"),b=o("XBadge"),V=o("KumaPort"),h=o("XLayout"),x=o("XActionGroup"),A=o("RouterView"),L=o("DataCollection"),S=o("DataLoader"),B=o("XCard"),N=o("AppView"),P=o("RouteView");return c(),d(P,{name:"mesh-service-list-view",params:{page:1,size:Number,mesh:"",service:"",s:""}},{default:s(({route:a,t:_,can:v,uri:R,me:l})=>[t(C,{render:!1,title:_("services.routes.mesh-service-list-view.title")},null,8,["title"]),p[9]||(p[9]=n()),t(N,{docs:_("services.mesh-service.href.docs")},{default:s(()=>[t(B,null,{default:s(()=>[t(h,null,{default:s(()=>[w("search",null,[w("form",{onSubmit:p[0]||(p[0]=q(()=>{},["prevent"]))},[t(k,{class:"search-field",keys:["name","namespace",...v("use zones")?["zone"]:[],"label"],value:a.params.s,onChange:i=>a.update({s:i})},null,8,["keys","value","onChange"])],32)]),p[8]||(p[8]=n()),t(S,{src:R(K(M),"/meshes/:mesh/mesh-services",{mesh:a.params.mesh},{page:a.params.page,size:a.params.size,search:a.params.s}),variant:"list"},{default:s(({data:i})=>[t(L,{type:"services",items:i.items,page:a.params.page,"page-size":a.params.size,total:i.total,onChange:a.update},{default:s(()=>[t(G,{"data-testid":"service-collection",headers:[{...l.get("headers.name"),label:"Name",key:"name"},{...l.get("headers.namespace"),label:"Namespace",key:"namespace"},...v("use zones")?[{...l.get("headers.zone"),label:"Zone",key:"zone"}]:[],{...l.get("headers.state"),label:"State",key:"state"},{...l.get("headers.status"),label:"DP proxies (connected / healthy / total)",key:"status"},{...l.get("headers.ports"),label:"Ports",key:"ports"},{...l.get("headers.actions"),label:"Actions",key:"actions",hideLabel:!0}],items:i.items,"is-selected-row":e=>e.name===a.params.service,onResize:l.set},{name:s(({row:e})=>[t(X,{text:e.name},{default:s(()=>[t(u,{"data-action":"",to:{name:"mesh-service-summary-view",params:{mesh:e.mesh,service:e.id},query:{page:a.params.page,size:a.params.size,s:a.params.s}}},{default:s(()=>[n(r(e.name),1)]),_:2},1032,["to"])]),_:2},1032,["text"])]),namespace:s(({row:e})=>[n(r(e.namespace),1)]),zone:s(({row:e})=>[e.zone?(c(),d(u,{key:0,to:{name:"zone-cp-detail-view",params:{zone:e.zone}}},{default:s(()=>[n(r(e.zone),1)]),_:2},1032,["to"])):(c(),y(z,{key:1},[n(r(_("common.detail.none")),1)],64))]),state:s(({row:e})=>[t(b,{appearance:e.spec.state==="Available"?"success":"danger"},{default:s(()=>[n(r(e.spec.state),1)]),_:2},1032,["appearance"])]),status:s(({row:e})=>{var m,f,g;return[n(r((m=e.status.dataplaneProxies)==null?void 0:m.connected)+" / "+r((f=e.status.dataplaneProxies)==null?void 0:f.healthy)+" / "+r((g=e.status.dataplaneProxies)==null?void 0:g.total),1)]}),ports:s(({row:e})=>[t(h,{type:"separated",truncate:""},{default:s(()=>[(c(!0),y(z,null,I(e.spec.ports,m=>(c(),d(V,{key:m.port,port:{...m,targetPort:void 0}},null,8,["port"]))),128))]),_:2},1024)]),actions:s(({row:e})=>[t(x,null,{default:s(()=>[t(u,{to:{name:"mesh-service-detail-view",params:{mesh:e.mesh,service:e.id}}},{default:s(()=>[n(r(_("common.collection.actions.view")),1)]),_:2},1032,["to"])]),_:2},1024)]),_:2,__:[1,2,3,4,5,6]},1032,["headers","items","is-selected-row","onResize"]),p[7]||(p[7]=n()),i.items&&a.params.service?(c(),d(A,{key:0},{default:s(e=>[t(Z,{onClose:m=>a.replace({name:"mesh-service-list-view",params:{mesh:a.params.mesh},query:{page:a.params.page,size:a.params.size,s:a.params.s}})},{default:s(()=>[(c(),d(E(e.Component),{items:i.items},null,8,["items"]))]),_:2},1032,["onClose"])]),_:2},1024)):T("",!0)]),_:2,__:[7]},1032,["items","page","page-size","total","onChange"])]),_:2},1032,["src"])]),_:2,__:[8]},1024)]),_:2},1024)]),_:2},1032,["docs"])]),_:1,__:[9]})}}}),Q=F($,[["__scopeId","data-v-d9ff3a80"]]);export{Q as default};
