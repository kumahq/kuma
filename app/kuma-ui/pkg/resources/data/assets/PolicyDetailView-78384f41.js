import{d as $,g as S,y as b,r as o,o as a,l as c,j as t,k as f,ax as q,n as p,w as s,i as l,E as g,x as C,F as B,I as R,H as V,s as L,Q as N,p as P,a4 as A}from"./index-a6f5023f.js";import{_ as E}from"./EmptyBlock.vue_vue_type_script_setup_true_lang-1974ccfb.js";import{_ as T}from"./ResourceCodeBlock.vue_vue_type_style_index_0_lang-3ee102e1.js";import"./CodeBlock.vue_vue_type_style_index_0_lang-ad731d3d.js";import"./toYaml-4e00099e.js";const I={key:3,"data-testid":"affected-data-plane-proxies"},K=$({__name:"PolicyConnections",props:{mesh:{type:String,required:!0},policyPath:{type:String,required:!0},policyName:{type:String,required:!0}},setup(k){const{t:h}=S(),n=k,m=b("");return(w,d)=>{const y=o("RouterLink");return a(),c("div",null,[t(f(q),{id:"dataplane-search",modelValue:m.value,"onUpdate:modelValue":d[0]||(d[0]=i=>m.value=i),type:"text",placeholder:f(h)("policies.detail.dataplane_input_placeholder"),required:"","data-testid":"dataplane-search-input"},null,8,["modelValue","placeholder"]),p(),t(L,{src:`/meshes/${n.mesh}/policy-path/${n.policyPath}/policy/${n.policyName}/dataplanes`},{default:s(({data:i,error:u})=>[u?(a(),l(g,{key:0,error:u},null,8,["error"])):i===void 0?(a(),l(C,{key:1})):i.items.length===0?(a(),l(E,{key:2})):(a(),c("ul",I,[(a(!0),c(B,null,R(i.items.filter(e=>e.name.toLowerCase().includes(m.value.toLowerCase())),(e,r)=>(a(),c("li",{key:r,"data-testid":"dataplane-name"},[t(y,{to:{name:"data-plane-detail-view",params:{mesh:e.mesh,dataPlane:e.name}}},{default:s(()=>[p(V(e.name),1)]),_:2},1032,["to"])]))),128))]))]),_:1},8,["src"])])}}}),Q={key:2,class:"stack","data-testid":"detail-view-details"},W=$({__name:"PolicyDetailView",setup(k){const h=N();return(n,m)=>{const w=o("RouteTitle"),d=o("KCard"),y=o("DataSource"),i=o("AppView"),u=o("RouteView");return a(),l(u,{name:"policy-detail-view",params:{mesh:"",policy:"",policyPath:"",codeSearch:""}},{default:s(({route:e,t:r})=>[t(i,{breadcrumbs:[{to:{name:"mesh-detail-view",params:{mesh:e.params.mesh}},text:e.params.mesh},{to:{name:"policy-list-view",params:{mesh:e.params.mesh,policyPath:e.params.policyPath}},text:r("policies.routes.item.breadcrumbs")}]},{title:s(()=>[P("h1",null,[t(A,{text:e.params.policy},{default:s(()=>[t(w,{title:r("policies.routes.item.title",{name:e.params.policy}),render:!0},null,8,["title"])]),_:2},1032,["text"])])]),default:s(()=>[p(),t(y,{src:`/meshes/${e.params.mesh}/policy-path/${e.params.policyPath}/policy/${e.params.policy}`},{default:s(({data:x,error:v})=>[v?(a(),l(g,{key:0,error:v},null,8,["error"])):x===void 0?(a(),l(C,{key:1})):(a(),c("div",Q,[t(d,null,{body:s(()=>[P("h2",null,V(r("policies.detail.affected_dpps")),1),p(),t(K,{class:"mt-4",mesh:e.params.mesh,"policy-name":e.params.policy,"policy-path":e.params.policyPath},null,8,["mesh","policy-name","policy-path"])]),_:2},1024),p(),t(T,{id:"code-block-policy",resource:x,"resource-fetcher":_=>f(h).getSinglePolicyEntity({name:e.params.policy,mesh:e.params.mesh,path:e.params.policyPath},_),"is-searchable":"",query:e.params.codeSearch,onQueryChange:_=>e.update({codeSearch:_})},null,8,["resource","resource-fetcher","query","onQueryChange"])]))]),_:2},1032,["src"])]),_:2},1032,["breadcrumbs"])]),_:1})}}});export{W as default};
