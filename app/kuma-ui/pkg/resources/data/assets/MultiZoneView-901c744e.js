import{L as y}from"./LoadingBox-f029f50e.js";import{O as x,a as Z,b as I}from"./OnboardingPage-92085f3f.js";import{h as k,i as z,f as T,_ as O,g as N}from"./RouteView.vue_vue_type_script_setup_true_lang-24b8d990.js";import{_ as V}from"./RouteTitle.vue_vue_type_script_setup_true_lang-45bced72.js";import{d as A,q as u,A as L,o as a,a as B,w as i,h as c,b,g as e,k as n,e as l,f as C,p as S,m as M}from"./index-1780a2c0.js";import"./kongponents.es-9ef2fb0e.js";const $=r=>(S("data-v-19e1de57"),r=r(),M(),r),q=$(()=>n("p",{class:"mb-4 text-center"},`
            A zone requires both the zone control plane and zone ingress. On Kubernetes, you run a single command to create both resources. On Universal, you must create them separately.
          `,-1)),D={class:"mb-4 text-center"},E=["href"],G={class:"status-box mt-4"},K={key:0,class:"status--is-connected","data-testid":"zone-connected"},P={key:1,class:"status--is-disconnected","data-testid":"zone-disconnected"},U={class:"status-box mt-4"},H={key:0,class:"status--is-connected","data-testid":"zone-ingress-connected"},R={key:1,class:"status--is-disconnected","data-testid":"zone-ingress-disconnected"},j={key:0,class:"status-loading-box mt-4"},w=1e3,F=A({__name:"MultiZoneView",setup(r){const m=k(),{t:p}=z(),s=u(!1),o=u(!1),d=u(null),_=u(null);L(function(){h(),v()}),f(),g();async function f(){try{const{total:t}=await m.getZones();s.value=t>0}catch(t){s.value=!1,console.error(t)}finally{s.value||(h(),d.value=window.setTimeout(f,w))}}async function g(){try{const{total:t}=await m.getAllZoneIngressOverviews();o.value=t>0}catch(t){o.value=!1,console.error(t)}finally{o.value||(v(),_.value=window.setTimeout(g,w))}}function h(){d.value!==null&&window.clearTimeout(d.value)}function v(){_.value!==null&&window.clearTimeout(_.value)}return(t,J)=>(a(),B(O,null,{default:i(()=>[c(V,{title:b(p)("onboarding.routes.multizone.title")},null,8,["title"]),e(),c(T,null,{default:i(()=>[c(x,null,{header:i(()=>[c(Z,null,{title:i(()=>[e(`
              Add zones
            `)]),_:1})]),content:i(()=>[q,e(),n("p",D,[n("b",null,[e("See "),n("a",{href:b(p)("onboarding.href.docs.install"),target:"_blank"},"the documentation for options to install",8,E),e(".")])]),e(),n("div",null,[n("p",G,[e(`
              Zone status:

              `),s.value?(a(),l("span",K,"Connected")):(a(),l("span",P,"Disconnected"))]),e(),n("p",U,[e(`
              Zone ingress status:

              `),o.value?(a(),l("span",H,"Connected")):(a(),l("span",R,"Disconnected"))]),e(),!o.value||!s.value?(a(),l("div",j,[c(y)])):C("",!0)])]),navigation:i(()=>[c(I,{"next-step":"onboarding-create-mesh","previous-step":"onboarding-configuration-types","should-allow-next":s.value&&o.value},null,8,["should-allow-next"])]),_:1})]),_:1})]),_:1}))}});const ne=N(F,[["__scopeId","data-v-19e1de57"]]);export{ne as default};
