import{d as S,r as o,p as d,o as i,w as n,b as r,e as l,m,a8 as T,c as V,N as E,L as F}from"./index-Bv0SUEJU.js";import{C as u}from"./kri-D19gROKk.js";const L=S({__name:"ConnectionInboundSummaryClustersView",props:{routeName:{},data:{}},setup(_){const t=_;return(B,s)=>{const g=o("RouteTitle"),y=o("XAction"),C=o("XCodeBlock"),f=o("DataCollection"),x=o("DataLoader"),h=o("AppView"),R=o("RouteView");return i(),d(R,{params:{codeSearch:"",codeFilter:!1,codeRegExp:!1,proxyType:"",mesh:"",proxy:"",connection:""},name:t.routeName},{default:n(({route:e,uri:N})=>[r(g,{render:!1,title:"Clusters"}),s[1]||(s[1]=l()),r(h,null,{default:n(()=>[r(x,{src:N(m(T),"/connections/clusters/for/:proxyType/:name/:mesh",{proxyType:{ingresses:"zone-ingress",egresses:"zone-egress"}[e.params.proxyType]??"dataplane",name:e.params.proxy,mesh:e.params.mesh||"*"})},{default:n(({data:k,refresh:w})=>[(i(!0),V(E,null,F(["proxyResourceName"in t.data?m(u).toString({...m(u).fromString(t.data.proxyResourceName),sectionName:t.data.port.toString()}):("clusterName"in t.data?t.data.clusterName:e.params.connection).replace("_",":")],c=>(i(),d(f,{key:typeof c,items:k.split(`
`),predicate:p=>p.startsWith(`${c}`)},{default:n(({items:p})=>[r(C,{language:"json",code:p.map(a=>a.replace(`${c}::`,"")).join(`
`),"is-searchable":"",query:e.params.codeSearch,"is-filter-mode":e.params.codeFilter,"is-reg-exp-mode":e.params.codeRegExp,onQueryChange:a=>e.update({codeSearch:a}),onFilterModeChange:a=>e.update({codeFilter:a}),onRegExpModeChange:a=>e.update({codeRegExp:a})},{"primary-actions":n(()=>[r(y,{action:"refresh",appearance:"primary",onClick:w},{default:n(()=>s[0]||(s[0]=[l(`
                  Refresh
                `,-1)])),_:2,__:[0]},1032,["onClick"])]),_:2},1032,["code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])]),_:2},1032,["items","predicate"]))),128))]),_:2},1032,["src"])]),_:2},1024)]),_:1,__:[1]},8,["name"])}}});export{L as default};
