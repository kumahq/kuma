import{d as P,j as F,g as T,h as q,e as d,f as A,F as L,o as n,u as B,r as m,v as O}from"./index-bb404c7e.js";import{S as I}from"./ServiceSummary-aa463345.js";import{D as j}from"./DataPlaneList-8c5247e3.js";import{_ as z}from"./EmptyBlock.vue_vue_type_script_setup_true_lang-aa9d51da.js";import{E as V}from"./ErrorBlock-116c4df2.js";import{_ as $}from"./LoadingBlock.vue_vue_type_script_setup_true_lang-c4f08245.js";import{u as R}from"./store-674ffdd1.js";import{u as C}from"./index-cb99abc8.js";import{Q as G}from"./QueryParameter-70743f73.js";import"./kongponents.es-3141fcfd.js";import"./StatusBadge-b11d7d44.js";import"./_plugin-vue_export-helper-c27b6911.js";import"./TagList-a77b041a.js";import"./YamlView.vue_vue_type_script_setup_true_lang-5890c4b7.js";import"./CodeBlock.vue_vue_type_style_index_0_lang-7ab44394.js";import"./toYaml-4e00099e.js";import"./ContentWrapper-16b848cf.js";import"./DataOverview-d0519692.js";import"./datadogLogEvents-302eea7b.js";const Q=P({__name:"ServiceDetails",props:{service:{type:Object,required:!0},externalService:{type:Object,required:!1,default:null},dataPlaneOverviews:{type:Array,required:!1,default:null},dppFilterFields:{type:Object,required:!0},selectedDppName:{type:String,required:!1,default:null}},emits:["load-dataplane-overviews"],setup(f,{emit:w}){const a=f;function h(e,p){var o;(((o=a.service.serviceType)==null?void 0:o.startsWith("gateway"))??!1)||delete p.gateway,w("load-dataplane-overviews",e,p)}return(e,p)=>{var t;return n(),F(L,null,[T(I,{service:a.service,"external-service":f.externalService},null,8,["service","external-service"]),q(),a.dataPlaneOverviews!==null?(n(),d(j,{key:0,class:"mt-4","data-plane-overviews":a.dataPlaneOverviews,"dpp-filter-fields":a.dppFilterFields,"selected-dpp-name":a.selectedDppName,"is-gateway-view":((t=a.dataPlaneOverviews[0])==null?void 0:t.dataplane.networking.gateway)!==void 0,onLoadData:h},null,8,["data-plane-overviews","dpp-filter-fields","selected-dpp-name","is-gateway-view"])):A("",!0)],64)}}}),W={class:"service-details"},ve=P({__name:"ServiceDetailView",props:{selectedDppName:{type:String,required:!1,default:null}},setup(f){const w=f,a=C(),h={name:{description:"filter by name or parts of a name"},protocol:{description:"filter by “kuma.io/protocol” value"},tag:{description:"filter by tags (e.g. “tag: version:2”)"},zone:{description:"filter by “kuma.io/zone” value"}},e=B(),p=R(),t=m(null),o=m(null),y=m(null),_=m(!0),g=m(null);O(()=>e.params.mesh,function(){e.name==="service-detail-view"&&S(0)}),O(()=>e.params.name,function(){e.name==="service-detail-view"&&S(0)});function N(){p.dispatch("updatePageTitle",e.params.service);const r=G.get("filterFields"),l=r!==null?JSON.parse(r):{};S(0,l)}N();async function S(r,l={}){_.value=!0,g.value=null,t.value=null,o.value=null,y.value=null;const c=e.params.mesh,v=e.params.service;try{t.value=await a.getServiceInsight({mesh:c,name:v}),t.value.serviceType==="external"?o.value=await a.getExternalServiceByServiceInsightName(c,v):await x(r,l)}catch(s){s instanceof Error?g.value=s:console.error(s)}finally{_.value=!1}}async function x(r,l){const c=e.params.mesh,v=e.params.service;try{const s=b(v,r,l),i=await a.getAllDataplaneOverviewsFromMesh({mesh:c},s);y.value=i.items??[]}catch{y.value=null}}function b(r,l,c){const s=`kuma.io/service:${r}`,i={...c,offset:l,size:50};if(i.tag){const D=Array.isArray(i.tag)?i.tag:[i.tag],k=[];for(const[u,E]of D.entries())E.startsWith("kuma.io/service:")&&k.push(u);for(let u=k.length-1;u===0;u--)D.splice(k[u],1);i.tag=D.concat(s)}else i.tag=s;return i}return(r,l)=>(n(),F("div",W,[_.value?(n(),d($,{key:0})):g.value!==null?(n(),d(V,{key:1,error:g.value},null,8,["error"])):t.value===null?(n(),d(z,{key:2})):(n(),d(Q,{key:3,service:t.value,"data-plane-overviews":y.value,"external-service":o.value,"dpp-filter-fields":h,"selected-dpp-name":w.selectedDppName,onLoadDataplaneOverviews:x},null,8,["service","data-plane-overviews","external-service","selected-dpp-name"]))]))}});export{ve as default};
