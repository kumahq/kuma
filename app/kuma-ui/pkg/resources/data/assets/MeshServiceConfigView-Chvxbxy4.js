import{d as S,r as n,p as c,o as r,w as s,b as t,e as u,c as b,N as v,L as f,l as w,M as E,t as F,m as h,Y as _}from"./index-DGSbEvIm.js";const X=S({__name:"MeshServiceConfigView",props:{data:{}},setup(y){const d=y;return(V,l)=>{const C=n("XSelect"),i=n("XLayout"),p=n("XCodeBlock"),x=n("DataLoader"),k=n("XCard"),M=n("AppView"),R=n("RouteView");return r(),c(R,{name:"mesh-service-config-view",params:{mesh:"",service:"",codeSearch:"",codeFilter:!1,codeRegExp:!1,environment:String}},{default:s(({route:e,t:m})=>[t(M,null,{default:s(()=>[t(k,null,{default:s(()=>[t(i,null,{default:s(()=>[t(i,{type:"separated",justify:"end"},{default:s(()=>[(r(),b(v,null,f([["universal","k8s"]],o=>w("div",{key:typeof o},[t(C,{label:m("services.routes.item.format"),selected:e.params.environment,onChange:a=>{e.update({environment:a})},onVnodeBeforeMount:a=>{var g;return((g=a==null?void 0:a.props)==null?void 0:g.selected)&&o.includes(a.props.selected)&&a.props.selected!==e.params.environment&&e.update({environment:a.props.selected})}},E({_:2},[f(o,a=>({name:`${a}-option`,fn:s(()=>[u(F(m(`services.routes.item.formats.${a}`)),1)])}))]),1032,["label","selected","onChange","onVnodeBeforeMount"])])),64))]),_:2},1024),l[0]||(l[0]=u()),e.params.environment==="universal"?(r(),c(p,{key:0,"data-testid":"codeblock-yaml-universal",language:"yaml",code:h(_).stringify(d.data.config),"show-k8s-copy-button":!1,"is-searchable":"",query:e.params.codeSearch,"is-filter-mode":e.params.codeFilter,"is-reg-exp-mode":e.params.codeRegExp,onQueryChange:o=>e.update({codeSearch:o}),onFilterModeChange:o=>e.update({codeFilter:o}),onRegExpModeChange:o=>e.update({codeRegExp:o})},null,8,["code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])):(r(),c(x,{key:1,src:`/meshes/${d.data.mesh}/mesh-service/${d.data.id}/as/kubernetes`},{default:s(({data:o})=>[t(p,{"data-testid":"codeblock-yaml-k8s",language:"yaml",code:h(_).stringify(o),"show-k8s-copy-button":!1,"is-searchable":"",query:e.params.codeSearch,"is-filter-mode":e.params.codeFilter,"is-reg-exp-mode":e.params.codeRegExp,onQueryChange:a=>e.update({codeSearch:a}),onFilterModeChange:a=>e.update({codeFilter:a}),onRegExpModeChange:a=>e.update({codeRegExp:a})},null,8,["code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])]),_:2},1032,["src"]))]),_:2,__:[0]},1024)]),_:2},1024)]),_:2},1024)]),_:1})}}});export{X as default};
