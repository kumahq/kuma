import{d as D,u as E,r as n,v as x,a5 as A,S as Z,o as i,j as p,e as b,b as V,i as B,g as k,N as w,h as L,f as M}from"./index-389a0ddf.js";import{_ as O}from"./MultizoneInfo.vue_vue_type_script_setup_true_lang-3a458d12.js";import{_ as P}from"./ZoneIngressDetails.vue_vue_type_script_setup_true_lang-3adef528.js";import{D as q}from"./DataOverview-ce883bca.js";import{u as C}from"./store-b7a9ef0c.js";import{u as F}from"./index-8c223fc5.js";import{Q as f}from"./QueryParameter-70743f73.js";import"./kongponents.es-0486183b.js";import"./AccordionList-30f2c27b.js";import"./_plugin-vue_export-helper-c27b6911.js";import"./DefinitionListItem-2729f1cb.js";import"./EnvoyData-3bb4e268.js";import"./CodeBlock.vue_vue_type_style_index_0_lang-e0fdc5bd.js";import"./StatusInfo.vue_vue_type_script_setup_true_lang-9f43de26.js";import"./EmptyBlock.vue_vue_type_script_setup_true_lang-49465137.js";import"./ErrorBlock-d37185d2.js";import"./LoadingBlock.vue_vue_type_script_setup_true_lang-1e9eaa23.js";import"./SubscriptionHeader.vue_vue_type_script_setup_true_lang-5ea60df9.js";import"./TabsWidget-f4c4d08c.js";import"./datadogLogEvents-302eea7b.js";import"./TagList-704b1dd4.js";import"./StatusBadge-a682bfab.js";const Q={class:"zoneingresses"},R={key:1,class:"kcard-stack"},U={class:"kcard-border"},$={key:0,class:"kcard-border"},fe=D({__name:"ZoneIngressListView",props:{selectedZoneIngressName:{type:[String,null],required:!1,default:null},offset:{type:Number,required:!1,default:0}},setup(z){const l=z,v=F(),N={title:"No Data",message:"There are no Zone Ingresses present."},g=E(),_=C(),u=n(!0),c=n(null),r=n({headers:[{label:"Status",key:"status"},{label:"Name",key:"entity"}],data:[]}),o=n(null),y=n(null),h=n(l.offset);x(()=>g.params.mesh,function(){g.name==="zone-ingress-list-view"&&m(0)}),A(function(){S(l.offset)});function S(e){_.getters["config/getMulticlusterStatus"]&&m(e)}async function m(e){var a;h.value=e,f.set("offset",e>0?e:null),u.value=!0,c.value=null;const t=w;try{const{items:s,next:d}=await v.getAllZoneIngressOverviews({size:t,offset:e});y.value=d,r.value.data=T(s??[]),await I({name:l.selectedZoneIngressName??((a=r.value.data[0])==null?void 0:a.entity.name)})}catch(s){r.value.data=[],o.value=null,s instanceof Error?c.value=s:console.error(s)}finally{u.value=!1}}function T(e){return e.map(t=>{const{name:a}=t,s={name:"zone-ingress-detail-view",params:{zoneIngress:a}},d=Z(t.zoneIngressInsight??{});return{entity:t,detailViewRoute:s,status:d}})}async function I({name:e}){if(e===void 0){o.value=null,f.set("zoneIngress",null);return}try{o.value=await v.getZoneIngressOverview({name:e}),f.set("zoneIngress",e)}catch(t){console.error(t)}}return(e,t)=>{var a;return i(),p("div",Q,[b(_).getters["config/getMulticlusterStatus"]===!1?(i(),V(O,{key:0})):(i(),p("div",R,[B("div",U,[k(q,{"selected-entity-name":(a=o.value)==null?void 0:a.name,"page-size":b(w),"is-loading":u.value,error:c.value,"empty-state":N,"table-data":r.value,"table-data-is-empty":r.value.data.length===0,next:y.value,"page-offset":h.value,onTableAction:I,onLoadData:m},null,8,["selected-entity-name","page-size","is-loading","error","table-data","table-data-is-empty","next","page-offset"])]),L(),o.value!==null?(i(),p("div",$,[k(P,{"zone-ingress-overview":o.value},null,8,["zone-ingress-overview"])])):M("",!0)]))])}}});export{fe as default};
