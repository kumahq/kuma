import{d as C,u as L,r as l,v as V,o as w,b as T,w as h,g as z,e as B,L as _,f as q}from"./index-22d1354e.js";import{S as F}from"./ServiceSummary-6aabb442.js";import{C as M}from"./ContentWrapper-af1a6a54.js";import{D as O}from"./DataOverview-28a8b6fe.js";import{u as Q}from"./index-18f05561.js";import{Q as y}from"./QueryParameter-70743f73.js";import"./kongponents.es-14a71563.js";import"./DefinitionListItem-fe984ffc.js";import"./_plugin-vue_export-helper-c27b6911.js";import"./ResourceCodeBlock.vue_vue_type_script_setup_true_lang-3cfce693.js";import"./CodeBlock.vue_vue_type_style_index_0_lang-ed00a067.js";import"./TextWithCopyButton-df204c95.js";import"./StatusInfo.vue_vue_type_script_setup_true_lang-1e4b4872.js";import"./EmptyBlock.vue_vue_type_script_setup_true_lang-7090adea.js";import"./ErrorBlock-cc03b6cb.js";import"./LoadingBlock.vue_vue_type_script_setup_true_lang-9054bd94.js";import"./toYaml-4e00099e.js";import"./StatusBadge-fcca34f2.js";import"./TagList-2a8be976.js";const ne=C({__name:"ServiceListView",props:{selectedServiceName:{type:String,required:!1,default:null},offset:{type:Number,required:!1,default:0}},setup(k){const u=k,c=Q(),D=[{label:"Name",key:"entity"},{label:"Type",key:"serviceType"},{label:"Address",key:"addressPort"},{label:"Status",key:"status"},{label:"DP proxies (online / total)",key:"dpProxiesStatus"}],A={title:"No Data",message:"There are no service insights present."},m=L(),p=l(!0),v=l(null),S=l(null),b=l(u.offset),t=l(null),o=l(null),n=l({headers:D,data:[]});V(()=>m.params.mesh,function(){m.name==="services-list-view"&&d(0)}),d(u.offset);async function d(a){var i;b.value=a,y.set("offset",a>0?a:null),p.value=!0,v.value=null;const e=m.params.mesh,s=_;try{const{items:r,next:f}=await c.getAllServiceInsightsFromMesh({mesh:e},{size:s,offset:a});S.value=f,n.value.data=E(r??[]),await x({name:u.selectedServiceName??((i=n.value.data[0])==null?void 0:i.entity.name),mesh:e})}catch(r){n.value.data=[],t.value=null,o.value=null,r instanceof Error?v.value=r:console.error(r)}finally{p.value=!1}}function E(a){return a.map(e=>{const{serviceType:s="internal",addressPort:i="",status:r="not_available"}=e,f={name:"service-detail-view",params:{mesh:e.mesh,service:e.name}};let g="â€”";if(e.dataplanes){const{online:N=0,total:P=0}=e.dataplanes;g=`${N} / ${P}`}return{entity:e,detailViewRoute:f,status:r,serviceType:s,dpProxiesStatus:g,addressPort:i}})}async function x({name:a,mesh:e}){a!==void 0?(t.value=await c.getServiceInsight({mesh:e,name:a}),t.value.serviceType==="external"&&(o.value=await c.getExternalServiceByServiceInsightName(e,a)),y.set("service",a)):(t.value=null,o.value=null,y.set("service",null))}return(a,e)=>(w(),T(M,null,{content:h(()=>{var s;return[z(O,{"selected-entity-name":(s=t.value)==null?void 0:s.name,"page-size":B(_),error:v.value,"is-loading":p.value,"empty-state":A,"table-data":n.value,"table-data-is-empty":n.value.data.length===0,next:S.value,"page-offset":b.value,onTableAction:x,onLoadData:d},null,8,["selected-entity-name","page-size","error","is-loading","table-data","table-data-is-empty","next","page-offset"])]}),sidebar:h(()=>[t.value!==null?(w(),T(F,{key:0,service:t.value,"external-service":o.value},null,8,["service","external-service"])):q("",!0)]),_:1}))}});export{ne as default};
