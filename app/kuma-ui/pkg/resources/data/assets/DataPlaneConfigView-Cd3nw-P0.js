import{d as v,r as n,p as c,o as r,w as o,b as s,e as m,c as E,N as F,L as h,l as S,M as V,t as w,m as l,$ as _,Y as y}from"./index-DPa2DUOC.js";const L=v({__name:"DataPlaneConfigView",setup(b){return(B,d)=>{const C=n("RouteTitle"),x=n("XSelect"),i=n("XLayout"),g=n("XCodeBlock"),u=n("DataLoader"),k=n("XCard"),R=n("AppView"),M=n("RouteView");return r(),c(M,{name:"data-plane-config-view",params:{mesh:"",proxy:"",codeSearch:"",codeFilter:!1,codeRegExp:!1,environment:String}},{default:o(({route:e,t:p,uri:f})=>[s(C,{render:!1,title:p("data-planes.routes.item.navigation.data-plane-config-view")},null,8,["title"]),d[1]||(d[1]=m()),s(R,null,{default:o(()=>[s(k,null,{default:o(()=>[s(i,null,{default:o(()=>[s(i,{type:"separated",justify:"end"},{default:o(()=>[(r(),E(F,null,h([["universal","k8s"]],t=>S("div",{key:typeof t},[s(x,{label:p("data-planes.routes.item.format"),selected:e.params.environment,onChange:a=>{e.update({environment:a})},onVnodeBeforeMount:a=>a?.props?.selected&&t.includes(a.props.selected)&&a.props.selected!==e.params.environment&&e.update({environment:a.props.selected})},V({_:2},[h(t,a=>({name:`${a}-option`,fn:o(()=>[m(w(p(`data-planes.routes.item.formats.${a}`)),1)])}))]),1032,["label","selected","onChange","onVnodeBeforeMount"])])),64))]),_:2},1024),d[0]||(d[0]=m()),e.params.environment==="universal"?(r(),c(u,{key:0,src:f(l(_),"/meshes/:mesh/dataplanes/:name",{mesh:e.params.mesh,name:e.params.proxy})},{default:o(({data:t})=>[s(g,{"data-testid":"codeblock-yaml-universal",language:"yaml",code:l(y).stringify(t.config),"is-searchable":"",query:e.params.codeSearch,"is-filter-mode":e.params.codeFilter,"is-reg-exp-mode":e.params.codeRegExp,onQueryChange:a=>e.update({codeSearch:a}),onFilterModeChange:a=>e.update({codeFilter:a}),onRegExpModeChange:a=>e.update({codeRegExp:a})},null,8,["code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])]),_:2},1032,["src"])):(r(),c(u,{key:1,src:f(l(_),"/meshes/:mesh/dataplanes/:name/as/kubernetes",{mesh:e.params.mesh,name:e.params.proxy})},{default:o(({data:t})=>[s(g,{"data-testid":"codeblock-yaml-k8s",language:"yaml",code:l(y).stringify(t),"is-searchable":"",query:e.params.codeSearch,"is-filter-mode":e.params.codeFilter,"is-reg-exp-mode":e.params.codeRegExp,onQueryChange:a=>e.update({codeSearch:a}),onFilterModeChange:a=>e.update({codeFilter:a}),onRegExpModeChange:a=>e.update({codeRegExp:a})},null,8,["code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])]),_:2},1032,["src"]))]),_:2},1024)]),_:2},1024)]),_:2},1024)]),_:1})}}});export{L as default};
