import{d as E,u as S,r as o,v as b,R as x,o as i,j as p,e as k,b as A,i as Z,g as w,L as z,h as V,f as L}from"./index-987a13b5.js";import{_ as B}from"./MultizoneInfo.vue_vue_type_script_setup_true_lang-46f20856.js";import{_ as O}from"./ZoneIngressDetails.vue_vue_type_script_setup_true_lang-df69e970.js";import{D as M}from"./DataOverview-1215d4c8.js";import{u as P}from"./store-b4114847.js";import{u as R}from"./index-6dab244f.js";import{Q as f}from"./QueryParameter-70743f73.js";import"./kongponents.es-7e482eb5.js";import"./AccordionList-51e44c1b.js";import"./_plugin-vue_export-helper-c27b6911.js";import"./DefinitionListItem-1cd1355b.js";import"./EnvoyData-2c3b288c.js";import"./CodeBlock.vue_vue_type_style_index_0_lang-2144e5ca.js";import"./StatusInfo.vue_vue_type_script_setup_true_lang-c94f127a.js";import"./EmptyBlock.vue_vue_type_script_setup_true_lang-846e8989.js";import"./ErrorBlock-e418ef19.js";import"./LoadingBlock.vue_vue_type_script_setup_true_lang-9d99661c.js";import"./SubscriptionHeader.vue_vue_type_script_setup_true_lang-a3b2270c.js";import"./TabsWidget-89c9f343.js";import"./TextWithCopyButton-d256feea.js";import"./TagList-90109e97.js";import"./StatusBadge-46dec4fd.js";const q={class:"zoneingresses"},C={key:1,class:"kcard-stack"},F={class:"kcard-border"},Q={key:0,class:"kcard-border"},de=E({__name:"ZoneIngressListView",props:{selectedZoneIngressName:{type:[String,null],required:!1,default:null},offset:{type:Number,required:!1,default:0}},setup(N){const l=N,v=R(),T={title:"No Data",message:"There are no Zone Ingresses present."},g=S(),_=P(),u=o(!0),c=o(null),n=o({headers:[{label:"Status",key:"status"},{label:"Name",key:"entity"}],data:[]}),r=o(null),y=o(null),h=o(l.offset);b(()=>g.params.mesh,function(){g.name==="zone-ingress-list-view"&&m(0)}),b(()=>_.getters["config/getMulticlusterStatus"],function(e){e&&m(l.offset)},{immediate:!0});async function m(e){var a;h.value=e,f.set("offset",e>0?e:null),u.value=!0,c.value=null;const t=z;try{const{items:s,next:d}=await v.getAllZoneIngressOverviews({size:t,offset:e});y.value=d,n.value.data=D(s??[]),await I({name:l.selectedZoneIngressName??((a=n.value.data[0])==null?void 0:a.entity.name)})}catch(s){n.value.data=[],r.value=null,s instanceof Error?c.value=s:console.error(s)}finally{u.value=!1}}function D(e){return e.map(t=>{const{name:a}=t,s={name:"zone-ingress-detail-view",params:{zoneIngress:a}},d=x(t.zoneIngressInsight??{});return{entity:t,detailViewRoute:s,status:d}})}async function I({name:e}){if(e===void 0){r.value=null,f.set("zoneIngress",null);return}try{r.value=await v.getZoneIngressOverview({name:e}),f.set("zoneIngress",e)}catch(t){console.error(t)}}return(e,t)=>{var a;return i(),p("div",q,[k(_).getters["config/getMulticlusterStatus"]===!1?(i(),A(B,{key:0})):(i(),p("div",C,[Z("div",F,[w(M,{"selected-entity-name":(a=r.value)==null?void 0:a.name,"page-size":k(z),"is-loading":u.value,error:c.value,"empty-state":T,"table-data":n.value,"table-data-is-empty":n.value.data.length===0,next:y.value,"page-offset":h.value,onTableAction:I,onLoadData:m},null,8,["selected-entity-name","page-size","is-loading","error","table-data","table-data-is-empty","next","page-offset"])]),V(),r.value!==null?(i(),p("div",Q,[w(O,{"zone-ingress-overview":r.value},null,8,["zone-ingress-overview"])])):L("",!0)]))])}}});export{de as default};
