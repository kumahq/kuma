import{_ as A}from"./MultizoneInfo.vue_vue_type_script_setup_true_lang-3ec004a6.js";import{_ as Z}from"./ZoneIngressDetails.vue_vue_type_script_setup_true_lang-2bb8d013.js";import{h as V,i as $,e as B,z as L,f as O,_ as P}from"./RouteView.vue_vue_type_script_setup_true_lang-ce7f15c9.js";import{_ as q}from"./RouteTitle.vue_vue_type_script_setup_true_lang-534dcac2.js";import{D as C}from"./DataOverview-34bb7afc.js";import{d as M,q as n,s as F,o as i,a as z,w as I,h as l,b as u,g as k,k as x,e as N,P as T,f as Q}from"./index-915d42a5.js";import{Q as p}from"./QueryParameter-70743f73.js";import"./kongponents.es-c3c87d30.js";import"./SubscriptionHeader.vue_vue_type_script_setup_true_lang-e0a3c638.js";import"./DefinitionListItem-f8be772b.js";import"./EnvoyData-a4f166a4.js";import"./CodeBlock.vue_vue_type_style_index_0_lang-97797141.js";import"./StatusInfo.vue_vue_type_script_setup_true_lang-3238b898.js";import"./EmptyBlock.vue_vue_type_script_setup_true_lang-3707b324.js";import"./ErrorBlock-4e13de22.js";import"./LoadingBlock.vue_vue_type_script_setup_true_lang-324eb686.js";import"./TabsWidget-6353dcd2.js";import"./TextWithCopyButton-ed532790.js";import"./TagList-6f2d054a.js";import"./StatusBadge-0f4b6b93.js";const U={class:"zoneingresses"},G={key:1,class:"kcard-stack"},K={class:"kcard-border"},R={key:0,class:"kcard-border","data-testid":"list-view-summary"},pe=M({__name:"ZoneIngressListView",props:{selectedZoneIngressName:{type:[String,null],required:!1,default:null},offset:{type:Number,required:!1,default:0}},setup(D){const c=D,g=V(),{t:v}=$(),E={title:"No Data",message:"There are no Zone Ingresses present."},_=B(),m=n(!0),d=n(null),o=n({headers:[{label:"Status",key:"status"},{label:"Name",key:"entity"}],data:[]}),r=n(null),y=n(null),b=n(c.offset);F(()=>_.getters["config/getMulticlusterStatus"],function(e){e&&h(c.offset)},{immediate:!0});async function h(e){var a;b.value=e,p.set("offset",e>0?e:null),m.value=!0,d.value=null;const t=T;try{const{items:s,next:f}=await g.getAllZoneIngressOverviews({size:t,offset:e});y.value=f,o.value.data=S(s??[]),await w({name:c.selectedZoneIngressName??((a=o.value.data[0])==null?void 0:a.entity.name)})}catch(s){o.value.data=[],r.value=null,s instanceof Error?d.value=s:console.error(s)}finally{m.value=!1}}function S(e){return e.map(t=>{const{name:a}=t,s={name:"zone-ingress-detail-view",params:{zoneIngress:a}},f=L(t.zoneIngressInsight??{});return{entity:t,detailViewRoute:s,status:f}})}async function w({name:e}){if(e===void 0){r.value=null,p.set("zoneIngress",null);return}try{r.value=await g.getZoneIngressOverview({name:e}),p.set("zoneIngress",e)}catch(t){console.error(t)}}return(e,t)=>(i(),z(P,null,{default:I(()=>[l(q,{title:u(v)("zone-ingresses.routes.items.title")},null,8,["title"]),k(),l(O,{breadcrumbs:[{to:{name:"zone-ingress-list-view"},text:u(v)("zone-ingresses.routes.items.breadcrumbs")}]},{default:I(()=>{var a;return[x("div",U,[u(_).getters["config/getMulticlusterStatus"]===!1?(i(),z(A,{key:0})):(i(),N("div",G,[x("div",K,[l(C,{"selected-entity-name":(a=r.value)==null?void 0:a.name,"page-size":u(T),"is-loading":m.value,error:d.value,"empty-state":E,"table-data":o.value,"table-data-is-empty":o.value.data.length===0,next:y.value,"page-offset":b.value,onTableAction:w,onLoadData:h},null,8,["selected-entity-name","page-size","is-loading","error","table-data","table-data-is-empty","next","page-offset"])]),k(),r.value!==null?(i(),N("div",R,[l(Z,{"zone-ingress-overview":r.value},null,8,["zone-ingress-overview"])])):Q("",!0)]))])]}),_:1},8,["breadcrumbs"])]),_:1}))}});export{pe as default};
