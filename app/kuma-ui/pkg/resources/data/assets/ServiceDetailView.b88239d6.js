import{d as x,o as t,i as D,j as k,a as g,b as N,c as l,A as O,F as P,q,r as s,f as y,k as _,s as B}from"./index.0c4c6d47.js";import{_ as E}from"./EmptyBlock.vue_vue_type_script_setup_true_lang.16c6ba85.js";import{E as V}from"./ErrorBlock.39782751.js";import{_ as $}from"./LoadingBlock.vue_vue_type_script_setup_true_lang.e84843f4.js";import{D as A}from"./DataPlaneList.536442cf.js";import{S as L}from"./ServiceSummary.f2874919.js";import"./ContentWrapper.0535eefe.js";import"./patchQueryParam.3ef0b93e.js";import"./StatusBadge.e9f457ff.js";import"./TagList.0486290a.js";import"./YamlView.vue_vue_type_script_setup_true_lang.812a5c39.js";import"./index.58caa11d.js";import"./CodeBlock.vue_vue_type_style_index_0_lang.cc0862d4.js";import"./_commonjsHelpers.f037b798.js";const b={class:"component-frame"},j=x({__name:"ServiceDetails",props:{service:{type:Object,required:!0},externalService:{type:Object,required:!1,default:null},dataPlaneOverviews:{type:Array,required:!1,default:null},selectedDppName:{type:String,required:!1,default:null}},emits:["load-data"],setup(n,{emit:p}){const e=n;function m(a){p("load-data",a)}return(a,i)=>(t(),D(P,null,[k("div",b,[g(L,{service:e.service,"external-service":n.externalService},null,8,["service","external-service"])]),N(),e.dataPlaneOverviews!==null?(t(),l(A,{key:0,class:"mt-4","data-plane-overviews":e.dataPlaneOverviews,"selected-dpp-name":e.selectedDppName,onLoadData:m},null,8,["data-plane-overviews","selected-dpp-name"])):O("",!0)],64))}}),F={class:"service-details"},Y=x({__name:"ServiceDetailView",props:{selectedDppName:{type:String,required:!1,default:null}},setup(n){const p=n,e=q(),m=B(),a=s(null),i=s(null),d=s(null),f=s(!0),o=s(null);y(()=>e.params.mesh,function(){e.name==="service-detail-view"&&c()}),y(()=>e.params.name,function(){e.name==="service-detail-view"&&c()}),m.dispatch("updatePageTitle",e.params.service),c();async function c(){var w;f.value=!0,o.value=null,a.value=null,i.value=null,d.value=null;const u=e.params.mesh,v=e.params.service,S=`kuma.io/service:${v}`,h=!1;try{if(a.value=await _.getServiceInsight({mesh:u,name:v}),a.value.serviceType==="external")i.value=await _.getExternalService({mesh:u,name:v});else{const r=await _.getAllDataplaneOverviewsFromMesh({mesh:u},{gateway:h,tag:S});d.value=(w=r.items)!=null?w:[]}}catch(r){r instanceof Error?o.value=r:console.error(r)}finally{f.value=!1}}return(u,v)=>(t(),D("div",F,[f.value?(t(),l($,{key:0})):o.value!==null?(t(),l(V,{key:1,error:o.value},null,8,["error"])):a.value===null?(t(),l(E,{key:2})):(t(),l(j,{key:3,service:a.value,"data-plane-overviews":d.value,"external-service":i.value,"selected-dpp-name":p.selectedDppName,onLoadData:c},null,8,["service","data-plane-overviews","external-service","selected-dpp-name"]))]))}});export{Y as default};
