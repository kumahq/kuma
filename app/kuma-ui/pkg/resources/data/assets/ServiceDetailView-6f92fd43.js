import{d as O,o as n,c as F,e as q,a as L,b as T,i as d,j as A,F as B,cv as V,f as $,bP as u,h as S,c8 as x}from"./index-6fa74533.js";import{Q as j}from"./QueryParameter-70743f73.js";import{_ as z}from"./EmptyBlock.vue_vue_type_script_setup_true_lang-3399abcf.js";import{E as I}from"./ErrorBlock-d89befd9.js";import{_ as R}from"./LoadingBlock.vue_vue_type_script_setup_true_lang-e85776a3.js";import{D as C}from"./DataPlaneList-acc04b11.js";import{S as Q}from"./ServiceSummary-3d9cbfaf.js";import"./ContentWrapper-73b34078.js";import"./DataOverview-b014d4ef.js";import"./StatusBadge-a744fa27.js";import"./TagList-c31ed412.js";import"./YamlView.vue_vue_type_script_setup_true_lang-d108a9f0.js";import"./index-a8834e9c.js";import"./CodeBlock.vue_vue_type_style_index_0_lang-eb1f7563.js";import"./_commonjsHelpers-87174ba5.js";const J={class:"component-frame"},M=O({__name:"ServiceDetails",props:{service:{type:Object,required:!0},externalService:{type:Object,required:!1,default:null},dataPlaneOverviews:{type:Array,required:!1,default:null},dppFilterFields:{type:Object,required:!0},selectedDppName:{type:String,required:!1,default:null}},emits:["load-dataplane-overviews"],setup(m,{emit:y}){const s=m;function e(f,i){y("load-dataplane-overviews",f,i)}return(f,i)=>{var o;return n(),F(B,null,[q("div",J,[L(Q,{service:s.service,"external-service":m.externalService},null,8,["service","external-service"])]),T(),s.dataPlaneOverviews!==null?(n(),d(C,{key:0,class:"mt-4","data-plane-overviews":s.dataPlaneOverviews,"dpp-filter-fields":s.dppFilterFields,"selected-dpp-name":s.selectedDppName,"is-gateway-view":((o=s.dataPlaneOverviews[0])==null?void 0:o.dataplane.networking.gateway)!==void 0,onLoadData:e},null,8,["data-plane-overviews","dpp-filter-fields","selected-dpp-name","is-gateway-view"])):A("",!0)],64)}}}),W={class:"service-details"},oe=O({__name:"ServiceDetailView",props:{selectedDppName:{type:String,required:!1,default:null}},setup(m){const y=m,s={name:{description:"filter by name or parts of a name"},protocol:{description:"filter by “kuma.io/protocol” value"},tag:{description:"filter by tags (e.g. “tag: version:2”)"},zone:{description:"filter by “kuma.io/zone” value"}},e=V(),f=$(),i=u(null),o=u(null),g=u(null),_=u(!0),w=u(null);S(()=>e.params.mesh,function(){e.name==="service-detail-view"&&h(0)}),S(()=>e.params.name,function(){e.name==="service-detail-view"&&h(0)});function b(){f.dispatch("updatePageTitle",e.params.service);const a=j.get("filterFields"),l=a!==null?JSON.parse(a):{};h(0,l)}b();async function h(a,l={}){_.value=!0,w.value=null,i.value=null,o.value=null,g.value=null;const c=e.params.mesh,p=e.params.service;try{i.value=await x.getServiceInsight({mesh:c,name:p}),i.value.serviceType==="external"?o.value=await x.getExternalService({mesh:c,name:p}):await P(a,l)}catch(t){t instanceof Error?w.value=t:console.error(t)}finally{_.value=!1}}async function P(a,l){const c=e.params.mesh,p=e.params.service;try{const t=N(p,a,l),r=await x.getAllDataplaneOverviewsFromMesh({mesh:c},t);g.value=r.items??[]}catch{g.value=null}}function N(a,l,c){const t=`kuma.io/service:${a}`,r={...c,offset:l,size:50};if(r.tag){const D=Array.isArray(r.tag)?r.tag:[r.tag],k=[];for(const[v,E]of D.entries())E.startsWith("kuma.io/service:")&&k.push(v);for(let v=k.length-1;v===0;v--)D.splice(k[v],1);r.tag=D.concat(t)}else r.tag=t;return r}return(a,l)=>(n(),F("div",W,[_.value?(n(),d(R,{key:0})):w.value!==null?(n(),d(I,{key:1,error:w.value},null,8,["error"])):i.value===null?(n(),d(z,{key:2})):(n(),d(M,{key:3,service:i.value,"data-plane-overviews":g.value,"external-service":o.value,"dpp-filter-fields":s,"selected-dpp-name":y.selectedDppName,onLoadDataplaneOverviews:P},null,8,["service","data-plane-overviews","external-service","selected-dpp-name"]))]))}});export{oe as default};
