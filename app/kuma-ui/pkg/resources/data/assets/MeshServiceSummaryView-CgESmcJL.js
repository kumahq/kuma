import{d as N,r as d,p as m,o as p,w as a,b as l,e as n,l as g,c as _,t as i,N as C,L as h,M as q,q as w,O as y,m as x,Y as M,af as A}from"./index-e9EOlcJX.js";const Q={key:0,class:"stack-with-borders","data-testid":"structured-view"},Y=N({__name:"MeshServiceSummaryView",props:{items:{}},setup(z){const R=z;return(T,e)=>{const S=d("RouteTitle"),k=d("XAction"),v=d("XBadge"),u=d("XLayout"),V=d("XSelect"),B=d("KumaPort"),b=d("XCodeBlock"),E=d("DataLoader"),F=d("AppView"),X=d("DataCollection"),P=d("RouteView");return p(),m(P,{name:"mesh-service-summary-view",params:{mesh:"",service:"",codeSearch:"",codeFilter:!1,codeRegExp:!1,format:String}},{default:a(({route:t,t:c,can:D,uri:L})=>[l(X,{items:R.items,predicate:r=>r.id===t.params.service},{item:a(({item:r})=>[l(F,null,{title:a(()=>[l(u,{size:"small"},{default:a(()=>[g("h2",null,[l(k,{to:{name:"mesh-service-detail-view",params:{mesh:t.params.mesh,service:t.params.service}}},{default:a(()=>[l(S,{title:c("services.routes.item.title",{name:r.name})},null,8,["title"])]),_:2},1032,["to"])]),e[0]||(e[0]=n()),l(v,{appearance:c(`common.status.appearance.${r.spec.state}`,void 0,{defaultMessage:"neutral"})},{default:a(()=>[n(i(c(`http.api.value.${r.spec.state}`)),1)]),_:2},1032,["appearance"])]),_:2,__:[0]},1024)]),default:a(()=>[e[17]||(e[17]=n()),l(u,{type:"stack"},{default:a(()=>[g("header",null,[l(u,{type:"separated",size:"max"},{default:a(()=>[g("h3",null,i(c("services.routes.item.config")),1),e[1]||(e[1]=n()),(p(),_(C,null,h([["structured","universal","k8s"]],s=>g("div",{key:typeof s},[l(V,{label:c("services.routes.item.format"),selected:t.params.format,onChange:o=>{t.update({format:o})},onVnodeBeforeMount:o=>{var f;return((f=o==null?void 0:o.props)==null?void 0:f.selected)&&s.includes(o.props.selected)&&o.props.selected!==t.params.format&&t.update({format:o.props.selected})}},q({_:2},[h(s,o=>({name:`${o}-option`,fn:a(()=>[n(i(c(`services.routes.item.formats.${o}`)),1)])}))]),1032,["label","selected","onChange","onVnodeBeforeMount"])])),64))]),_:2,__:[1]},1024)]),e[16]||(e[16]=n()),t.params.format==="structured"?(p(),_("div",Q,[l(y,{layout:"horizontal"},{title:a(()=>e[2]||(e[2]=[n(`
                    Dataplane Proxies
                  `)])),body:a(()=>{var s,o,f;return[n(i((s=r.status.dataplaneProxies)==null?void 0:s.connected)+" connected, "+i((o=r.status.dataplaneProxies)==null?void 0:o.healthy)+" healthy ("+i((f=r.status.dataplaneProxies)==null?void 0:f.total)+` total)
                  `,1)]}),_:2,__:[3]},1024),e[12]||(e[12]=n()),r.namespace?(p(),m(y,{key:0,layout:"horizontal"},{title:a(()=>e[4]||(e[4]=[n(`
                    Namespace
                  `)])),body:a(()=>[n(i(r.namespace),1)]),_:2,__:[5]},1024)):w("",!0),e[13]||(e[13]=n()),D("use zones")&&r.zone?(p(),m(y,{key:1,layout:"horizontal"},{title:a(()=>e[6]||(e[6]=[n(`
                    Zone
                  `)])),body:a(()=>[l(k,{to:{name:"zone-cp-detail-view",params:{zone:r.zone}}},{default:a(()=>[n(i(r.zone),1)]),_:2},1032,["to"])]),_:2,__:[7]},1024)):w("",!0),e[14]||(e[14]=n()),l(y,{layout:"horizontal"},{title:a(()=>e[8]||(e[8]=[n(`
                    Ports
                  `)])),body:a(()=>[l(u,{type:"separated",truncate:""},{default:a(()=>[(p(!0),_(C,null,h(r.spec.ports,s=>(p(),m(B,{key:s.port,port:{...s,targetPort:void 0}},null,8,["port"]))),128))]),_:2},1024)]),_:2,__:[9]},1024),e[15]||(e[15]=n()),l(y,{layout:"horizontal"},{title:a(()=>e[10]||(e[10]=[n(`
                    Selector
                  `)])),body:a(()=>[l(u,{type:"separated",truncate:""},{default:a(()=>[(p(!0),_(C,null,h(r.spec.selector.dataplaneTags,(s,o)=>(p(),m(v,{key:`${o}:${s}`,appearance:"info"},{default:a(()=>[n(i(o)+":"+i(s),1)]),_:2},1024))),128))]),_:2},1024)]),_:2,__:[11]},1024)])):t.params.format==="universal"?(p(),m(b,{key:1,"data-testid":"codeblock-yaml-universal",language:"yaml",code:x(M).stringify(r.config),"show-k8s-copy-button":!1,"is-searchable":"",query:t.params.codeSearch,"is-filter-mode":t.params.codeFilter,"is-reg-exp-mode":t.params.codeRegExp,onQueryChange:s=>t.update({codeSearch:s}),onFilterModeChange:s=>t.update({codeFilter:s}),onRegExpModeChange:s=>t.update({codeRegExp:s})},null,8,["code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])):(p(),m(E,{key:2,src:L(x(A),"/meshes/:mesh/mesh-service/:name/as/kubernetes",{mesh:t.params.mesh,name:t.params.service})},{default:a(({data:s})=>[l(b,{"data-testid":"codeblock-yaml-k8s",language:"yaml",code:x(M).stringify(s),"show-k8s-copy-button":!1,"is-searchable":"",query:t.params.codeSearch,"is-filter-mode":t.params.codeFilter,"is-reg-exp-mode":t.params.codeRegExp,onQueryChange:o=>t.update({codeSearch:o}),onFilterModeChange:o=>t.update({codeFilter:o}),onRegExpModeChange:o=>t.update({codeRegExp:o})},null,8,["code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])]),_:2},1032,["src"]))]),_:2,__:[16]},1024)]),_:2,__:[17]},1024)]),_:2},1032,["items","predicate"])]),_:1})}}});export{Y as default};
