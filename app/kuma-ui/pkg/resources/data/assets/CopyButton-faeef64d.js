import{K as _}from"./index-52545d1d.js";import{d as f,a as l,o as y,b as x,w as i,e as c,q as r,af as T,f as C,r as h,ag as m,p as B,t as b,_ as v}from"./index-8567ed34.js";const g={class:"visually-hidden"},S={inheritAttrs:!1},w=f({...S,__name:"CopyButton",props:{text:{default:""},getText:{type:[Function,null],default:null},copyText:{default:"Copy"},tooltipSuccessText:{default:"Copied code!"},tooltipFailText:{default:"Failed to copy!"},hasBorder:{type:Boolean,default:!1},hideTitle:{type:Boolean,default:!1}},setup(d){const t=d;async function p(s,n){const e=s.currentTarget;let o=!1;try{const a=t.getText?await t.getText():t.text;o=await n(a)}catch{o=!1}finally{const a=o?t.tooltipSuccessText:t.tooltipFailText;e instanceof HTMLButtonElement&&(e.setAttribute("data-tooltip-copy-success",String(o)),e.setAttribute("data-tooltip-text",a),window.setTimeout(function(){e instanceof HTMLButtonElement&&e.removeAttribute("data-tooltip-text")},1500))}}return(s,n)=>{const e=l("KButton"),o=l("KClipboardProvider");return y(),x(o,null,{default:i(({copyToClipboard:a})=>[c(e,m(s.$attrs,{appearance:"tertiary",class:["copy-button",{"non-visual-button":!t.hasBorder}],"data-testid":"copy-button",title:t.hideTitle?void 0:t.copyText,type:"button",onClick:u=>p(u,a)}),{default:i(()=>[c(r(T),{size:r(_),title:t.hideTitle?void 0:t.copyText,"hide-title":t.hideTitle},null,8,["size","title","hide-title"]),C(),h(s.$slots,"default",{},()=>[B("span",g,b(t.copyText),1)],!0)]),_:2},1040,["class","title","onClick"])]),_:3})}}});const k=v(w,[["__scopeId","data-v-6ad0e157"]]);export{k as C};
