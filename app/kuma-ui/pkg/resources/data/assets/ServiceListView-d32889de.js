import{d as E,l as C,m as L,r,n as R,o as g,k,w as T,a as V,x as q}from"./index-e4d45609.js";import{S as z}from"./ServiceSummary-cc97eaad.js";import{C as B}from"./ContentWrapper-af02b767.js";import{D as M}from"./DataOverview-bc9c483a.js";import{Q as P}from"./QueryParameter-70743f73.js";import"./StatusBadge-cb84b968.js";import"./TagList-f1855d1f.js";import"./YamlView.vue_vue_type_script_setup_true_lang-9917b2d3.js";import"./CodeBlock.vue_vue_type_style_index_0_lang-dc80c0c7.js";import"./EmptyBlock.vue_vue_type_script_setup_true_lang-e127f388.js";import"./ErrorBlock-e4240a41.js";import"./LoadingBlock.vue_vue_type_script_setup_true_lang-01d7e33d.js";import"./toYaml-4e00099e.js";const X=E({__name:"ServiceListView",props:{selectedServiceName:{type:String,required:!1,default:null},offset:{type:Number,required:!1,default:0}},setup(_){const c=_,u=C(),A=[{label:"Service",key:"name"},{label:"Type",key:"serviceType"},{label:"Address",key:"addressPort"},{label:"Status",key:"status"},{label:"DP proxies (online / total)",key:"dpProxiesStatus"}],S=50,N={title:"No Data",message:"There are no service insights present."},m=L(),p=r(!0),v=r(null),x=r(null),h=r(c.offset),l=r(null),b=r(null),o=r({headers:A,data:[]});R(()=>m.params.mesh,function(){m.name==="service-list-view"&&d(0)}),d(c.offset);async function d(e){h.value=e,P.set("offset",e>0?e:null),p.value=!0,v.value=null;const t=m.params.mesh,s=S;try{const{items:a,next:f}=await u.getAllServiceInsightsFromMesh({mesh:t},{size:s,offset:e});if(x.value=f,Array.isArray(a)&&a.length>0){a.sort((n,i)=>n.name>i.name?1:n.name<i.name?-1:0),o.value.data=a.map(n=>D(n));const y=c.selectedServiceName??a[0].name;await w({name:y,mesh:t})}else o.value.data=[]}catch(a){a instanceof Error?v.value=a:console.error(a)}finally{p.value=!1}}function D(e){const t={name:"service-detail-view",params:{mesh:e.mesh,service:e.name}},s={name:"mesh-detail-view",params:{mesh:e.mesh}};let a="â€”";if(e.dataplanes){const{online:n=0,total:i=0}=e.dataplanes;a=`${n} / ${i}`}const f=e.addressPort,y=e.serviceType??"internal";return{...e,serviceType:y,nameRoute:t,meshRoute:s,dpProxiesStatus:a,addressPort:f}}async function w({mesh:e,name:t}){l.value=await u.getServiceInsight({mesh:e,name:t}),l.value.serviceType==="external"&&(b.value=await u.getExternalServiceByServiceInsightName(e,t)),P.set("service",t)}return(e,t)=>(g(),k(B,null,{content:T(()=>{var s;return[V(M,{"selected-entity-name":(s=l.value)==null?void 0:s.name,"page-size":S,error:v.value,"is-loading":p.value,"empty-state":N,"table-data":o.value,"table-data-is-empty":o.value.data.length===0,next:x.value,"page-offset":h.value,onTableAction:w,onLoadData:d},null,8,["selected-entity-name","error","is-loading","table-data","table-data-is-empty","next","page-offset"])]}),sidebar:T(()=>[l.value!==null?(g(),k(z,{key:0,service:l.value,"external-service":b.value},null,8,["service","external-service"])):q("",!0)]),_:1}))}});export{X as default};
