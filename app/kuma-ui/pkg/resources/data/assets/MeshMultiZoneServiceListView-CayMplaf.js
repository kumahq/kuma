import{d as P,r as t,p,o as i,w as s,b as o,e as m,l as f,I as q,m as K,a1 as T,q as $,K as G,t as u,c as g,N as w,L as y,y as I,_ as Z}from"./index-DI4CRQyW.js";const E=P({__name:"MeshMultiZoneServiceListView",setup(F){return(j,n)=>{const z=t("RouteTitle"),C=t("XSearch"),h=t("XAction"),X=t("XCopyButton"),b=t("KumaPort"),d=t("XLayout"),V=t("XBadge"),k=t("XActionGroup"),L=t("XDrawer"),A=t("RouterView"),B=t("DataCollection"),D=t("DataLoader"),R=t("XCard"),S=t("AppView"),x=t("RouteView");return i(),p(x,{name:"mesh-multi-zone-service-list-view",params:{page:1,size:Number,mesh:"",service:"",s:""}},{default:s(({can:N,route:e,t:_,uri:M,me:c})=>[o(z,{render:!1,title:_("services.routes.mesh-multi-zone-service-list-view.title")},null,8,["title"]),n[6]||(n[6]=m()),o(S,{docs:_("services.mesh-multi-zone-service.href.docs")},{default:s(()=>[o(R,null,{default:s(()=>[o(d,null,{default:s(()=>[f("search",null,[f("form",{onSubmit:n[0]||(n[0]=q(()=>{},["prevent"]))},[o(C,{class:"search-field",keys:["name","namespace",...N("use zones")?["zone"]:[],"label"],value:e.params.s,onChange:r=>e.update({s:r})},null,8,["keys","value","onChange"])],32)]),n[5]||(n[5]=m()),o(D,{src:M(K(T),"/meshes/:mesh/mesh-multi-zone-services",{mesh:e.params.mesh},{page:e.params.page,size:e.params.size,search:e.params.s}),variant:"list"},{default:s(({data:r})=>[o(B,{type:"services",items:r.items,page:e.params.page,"page-size":e.params.size,total:r.total,onChange:e.update},{default:s(()=>[o(G,{headers:[{...c.get("headers.name"),label:"Name",key:"name"},{...c.get("headers.ports"),label:"Ports",key:"ports"},{...c.get("headers.labels"),label:"Selector",key:"labels"},{...c.get("headers.actions"),label:"Actions",key:"actions",hideLabel:!0}],items:r.items,"is-selected-row":a=>a.name===e.params.service,onResize:c.set},{name:s(({row:a})=>[o(X,{text:a.name},{default:s(()=>[o(h,{"data-action":"",to:{name:"mesh-multi-zone-service-summary-view",params:{mesh:a.mesh,service:a.id},query:{page:e.params.page,size:e.params.size,s:e.params.s}}},{default:s(()=>[m(u(a.name),1)]),_:2},1032,["to"])]),_:2},1032,["text"])]),ports:s(({row:a})=>[o(d,{type:"separated",truncate:""},{default:s(()=>[(i(!0),g(w,null,y(a.spec.ports,l=>(i(),p(b,{key:l.port,port:{...l,targetPort:void 0}},null,8,["port"]))),128))]),_:2},1024)]),labels:s(({row:a})=>[o(d,{type:"separated",truncate:""},{default:s(()=>[(i(!0),g(w,null,y(a.spec.selector.meshService.matchLabels,(l,v)=>(i(),p(V,{key:`${v}:${l}`,appearance:"info"},{default:s(()=>[m(u(v)+":"+u(l),1)]),_:2},1024))),128))]),_:2},1024)]),actions:s(({row:a})=>[o(k,null,{default:s(()=>[o(h,{to:{name:"mesh-multi-zone-service-detail-view",params:{mesh:a.mesh,service:a.id}}},{default:s(()=>[m(u(_("common.collection.actions.view")),1)]),_:2},1032,["to"])]),_:2},1024)]),_:2},1032,["headers","items","is-selected-row","onResize"]),n[4]||(n[4]=m()),r.items&&e.params.service?(i(),p(A,{key:0},{default:s(a=>[o(L,{onClose:l=>e.replace({name:"mesh-multi-zone-service-list-view",params:{mesh:e.params.mesh},query:{page:e.params.page,size:e.params.size,s:e.params.s}})},{default:s(()=>[(i(),p(I(a.Component),{items:r.items},null,8,["items"]))]),_:2},1032,["onClose"])]),_:2},1024)):$("",!0)]),_:2},1032,["items","page","page-size","total","onChange"])]),_:2},1032,["src"])]),_:2},1024)]),_:2},1024)]),_:2},1032,["docs"])]),_:1})}}}),J=Z(E,[["__scopeId","data-v-c3c505c5"]]);export{J as default};
