import{$ as f}from"./kongponents.es-c2485d1e.js";import{k as d}from"./kumaApi-302acf12.js";import{L as Z}from"./LoadingBox-da7c932b.js";import{a as b,O}from"./OnboardingNavigation-0c346547.js";import{O as x}from"./OnboardingPage-fe05b34b.js";import{u as v}from"./index-7ce7c993.js";import{_ as y}from"./_plugin-vue_export-helper-c27b6911.js";import{i as t,a as z,w as a,o,e as c,f as s,g as i,t as I,h as r,b as k}from"./runtime-dom.esm-bundler-32659b48.js";import"./production-c33f040b.js";import"./store-96085224.js";const T=v(),l=1e3,A={name:"MultiZoneView",components:{OnboardingNavigation:b,OnboardingHeading:O,OnboardingPage:x,LoadingBox:Z,KCard:f},data(){return{env:T,hasZones:!1,hasZoneIngresses:!1,zoneTimeout:null,zoneIngressTimeout:null}},computed:{servicesOnline(){return this.hasZoneIngresses&&this.hasZones}},created(){this.getZoneIngresses(),this.getZones()},unmounted(){clearTimeout(this.zoneTimeout),clearTimeout(this.zoneIngressTimeout)},methods:{async getZones(){try{const{total:e}=await d.getZones();this.hasZones=e>0}catch(e){console.error(e)}this.hasZones||(this.zoneTimeout=setTimeout(()=>this.getZones(),l))},async getZoneIngresses(){try{const{total:e}=await d.getAllZoneIngressOverviews();this.hasZoneIngresses=e>0}catch(e){console.error(e)}this.hasZoneIngresses||(this.zoneIngressTimeout=setTimeout(()=>this.getZoneIngresses(),l))}}},C=i("p",{class:"text-center mb-4"},`
        A zone requires both the zone control plane and zone ingress. On Kubernetes, you run a single command to create both resources. On Universal, you must create them separately.
      `,-1),N=["href"],w={class:"text-center my-4"},L={key:0,class:"text-green-500","data-testid":"zone-connected"},B={key:1,class:"text-red-500","data-testid":"zone-disconnected"},U={class:"text-center mt-4 mb-10"},K={key:0,class:"text-green-500","data-testid":"zone-ingress-connected"},M={key:1,class:"text-red-500","data-testid":"zone-ingress-disconnected"},V={key:0,class:"flex justify-center"};function D(e,P,R,S,n,m){const g=t("OnboardingHeading"),h=t("KCard"),_=t("LoadingBox"),u=t("OnboardingNavigation"),p=t("OnboardingPage");return o(),z(p,null,{header:a(()=>[c(g,null,{title:a(()=>[s(`
          Add zones
        `)]),_:1})]),content:a(()=>[C,s(),c(h,{title:"See the documentation for options to install:","border-variant":"noBorder"},{body:a(()=>[i("a",{target:"_blank",class:"external-link-code-block",href:`${n.env("KUMA_DOCS_URL")}/deployments/multi-zone/?${n.env("KUMA_UTM_QUERY_PARAMS")}#zone-control-plane`},I(n.env("KUMA_DOCS_URL"))+`/deployments/multi-zone/#zone-control-plane
          `,9,N)]),_:1}),s(),i("div",null,[i("p",w,[s(`
          Zone status:
          `),n.hasZones?(o(),r("span",L,"Connected")):(o(),r("span",B,"Disconnected"))]),s(),i("p",U,[s(`
          Zone ingress status:
          `),n.hasZoneIngresses?(o(),r("span",K,"Connected")):(o(),r("span",M,"Disconnected"))]),s(),!n.hasZoneIngresses||!n.hasZones?(o(),r("div",V,[c(_)])):k("",!0)])]),navigation:a(()=>[c(u,{"next-step":"onboarding-create-mesh","previous-step":"onboarding-configuration-types","should-allow-next":m.servicesOnline},null,8,["should-allow-next"])]),_:1})}const X=y(A,[["render",D]]);export{X as default};
