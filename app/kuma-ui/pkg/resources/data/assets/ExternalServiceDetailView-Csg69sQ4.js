import{d as V,r as s,p as m,o as c,w as t,b as n,l as u,m as p,ak as x,e as d,q as B,O as C,t as g,c as F,N as w,L as v,M as L,Y as k}from"./index-DCInHvfM.js";import{T as q}from"./TagList-DEUATBg8.js";const A={class:"stack"},z=V({__name:"ExternalServiceDetailView",setup(D){return(N,r)=>{const b=s("XCopyButton"),M=s("XAboutCard"),X=s("XSelect"),f=s("XLayout"),y=s("XCodeBlock"),h=s("DataLoader"),E=s("XCard"),R=s("AppView"),S=s("RouteView");return c(),m(S,{name:"external-service-detail-view",params:{mesh:"",service:"",codeSearch:"",codeFilter:!1,codeRegExp:!1,environment:String}},{default:t(({route:e,t:i,uri:_})=>[n(R,null,{default:t(()=>[u("div",A,[n(h,{src:_(p(x),"/meshes/:mesh/external-services/:name",{mesh:e.params.mesh,name:e.params.service})},{default:t(({data:l})=>[n(M,{"data-testid":"external-service-details",title:i("external-services.detail.about.title"),created:l.creationTime,modified:l.modificationTime},{default:t(()=>[n(C,{layout:"horizontal"},{title:t(()=>[d(g(i("http.api.property.address")),1)]),body:t(()=>[n(b,{variant:"badge",format:"default",text:l.networking.address},null,8,["text"])]),_:2},1024),r[2]||(r[2]=d()),l.tags?(c(),m(C,{key:0,layout:"horizontal"},{title:t(()=>[d(g(i("http.api.property.tags")),1)]),body:t(()=>[n(q,{tags:l.tags,"should-truncate":""},null,8,["tags"])]),_:2},1024)):B("",!0)]),_:2},1032,["title","created","modified"]),r[5]||(r[5]=d()),n(E,null,{title:t(()=>[u("h3",null,g(i("external-services.detail.config")),1)]),default:t(()=>[r[4]||(r[4]=d()),n(f,null,{default:t(()=>[n(f,{type:"separated",justify:"end"},{default:t(()=>[(c(),F(w,null,v([["universal","k8s"]],o=>u("div",{key:typeof o},[n(X,{label:i("external-services.routes.item.format"),selected:e.params.environment,onChange:a=>{e.update({environment:a})},onVnodeBeforeMount:a=>a?.props?.selected&&o.includes(a.props.selected)&&a.props.selected!==e.params.environment&&e.update({environment:a.props.selected})},L({_:2},[v(o,a=>({name:`${a}-option`,fn:t(()=>[d(g(i(`external-services.routes.item.formats.${a}`)),1)])}))]),1032,["label","selected","onChange","onVnodeBeforeMount"])])),64))]),_:2},1024),r[3]||(r[3]=d()),e.params.environment==="universal"?(c(),m(y,{key:0,"data-testid":"codeblock-yaml-universal",language:"yaml",code:p(k).stringify(l.config),"is-searchable":"",query:e.params.codeSearch,"is-filter-mode":e.params.codeFilter,"is-reg-exp-mode":e.params.codeRegExp,onQueryChange:o=>e.update({codeSearch:o}),onFilterModeChange:o=>e.update({codeFilter:o}),onRegExpModeChange:o=>e.update({codeRegExp:o})},null,8,["code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])):(c(),m(h,{key:1,src:_(p(x),"/meshes/:mesh/external-services/:name/as/kubernetes",{mesh:e.params.mesh,name:e.params.service})},{default:t(({data:o})=>[n(y,{"data-testid":"codeblock-yaml-k8s",language:"yaml",code:p(k).stringify(o),"is-searchable":"",query:e.params.codeSearch,"is-filter-mode":e.params.codeFilter,"is-reg-exp-mode":e.params.codeRegExp,onQueryChange:a=>e.update({codeSearch:a}),onFilterModeChange:a=>e.update({codeFilter:a}),onRegExpModeChange:a=>e.update({codeRegExp:a})},null,8,["code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])]),_:2},1032,["src"]))]),_:2},1024)]),_:2},1024)]),_:2},1032,["src"])])]),_:2},1024)]),_:1})}}});export{z as default};
