import{d as f,j as x,r as g,o as a,e as y,g as l,X as $,Z as S,q as v,h as s,w as i,a as d,F as k,s as q,t as _,c as P,b as w,f as C}from"./index-7e71fe76.js";import{r as N,E as T,s as V,p as B,m as A,e as L,g as D,A as E,_ as F}from"./RouteView.vue_vue_type_script_setup_true_lang-159ad8a0.js";import{_ as R}from"./ResourceCodeBlock.vue_vue_type_script_setup_true_lang-2d09b925.js";import{T as I}from"./TabsWidget-dda31314.js";import{T as W}from"./TextWithCopyButton-494dc184.js";import{_ as j}from"./RouteTitle.vue_vue_type_script_setup_true_lang-3c1a3272.js";import"./CodeBlock.vue_vue_type_style_index_0_lang-0b9f82eb.js";import"./StatusInfo.vue_vue_type_script_setup_true_lang-e15754a4.js";const H=v("h2",null,"Dataplanes",-1),K=f({__name:"PolicyConnections",props:{mesh:{type:String,required:!0},policyPath:{type:String,required:!0},policyName:{type:String,required:!0}},setup(m){const e=m,o=x("");return(u,n)=>{const h=g("RouterLink");return a(),y(k,null,[H,l(),$(v("input",{id:"dataplane-search","onUpdate:modelValue":n[0]||(n[0]=t=>o.value=t),type:"text",class:"k-input mt-4",placeholder:"Filter by name",required:"","data-testid":"dataplane-search-input"},null,512),[[S,o.value]]),l(),s(B,{src:`/meshes/${e.mesh}/policy-path/${e.policyPath}/policy/${e.policyName}/dataplanes`},{default:i(({data:t,isLoading:r,error:p})=>[r?(a(),d(N,{key:0})):p?(a(),d(T,{key:1,error:p},null,8,["error"])):t===void 0||t.items.length===0?(a(),d(V,{key:2})):(a(!0),y(k,{key:3},q(t.items.filter(c=>c.dataplane.name.toLowerCase().includes(o.value.toLowerCase())),(c,b)=>(a(),y("p",{key:b,class:"mt-2","data-testid":"dataplane-name"},[s(h,{to:{name:"data-plane-detail-view",params:{mesh:c.dataplane.mesh,dataPlane:c.dataplane.name}}},{default:i(()=>[l(_(c.dataplane.name),1)]),_:2},1032,["to"])]))),128))]),_:1},8,["src"])],64)}}}),M={class:"policy-details kcard-border"},O={class:"entity-heading","data-testid":"policy-single-entity"},U=f({__name:"PolicyDetails",props:{mesh:{type:String,required:!0},path:{type:String,required:!0},name:{type:String,required:!0},type:{type:String,required:!0}},setup(m){const e=m,o=A(),u=[{hash:"#overview",title:"Overview"},{hash:"#affected-dpps",title:"Affected DPPs"}],n=P(()=>({name:"policy-detail-view",params:{mesh:e.mesh,policy:e.name,policyPath:e.path}}));async function h(t){const{name:r,mesh:p,path:c}=e;return await o.getSinglePolicyEntity({name:r,mesh:p,path:c},t)}return(t,r)=>{const p=g("router-link");return a(),y("div",M,[s(I,{tabs:u},{tabHeader:i(()=>[v("h1",O,[l(_(e.type)+`:

          `,1),s(W,{text:e.name},{default:i(()=>[s(p,{to:n.value},{default:i(()=>[l(_(e.name),1)]),_:1},8,["to"])]),_:1},8,["text"])])]),overview:i(()=>[s(R,{id:"code-block-policy","resource-fetcher":h,"resource-fetcher-watch-key":e.name,"is-searchable":""},null,8,["resource-fetcher-watch-key"])]),"affected-dpps":i(()=>[s(K,{mesh:e.mesh,"policy-name":e.name,"policy-path":e.path},null,8,["mesh","policy-name","policy-path"])]),_:1})])}}}),te=f({__name:"PolicyDetailView",props:{mesh:{},policyPath:{},policyName:{}},setup(m){const e=m,o=L(),{t:u}=D(),n=P(()=>o.state.policyTypesByPath[e.policyPath]);return(h,t)=>(a(),d(F,{name:"policy-detail-view"},{default:i(({route:r})=>[s(j,{title:w(u)("policies.routes.item.title",{name:r.params.policy})},null,8,["title"]),l(),s(E,{breadcrumbs:[{to:{name:"policies-list-view",params:{mesh:r.params.mesh,policyPath:r.params.policyPath}},text:w(u)("policies.routes.item.breadcrumbs")}]},{default:i(()=>[n.value?(a(),d(U,{key:0,name:e.policyName,mesh:e.mesh,path:e.policyPath,type:n.value.name},null,8,["name","mesh","path","type"])):C("",!0)]),_:2},1032,["breadcrumbs"])]),_:1}))}});export{te as default};
