import{d as w,C as B,r as S,o as e,e as m,H as V,I as L,i as b,g as d,h as p,w as o,a as s,F as f,x as P,t as C,b as h,l as N}from"./index-596309d7.js";import{E as k,n as v,o as x,i as $,h as q,l as A,A as E,T as F,_ as I}from"./RouteView.vue_vue_type_script_setup_true_lang-f07f5ccf.js";import{_ as R}from"./ResourceCodeBlock.vue_vue_type_script_setup_true_lang-f97b1445.js";import{_ as j}from"./RouteTitle.vue_vue_type_script_setup_true_lang-9b4875d7.js";import"./WarningIcon.vue_vue_type_script_setup_true_lang-2bfae8bd.js";import"./CodeBlock.vue_vue_type_style_index_0_lang-3bbf3079.js";import"./toYaml-4e00099e.js";const H={key:3,"data-testid":"affected-data-plane-proxies"},K=w({__name:"PolicyConnections",props:{mesh:{type:String,required:!0},policyPath:{type:String,required:!0},policyName:{type:String,required:!0}},setup(u){const a=u,c=B("");return(_,t)=>{const n=S("RouterLink");return e(),m(f,null,[V(b("input",{id:"dataplane-search","onUpdate:modelValue":t[0]||(t[0]=i=>c.value=i),type:"text",class:"k-input mt-4",placeholder:"Filter by name",required:"","data-testid":"dataplane-search-input"},null,512),[[L,c.value]]),d(),p($,{src:`/meshes/${a.mesh}/policy-path/${a.policyPath}/policy/${a.policyName}/dataplanes`},{default:o(({data:i,error:l})=>[l?(e(),s(k,{key:0,error:l},null,8,["error"])):i===void 0?(e(),s(v,{key:1})):i.items.length===0?(e(),s(x,{key:2})):(e(),m("ul",H,[(e(!0),m(f,null,P(i.items.filter(r=>r.dataplane.name.toLowerCase().includes(c.value.toLowerCase())),(r,y)=>(e(),m("li",{key:y,"data-testid":"dataplane-name"},[p(n,{to:{name:"data-plane-detail-view",params:{mesh:r.dataplane.mesh,dataPlane:r.dataplane.name}}},{default:o(()=>[d(C(r.dataplane.name),1)]),_:2},1032,["to"])]))),128))]))]),_:1},8,["src"])],64)}}}),M={class:"stack"},O=w({__name:"PolicyDetails",props:{policy:{type:Object,required:!0},path:{type:String,required:!0}},setup(u){const a=u,{t:c}=q(),_=A();async function t(n){const{name:i,mesh:l}=a.policy,r=a.path;return await _.getSinglePolicyEntity({name:i,mesh:l,path:r},n)}return(n,i)=>(e(),m("div",M,[p(h(N),null,{body:o(()=>[b("h2",null,C(h(c)("policies.detail.affected_dpps")),1),d(),p(K,{mesh:a.policy.mesh,"policy-name":a.policy.name,"policy-path":a.path},null,8,["mesh","policy-name","policy-path"])]),_:1}),d(),p(R,{id:"code-block-policy",resource:a.policy,"resource-fetcher":t,"is-searchable":""},null,8,["resource"])]))}}),Y=w({__name:"PolicyDetailView",setup(u){const{t:a}=q();return(c,_)=>(e(),s(I,{name:"policy-detail-view","data-testid":"policy-detail-view"},{default:o(({route:t})=>[p($,{src:"/*/policy-types"},{default:o(({data:n,error:i})=>[i?(e(),s(k,{key:0,error:i},null,8,["error"])):n===void 0?(e(),s(v,{key:1})):n.policies.length===0?(e(),s(x,{key:2})):(e(!0),m(f,{key:3},P([n.policies.find(l=>l.path===t.params.policyPath)??n.policies[0]],l=>(e(),s(E,{key:l.name,breadcrumbs:[{to:{name:"mesh-detail-view",params:{mesh:t.params.mesh}},text:t.params.mesh},{to:{name:"policies-list-view",params:{mesh:t.params.mesh,policyPath:t.params.policyPath}},text:h(a)("policies.routes.item.breadcrumbs")}]},{title:o(()=>[b("h1",null,[p(F,{text:t.params.policy},{default:o(()=>[p(j,{title:h(a)("policies.routes.item.title",{name:t.params.policy}),render:!0},null,8,["title"])]),_:2},1032,["text"])])]),default:o(()=>[d(),p($,{src:`/meshes/${t.params.mesh}/policy-path/${l.path}/policy/${t.params.policy}`},{default:o(({data:r,isLoading:y,error:g})=>[y?(e(),s(v,{key:0})):g?(e(),s(k,{key:1,error:g},null,8,["error"])):r===void 0?(e(),s(x,{key:2})):(e(),s(O,{key:3,policy:r,path:l.path,"data-testid":"detail-view-details"},null,8,["policy","path"]))]),_:2},1032,["src"])]),_:2},1032,["breadcrumbs"]))),128))]),_:2},1024)]),_:1}))}});export{Y as default};
