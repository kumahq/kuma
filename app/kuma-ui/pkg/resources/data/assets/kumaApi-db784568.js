var m=Object.defineProperty;var d=(n,e,t)=>e in n?m(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var a=(n,e,t)=>(d(n,typeof e!="symbol"?e+"":e,t),t);class $ extends Error{constructor({title:t=null,message:s,code:r=null,statusCode:i,causes:l=[]}){super(s);a(this,"title");a(this,"code");a(this,"causes");a(this,"statusCode");this.name="ApiError",this.title=t,this.code=r,this.statusCode=i,this.causes=l}toJSON(){return{name:this.name,title:this.title,message:this.message,code:this.code,statusCode:this.statusCode,causes:this.causes}}}async function y(n,e={}){var c;const t=e,s=t.method??"GET";t.headers=t.headers instanceof Headers?t.headers:new Headers(t.headers),!t.headers.has("content-type")&&["POST","PUT","PATCH"].includes(s)&&t.headers.set("content-type","application/json");let r=n;"params"in e&&(s==="GET"?r+=`?${new URLSearchParams(e.params).toString()}`:(c=t.headers.get("content-type"))!=null&&c.startsWith("application/json")&&(t.body=JSON.stringify(e.params)));let i;try{i=await fetch(r,t)}catch(p){throw v(p)}const l=i.headers.get("content-type"),o=(l!==null?l.startsWith("application/json"):!1)?await i.json():await i.text();if(i.ok)return{response:i,data:o};throw w(i,o)}function v(n){const e=n instanceof Error?n.message:"An unknown network error occurred.";return new Error(e)}function w(n,e){let t=null,s="An error has occurred while trying to load this data.",r=null,i=[];return typeof e=="string"&&e.length>0?s=e:e&&(Object.prototype.hasOwnProperty.call(e,"title")&&(t=e.title),Object.prototype.hasOwnProperty.call(e,"details")&&(s=e.details),Object.prototype.hasOwnProperty.call(e,"code")&&(r=e.code),Object.prototype.hasOwnProperty.call(e,"causes")&&Array.isArray(e.causes)&&(i=e.causes)),n.status===403&&(s="You currently donâ€™t have access to this data."),new $({title:t,message:s,code:r,causes:i,statusCode:n.status})}const h=window.location.origin;class f{constructor(){a(this,"_baseUrl",h)}get baseUrl(){return this._baseUrl}set baseUrl(e){if(e.startsWith("http"))this._baseUrl=u(e);else{const t=E(e);this._baseUrl=[h,t].filter(s=>s!=="").join("/")}}async get(e,t){const s=g(t);s.method="GET";const{data:r}=await this.raw(e,s);return r}async raw(e,t){const s=g(t),r=e.startsWith("http")?e:[this.baseUrl,e].join("/");return y(r,s)}}function u(n){return n.replace(/\/+$/,"")}function A(n){return n.replace(/^\/+/,"")}function E(n){return u(A(n))}function g(n){const e=n??{};if(e.params&&!Array.isArray(e.params)){const t=[];for(const[s,r]of Object.entries(e.params))if(r!==void 0)if(Array.isArray(r))for(const i of r)t.push([s,i]);else t.push([s,r]);e.params=t}return e}class O{constructor(){a(this,"client");this.client=new f}get baseUrl(){return this.client.baseUrl}setBaseUrl(e){this.client.baseUrl=e}getInfo(){return this.client.get("")}async getStatus(){try{const{response:e}=await this.client.raw("");return e.status===200?"OK":null}catch{return null}}async getLatestVersion(){return this.client.get("https://kuma.io/latest_version/")}getConfig(){return this.client.get("config")}getPolicyTypes(){return this.client.get("policies")}getGlobalInsights(){return this.client.get("global-insights")}getZones(e){return this.client.get("zones",{params:e})}getZone({name:e},t){return this.client.get(`zones/${e}`,{params:t})}getAllZoneOverviews(e){return this.client.get("zones+insights",{params:e})}getZoneOverview({name:e},t){return this.client.get(`zones+insights/${e}`,{params:t})}getZoneIngressData({zoneIngressName:e,dataPath:t},s){return this.client.get(`zoneingresses/${e}/${t}`,{params:s})}getAllZoneIngressOverviews(e){return this.client.get("zoneingresses+insights",{params:e})}getZoneIngressOverview({name:e},t){return this.client.get(`zoneingresses+insights/${e}`,{params:t})}getZoneEgressData({zoneEgressName:e,dataPath:t},s){return this.client.get(`zoneegresses/${e}/${t}`,{params:s})}getAllZoneEgressOverviews(e){return this.client.get("zoneegressoverviews",{params:e})}getZoneEgressOverview({name:e},t){return this.client.get(`zoneegressoverviews/${e}`,{params:t})}getAllMeshes(e){return this.client.get("meshes",{params:e})}getMesh({name:e},t){return this.client.get(`meshes/${e}`,{params:t})}getAllMeshInsights(e){return this.client.get("mesh-insights",{params:e})}getMeshInsights({name:e},t){return this.client.get(`mesh-insights/${e}`,{params:t})}getAllDataplanes(e){return this.client.get("dataplanes",{params:e})}getDataplaneFromMesh({mesh:e,name:t},s){return this.client.get(`meshes/${e}/dataplanes/${t}`,{params:s})}getAllDataplaneOverviews(e){return this.client.get("dataplanes+insights",{params:e})}getAllDataplaneOverviewsFromMesh({mesh:e},t){return this.client.get(`meshes/${e}/dataplanes+insights`,{params:t})}getDataplaneOverviewFromMesh({mesh:e,name:t},s){return this.client.get(`meshes/${e}/dataplanes+insights/${t}`,{params:s})}getSidecarDataplanePolicies({mesh:e,name:t},s){return this.client.get(`meshes/${e}/dataplanes/${t}/policies`,{params:s})}getMeshGatewayDataplane({mesh:e,name:t},s){return this.client.get(`meshes/${e}/dataplanes/${t}/policies`,{params:s})}getDataplaneRules({mesh:e,name:t},s){return this.client.get(`meshes/${e}/dataplanes/${t}/rules`,{params:s})}getDataplaneData({mesh:e,dppName:t,dataPath:s},r){return this.client.get(`meshes/${e}/dataplanes/${t}/${s}`,{params:r})}getAllServiceInsights(e){return this.client.get("service-insights",{params:e})}getAllServiceInsightsFromMesh({mesh:e},t){return this.client.get(`meshes/${e}/service-insights`,{params:t})}getServiceInsight({mesh:e,name:t},s){return this.client.get(`meshes/${e}/service-insights/${t}`,{params:s})}getAllExternalServices(e){return this.client.get("external-services",{params:e})}getAllExternalServicesFromMesh({mesh:e},t){return this.client.get(`meshes/${e}/external-services`,{params:t})}getExternalService({mesh:e,name:t},s){return this.client.get(`meshes/${e}/external-services/${t}`,{params:s})}getPolicyConnections({mesh:e,policyType:t,policyName:s},r){return this.client.get(`meshes/${e}/${t}/${s}/dataplanes`,{params:r})}getAllPolicyEntities({path:e},t){return this.client.get(e,{params:t})}getAllPolicyEntitiesFromMesh({mesh:e,path:t},s){return this.client.get(`meshes/${e}/${t}`,{params:s})}getSinglePolicyEntity({mesh:e,path:t,name:s},r){return this.client.get(`meshes/${e}/${t}/${s}`,{params:r})}}const z=new O;export{$ as A,z as k};
