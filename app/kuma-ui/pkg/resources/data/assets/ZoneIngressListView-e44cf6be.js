import{d as E,u as S,r as n,v as x,a2 as A,R as Z,o as i,j as p,e as b,b as V,i as B,g as k,L as w,h as L,f as M}from"./index-0b474b9f.js";import{_ as O}from"./MultizoneInfo.vue_vue_type_script_setup_true_lang-fd038f88.js";import{_ as P}from"./ZoneIngressDetails.vue_vue_type_script_setup_true_lang-4f2acc99.js";import{D as R}from"./DataOverview-bc5edabb.js";import{u as q}from"./store-2a6e4467.js";import{u as C}from"./index-a5f95863.js";import{Q as f}from"./QueryParameter-70743f73.js";import"./kongponents.es-dca28cba.js";import"./AccordionList-05424288.js";import"./_plugin-vue_export-helper-c27b6911.js";import"./DefinitionListItem-27d09fac.js";import"./EnvoyData-d0eff873.js";import"./CodeBlock.vue_vue_type_style_index_0_lang-f1268e20.js";import"./StatusInfo.vue_vue_type_script_setup_true_lang-1f713e26.js";import"./EmptyBlock.vue_vue_type_script_setup_true_lang-0fb89700.js";import"./ErrorBlock-b6b5f4b2.js";import"./LoadingBlock.vue_vue_type_script_setup_true_lang-4f0d596b.js";import"./SubscriptionHeader.vue_vue_type_script_setup_true_lang-58a8d14c.js";import"./TabsWidget-da6e4bda.js";import"./TextWithCopyButton-5142404b.js";import"./TagList-6b264ec9.js";import"./StatusBadge-60a54dc7.js";const F={class:"zoneingresses"},Q={key:1,class:"kcard-stack"},U={class:"kcard-border"},$={key:0,class:"kcard-border"},fe=E({__name:"ZoneIngressListView",props:{selectedZoneIngressName:{type:[String,null],required:!1,default:null},offset:{type:Number,required:!1,default:0}},setup(z){const l=z,v=C(),N={title:"No Data",message:"There are no Zone Ingresses present."},g=S(),_=q(),u=n(!0),c=n(null),r=n({headers:[{label:"Status",key:"status"},{label:"Name",key:"entity"}],data:[]}),o=n(null),y=n(null),h=n(l.offset);x(()=>g.params.mesh,function(){g.name==="zone-ingress-list-view"&&m(0)}),A(function(){T(l.offset)});function T(e){_.getters["config/getMulticlusterStatus"]&&m(e)}async function m(e){var a;h.value=e,f.set("offset",e>0?e:null),u.value=!0,c.value=null;const t=w;try{const{items:s,next:d}=await v.getAllZoneIngressOverviews({size:t,offset:e});y.value=d,r.value.data=D(s??[]),await I({name:l.selectedZoneIngressName??((a=r.value.data[0])==null?void 0:a.entity.name)})}catch(s){r.value.data=[],o.value=null,s instanceof Error?c.value=s:console.error(s)}finally{u.value=!1}}function D(e){return e.map(t=>{const{name:a}=t,s={name:"zone-ingress-detail-view",params:{zoneIngress:a}},d=Z(t.zoneIngressInsight??{});return{entity:t,detailViewRoute:s,status:d}})}async function I({name:e}){if(e===void 0){o.value=null,f.set("zoneIngress",null);return}try{o.value=await v.getZoneIngressOverview({name:e}),f.set("zoneIngress",e)}catch(t){console.error(t)}}return(e,t)=>{var a;return i(),p("div",F,[b(_).getters["config/getMulticlusterStatus"]===!1?(i(),V(O,{key:0})):(i(),p("div",Q,[B("div",U,[k(R,{"selected-entity-name":(a=o.value)==null?void 0:a.name,"page-size":b(w),"is-loading":u.value,error:c.value,"empty-state":N,"table-data":r.value,"table-data-is-empty":r.value.data.length===0,next:y.value,"page-offset":h.value,onTableAction:I,onLoadData:m},null,8,["selected-entity-name","page-size","is-loading","error","table-data","table-data-is-empty","next","page-offset"])]),L(),o.value!==null?(i(),p("div",$,[k(P,{"zone-ingress-overview":o.value},null,8,["zone-ingress-overview"])])):M("",!0)]))])}}});export{fe as default};
