import{d as k,r as o,p as V,o as X,w as a,b as n,e as p,m as A,a3 as T,l as B}from"./index-B6dw6ELq.js";const E={ref:"$el"},N=k({__name:"ConnectionsStatsView",props:{networking:{},routeName:{}},setup(d){const r=d;return(i,s)=>{const c=o("RouteTitle"),l=o("XAction"),m=o("XCodeBlock"),g=o("XWindow"),_=o("DataLoader"),u=o("XCard"),f=o("AppView"),h=o("RouteView");return X(),V(h,{name:r.routeName,params:{mesh:"",proxy:"",proxyType:"",codeSearch:"",codeFilter:!1,codeRegExp:!1}},{default:a(({route:e,t:x,uri:C})=>[n(c,{render:!1,title:x("data-planes.routes.item.navigation.data-plane-stats-view")},null,8,["title"]),s[1]||(s[1]=p()),n(f,null,{default:a(()=>[n(u,null,{default:a(()=>[n(_,{src:C(A(T),"/connections/stats/for/:proxyType/:name/:mesh/:socketAddress",{proxyType:{ingresses:"zone-ingress",egresses:"zone-egress"}[e.params.proxyType]??"dataplane",name:e.params.proxy,mesh:e.params.mesh||"*",socketAddress:r.networking.inboundAddress})},{default:a(({data:y,refresh:w})=>[n(g,{resize:!0},{default:a(({resize:R})=>[B("div",E,[n(m,{"max-height":`${(R?.target?.innerHeight??0)-(i.$el?.getBoundingClientRect().top+200)}`,language:"json",code:y.raw,"is-searchable":"",query:e.params.codeSearch,"is-filter-mode":e.params.codeFilter,"is-reg-exp-mode":e.params.codeRegExp,onQueryChange:t=>e.update({codeSearch:t}),onFilterModeChange:t=>e.update({codeFilter:t}),onRegExpModeChange:t=>e.update({codeRegExp:t})},{"primary-actions":a(()=>[n(l,{action:"refresh",appearance:"primary",onClick:w},{default:a(()=>[...s[0]||(s[0]=[p(`
                    Refresh
                  `,-1)])]),_:1},8,["onClick"])]),_:2},1032,["max-height","code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])],512)]),_:2},1024)]),_:2},1032,["src"])]),_:2},1024)]),_:2},1024)]),_:1},8,["name"])}}});export{N as default};
