import{d as h,u as P,a as z,c as v,b as e,o,e as l,f as y,w as _,g as f,h as n,i as s,j as d,t as A,r as $,k as K,l as W,n as j,p as B,m as O,P as F,F as E,q as V,s as D,C as R,v as T,x as H,T as X}from"./index-47d6e59e.js";import{i as q,d as N,j as G,$ as C,R as Y,F as J,X as Z}from"./kongponents.es-276be423.js";import{u as k}from"./store-776eaf7b.js";import{u as ee,a as S}from"./index-24c07176.js";import{_ as U}from"./_plugin-vue_export-helper-c27b6911.js";import{A as te,a as se}from"./AccordionList-8280ebc0.js";import{u as oe,a as ne}from"./index-8264831d.js";import"./datadogLogEvents-302eea7b.js";import"./DoughnutChart-0db63a2d.js";const ae=h({__name:"AppBreadcrumbs",setup(r){const t=P(),a=z(),c=k(),m=v(()=>t.matched.filter(i=>i.meta.isBreadcrumb===!0).map(i=>{try{const p=a.resolve(i);if(typeof p.path=="string"&&p.path!==""){const b={path:p.path};return{matchedRoute:i,to:b}}else return null}catch{return null}}).filter(u).map(({matchedRoute:i,to:p})=>{const b=M(i,t);return{to:p,title:b,text:b}}));function u(i){return i!==null}function M(i,p){return typeof i.meta.getBreadcrumbTitle=="function"?i.meta.getBreadcrumbTitle(p,c):i.meta.breadcrumbTitleParam&&p.params[i.meta.breadcrumbTitleParam]?p.params[i.meta.breadcrumbTitleParam]:i.meta.title}return(i,p)=>e(m).length>0?(o(),l(e(q),{key:0,items:e(m)},null,8,["items"])):y("",!0)}}),ie=s("p",null,"Unable to reach the API",-1),ce={key:0},re=h({__name:"AppErrorMessage",setup(r){const t=ee();return(a,c)=>(o(),l(e(G),{class:"global-api-status empty-state--wide-content empty-state--compact","cta-is-hidden":""},{title:_(()=>[f(e(N),{class:"mb-3",icon:"warning",color:"var(--black-500)","secondary-color":"var(--yellow-300)",size:"64"}),n(),ie]),message:_(()=>[s("p",null,[n(`
        Please double check to make sure it is up and running `),e(t).baseUrl?(o(),d("span",ce,[n(", and it is reachable at "),s("code",null,A(e(t).baseUrl),1)])):y("",!0)])]),_:1}))}}),le=""+new URL("kuma-loader-v1-2aaed7d4.gif",import.meta.url).href,_e=r=>(B("data-v-06e19708"),r=r(),O(),r),de={class:"full-screen"},ue={class:"loading-container"},pe=_e(()=>s("img",{src:le},null,-1)),me={class:"progress"},fe=h({__name:"AppLoadingBar",setup(r){let t;const a=$(10);return K(function(){t=window.setInterval(()=>{a.value>=100&&(window.clearInterval(t),a.value=100),a.value=Math.min(a.value+Math.ceil(Math.random()*30),100)},150)}),W(function(){window.clearInterval(t)}),(c,m)=>(o(),d("div",de,[s("div",ue,[pe,n(),s("div",me,[s("div",{style:j({width:`${a.value}%`}),class:"progress-bar",role:"progressbar","data-testid":"app-progress-bar"},null,4)])])]))}});const he=U(fe,[["__scopeId","data-v-06e19708"]]),ge={key:0,class:"onboarding-check"},ye={class:"alert-content"},ve=h({__name:"AppOnboardingNotification",setup(r){const t=$(!1);function a(){t.value=!0}return(c,m)=>t.value===!1?(o(),d("div",ge,[f(e(Y),{appearance:"success",class:"dismissible","dismiss-type":"icon",onClosed:a},{alertMessage:_(()=>[s("div",ye,[s("div",null,[s("strong",null,"Welcome to "+A(e(F))+"!",1),n(` We've detected that you don't have any data plane proxies running yet. We've created an onboarding process to help you!
          `)]),n(),s("div",null,[f(e(C),{appearance:"primary",size:"small",class:"action-button",to:{name:"onboarding-welcome"}},{default:_(()=>[n(`
              Get started
            `)]),_:1})])])]),_:1})])):y("",!0)}});const be=U(ve,[["__scopeId","data-v-34df3ed0"]]),Ae={class:"py-4"},Me=s("p",{class:"mb-4"},`
      A traffic log policy lets you collect access logs for every data plane proxy in your service mesh.
    `,-1),$e={class:"list-disc pl-4"},ke=["href"],Se=h({__name:"LoggingNotification",setup(r){const t=S();return(a,c)=>(o(),d("div",Ae,[Me,n(),s("ul",$e,[s("li",null,[s("a",{href:`${e(t)("KUMA_DOCS_URL")}/policies/traffic-log/?${e(t)("KUMA_UTM_QUERY_PARAMS")}`,target:"_blank"},`
          Traffic Log policy documentation
        `,8,ke)])])]))}}),Ue={class:"py-4"},we=s("p",{class:"mb-4"},`
      A traffic metrics policy lets you collect key data for observability of your service mesh.
    `,-1),xe={class:"list-disc pl-4"},Te=["href"],Ne=h({__name:"MetricsNotification",setup(r){const t=S();return(a,c)=>(o(),d("div",Ue,[we,n(),s("ul",xe,[s("li",null,[s("a",{href:`${e(t)("KUMA_DOCS_URL")}/policies/traffic-metrics/?${e(t)("KUMA_UTM_QUERY_PARAMS")}`,target:"_blank"},`
          Traffic Metrics policy documentation
        `,8,Te)])])]))}}),Ce={class:"py-4"},Le=s("p",{class:"mb-4"},`
      Mutual TLS (mTLS) for communication between all the components
      of your service mesh (services, control plane, data plane proxies), proxy authentication,
      and access control rules in Traffic Permissions policies all contribute to securing your mesh.
    `,-1),Ie={class:"list-disc pl-4"},Re=["href"],Pe=["href"],Ke=["href"],Be=h({__name:"MtlsNotification",setup(r){const t=S();return(a,c)=>(o(),d("div",Ce,[Le,n(),s("ul",Ie,[s("li",null,[s("a",{href:`${e(t)("KUMA_DOCS_URL")}/security/certificates/?${e(t)("KUMA_UTM_QUERY_PARAMS")}`,target:"_blank"},`
          Secure access across services
        `,8,Re)]),n(),s("li",null,[s("a",{href:`${e(t)("KUMA_DOCS_URL")}/policies/mutual-tls/?${e(t)("KUMA_UTM_QUERY_PARAMS")}`,target:"_blank"},`
          Mutual TLS
        `,8,Pe)]),n(),s("li",null,[s("a",{href:`${e(t)("KUMA_DOCS_URL")}/policies/traffic-permissions/?${e(t)("KUMA_UTM_QUERY_PARAMS")}`,target:"_blank"},`
          Traffic Permissions policy documentation
        `,8,Ke)])])]))}}),Oe={class:"py-4"},Ee=s("p",{class:"mb-4"},`
      A traffic trace policy lets you enable tracing logs and a third-party tracing solution to send them to.
    `,-1),De={class:"list-disc pl-4"},Ye=["href"],Qe=h({__name:"TracingNotification",setup(r){const t=S();return(a,c)=>(o(),d("div",Oe,[Ee,n(),s("ul",De,[s("li",null,[s("a",{href:`${e(t)("KUMA_DOCS_URL")}/policies/traffic-trace/?${e(t)("KUMA_UTM_QUERY_PARAMS")}`,target:"_blank"},`
          Traffic Trace policy documentation
        `,8,Ye)])])]))}}),ze={class:"flex items-center"},We=h({__name:"SingleMeshNotifications",setup(r){const t=k(),a={LoggingNotification:Se,MetricsNotification:Ne,MtlsNotification:Be,TracingNotification:Qe};return(c,m)=>(o(),l(se,{"multiple-open":""},{default:_(()=>[(o(!0),d(E,null,V(e(t).getters["notifications/singleMeshNotificationItems"],u=>(o(),l(te,{key:u.name},{"accordion-header":_(()=>[s("div",ze,[u.isCompleted?(o(),l(e(N),{key:0,color:"var(--green-500)",icon:"check",size:"20",class:"mr-4"})):(o(),l(e(N),{key:1,icon:"warning",color:"var(--black-500)","secondary-color":"var(--yellow-300)",size:"20",class:"mr-4"})),n(),s("strong",null,A(u.name),1)])]),"accordion-content":_(()=>[u.component?(o(),l(D(a[u.component]),{key:0})):(o(),l(e(J),{key:1},{body:_(()=>[n(A(u.content),1)]),_:2},1024))]),_:2},1024))),128))]),_:1}))}}),je=r=>(B("data-v-ce28c0f7"),r=r(),O(),r),Fe={class:"mr-4"},Ve=je(()=>s("span",{class:"mr-2"},[s("strong",null,"Pro tip:"),n(`

            You might want to adjust your mesh configuration
          `)],-1)),He={key:0},Xe={class:"text-xl tracking-wide"},qe={key:1},Ge={class:"text-xl tracking-wide"},Je=h({__name:"NotificationManager",setup(r){const t=k(),a=$(!0),c=v(()=>t.state.selectedMesh?t.getters["notifications/meshNotificationItemMapWithAction"][t.state.selectedMesh]:!1);K(function(){const i=R.get("hideCheckMeshAlert");a.value=i!=="yes"});function m(){a.value=!1,R.set("hideCheckMeshAlert","yes")}function u(){t.dispatch("notifications/openModal")}function M(){t.dispatch("notifications/closeModal")}return(i,p)=>(o(),d("div",null,[a.value?(o(),l(e(Y),{key:0,class:"mb-4",appearance:"info","dismiss-type":"icon","data-testid":"notification-info",onClosed:m},{alertMessage:_(()=>[s("div",Fe,[Ve,n(),f(e(C),{appearance:"outline","data-testid":"open-modal-button",onClick:u},{default:_(()=>[n(`
            Check your mesh!
          `)]),_:1})])]),_:1})):y("",!0),n(),f(e(Z),{class:"modal","is-visible":e(t).state.notifications.isOpen,title:"Notifications","text-align":"left","data-testid":"notification-modal"},{"header-content":_(()=>[s("div",null,[s("div",null,[e(c)?(o(),d("span",He,[n(`
              Some of these features are not enabled for `),s("span",Xe,'"'+A(e(t).state.selectedMesh)+'"',1),n(` mesh. Consider implementing them.
            `)])):(o(),d("span",qe,[n(`
              Looks like `),s("span",Ge,'"'+A(e(t).state.selectedMesh)+'"',1),n(` isn't missing any features. Well done!
            `)]))])])]),"body-content":_(()=>[f(We)]),"footer-content":_(()=>[f(e(C),{appearance:"outline","data-testid":"close-modal-button",onClick:M},{default:_(()=>[n(`
          Close
        `)]),_:1})]),_:1},8,["is-visible"])]))}});const Ze=U(Je,[["__scopeId","data-v-ce28c0f7"]]),et={key:0},tt={key:1,class:"app-content-container"},st={class:"app-main-content"},ot=h({__name:"App",setup(r){const[t,a]=[oe(),ne()],c=k(),m=P(),u=$(c.state.globalLoading),M=v(()=>m.path),i=v(()=>c.getters.shouldShowAppError),p=v(()=>c.getters.shouldShowNotificationManager),b=v(()=>c.getters.shouldShowOnboardingNotification),L=v(()=>c.getters.shouldShowBreadcrumbs);T(()=>c.state.globalLoading,function(g){u.value=g}),T(()=>m.meta.title,function(g){w(g)}),T(()=>c.state.pageTitle,function(g){w(g)});function w(g){const x="Kuma Manager";document.title=g?`${g} | ${x}`:x}return(g,x)=>{const I=H("router-view");return u.value?(o(),l(he,{key:0})):(o(),d(E,{key:1},[f(e(a)),n(),e(m).meta.onboardingProcess?(o(),d("div",et,[f(I)])):(o(),d("div",tt,[f(e(t)),n(),s("main",st,[e(i)?(o(),l(re,{key:0,"data-testid":"app-error"})):y("",!0),n(),e(p)?(o(),l(Ze,{key:1})):y("",!0),n(),e(b)?(o(),l(be,{key:2})):y("",!0),n(),e(L)?(o(),l(ae,{key:3})):y("",!0),n(),(o(),l(I,{key:e(M)},{default:_(({Component:Q})=>[f(X,{mode:"out-in",name:"fade"},{default:_(()=>[(o(),d("div",{key:e(m).name,class:"transition-root"},[(o(),l(D(Q)))]))]),_:2},1024)]),_:1}))])]))],64))}}});const pt=U(ot,[["__scopeId","data-v-61c07cea"]]);export{pt as default};
