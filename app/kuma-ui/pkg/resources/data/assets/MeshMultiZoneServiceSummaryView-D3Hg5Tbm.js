import{d as M,r as n,o as l,p,w as t,b as a,l as m,e as r,Q as h,c as v,J as C,K as y,t as u,q as z}from"./index-gI7YoWPY.js";import{_ as K}from"./ResourceCodeBlock.vue_vue_type_script_setup_true_lang-CfFLyldn.js";const T={class:"stack"},$={class:"stack-with-borders"},A={class:"mt-4"},q=M({__name:"MeshMultiZoneServiceSummaryView",props:{items:{}},setup(x){const w=x;return(N,o)=>{const S=n("RouteTitle"),R=n("XAction"),V=n("KumaPort"),_=n("KTruncate"),k=n("XBadge"),E=n("DataSource"),b=n("AppView"),B=n("DataCollection"),D=n("RouteView");return l(),p(D,{name:"mesh-multi-zone-service-summary-view",params:{mesh:"",service:"",codeSearch:"",codeFilter:!1,codeRegExp:!1}},{default:t(({route:s,t:g})=>[a(B,{items:w.items,predicate:i=>i.id===s.params.service},{item:t(({item:i})=>[a(b,null,{title:t(()=>[m("h2",null,[a(R,{to:{name:"mesh-multi-zone-service-detail-view",params:{mesh:s.params.mesh,service:s.params.service}}},{default:t(()=>[a(S,{title:g("services.routes.item.title",{name:i.name})},null,8,["title"])]),_:2},1032,["to"])])]),default:t(()=>[o[7]||(o[7]=r()),m("div",T,[m("div",$,[a(h,{layout:"horizontal"},{title:t(()=>o[0]||(o[0]=[r(`
                  Ports
                `)])),body:t(()=>[a(_,null,{default:t(()=>[(l(!0),v(C,null,y(i.spec.ports,e=>(l(),p(V,{key:e.port,port:{...e,targetPort:void 0}},null,8,["port"]))),128))]),_:2},1024)]),_:2},1024),o[4]||(o[4]=r()),a(h,{layout:"horizontal"},{title:t(()=>o[2]||(o[2]=[r(`
                  Selector
                `)])),body:t(()=>[a(_,null,{default:t(()=>[(l(!0),v(C,null,y(i.spec.selector.meshService.matchLabels,(e,c)=>(l(),p(k,{key:`${c}:${e}`,appearance:"info"},{default:t(()=>[r(u(c)+":"+u(e),1)]),_:2},1024))),128))]),_:2},1024)]),_:2},1024)]),o[6]||(o[6]=r()),m("div",null,[m("h3",null,u(g("services.routes.item.config")),1),o[5]||(o[5]=r()),m("div",A,[a(K,{resource:i.config,"is-searchable":"",query:s.params.codeSearch,"is-filter-mode":s.params.codeFilter,"is-reg-exp-mode":s.params.codeRegExp,onQueryChange:e=>s.update({codeSearch:e}),onFilterModeChange:e=>s.update({codeFilter:e}),onRegExpModeChange:e=>s.update({codeRegExp:e})},{default:t(({copy:e,copying:c})=>[c?(l(),p(E,{key:0,src:`/meshes/${s.params.mesh}/mesh-multi-zone-service/${s.params.service}/as/kubernetes?no-store`,onChange:d=>{e(f=>f(d))},onError:d=>{e((f,F)=>F(d))}},null,8,["src","onChange","onError"])):z("",!0)]),_:2},1032,["resource","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])])])])]),_:2},1024)]),_:2},1032,["items","predicate"])]),_:1})}}});export{q as default};
