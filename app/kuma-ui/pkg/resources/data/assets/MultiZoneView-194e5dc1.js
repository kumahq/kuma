import{L as b}from"./LoadingBox-690f2df7.js";import{O as x,a as Z,b as z}from"./OnboardingPage-5a9ff339.js";import{u as I,a as T}from"./index-8249b827.js";import{d as k,r as l,l as A,o as a,b as O,w as r,g as _,h as e,i as n,e as w,j as c,f as N,p as V,m as L}from"./index-b62490ef.js";import{_ as M}from"./_plugin-vue_export-helper-c27b6911.js";import"./kongponents.es-7d82be84.js";import"./store-46e112fa.js";const U=i=>(V("data-v-387dca29"),i=i(),L(),i),C=U(()=>n("p",{class:"mb-4 text-center"},`
        A zone requires both the zone control plane and zone ingress. On Kubernetes, you run a single command to create both resources. On Universal, you must create them separately.
      `,-1)),S={class:"mb-4 text-center"},B=["href"],E={class:"status-box mt-4"},K={key:0,class:"status--is-connected","data-testid":"zone-connected"},R={key:1,class:"status--is-disconnected","data-testid":"zone-disconnected"},D={class:"status-box mt-4"},P={key:0,class:"status--is-connected","data-testid":"zone-ingress-connected"},G={key:1,class:"status--is-disconnected","data-testid":"zone-ingress-disconnected"},$={key:0,class:"status-loading-box mt-4"},y=1e3,j=k({__name:"MultiZoneView",setup(i){const m=I(),p=T(),s=l(!1),o=l(!1),u=l(null),d=l(null);A(function(){h(),g()}),v(),f();async function v(){try{const{total:t}=await m.getZones();s.value=t>0}catch(t){s.value=!1,console.error(t)}finally{s.value||(h(),u.value=window.setTimeout(v,y))}}async function f(){try{const{total:t}=await m.getAllZoneIngressOverviews();o.value=t>0}catch(t){o.value=!1,console.error(t)}finally{o.value||(g(),d.value=window.setTimeout(f,y))}}function h(){u.value!==null&&window.clearTimeout(u.value)}function g(){d.value!==null&&window.clearTimeout(d.value)}return(t,q)=>(a(),O(z,null,{header:r(()=>[_(x,null,{title:r(()=>[e(`
          Add zones
        `)]),_:1})]),content:r(()=>[C,e(),n("p",S,[n("b",null,[e("See "),n("a",{href:`${w(p)("KUMA_DOCS_URL")}/deployments/multi-zone/?${w(p)("KUMA_UTM_QUERY_PARAMS")}#zone-control-plane`,target:"_blank"},"the documentation for options to install",8,B),e(".")])]),e(),n("div",null,[n("p",E,[e(`
          Zone status:

          `),s.value?(a(),c("span",K,"Connected")):(a(),c("span",R,"Disconnected"))]),e(),n("p",D,[e(`
          Zone ingress status:

          `),o.value?(a(),c("span",P,"Connected")):(a(),c("span",G,"Disconnected"))]),e(),!o.value||!s.value?(a(),c("div",$,[_(b)])):N("",!0)])]),navigation:r(()=>[_(Z,{"next-step":"onboarding-create-mesh","previous-step":"onboarding-configuration-types","should-allow-next":s.value&&o.value},null,8,["should-allow-next"])]),_:1}))}});const ee=M(j,[["__scopeId","data-v-387dca29"]]);export{ee as default};
