import{k as w}from"./kumaApi-41fb4c57.js";import{u as b}from"./index-ad2ab4aa.js";import{L as x}from"./LoadingBox-9c14c0ec.js";import{O as Z,a as z,b as k}from"./OnboardingPage-c91d802d.js";import{d as I,r as l,l as O,a as T,w as r,o,e as _,f as e,g as n,u as y,h as c,b as A,p as N,j as V}from"./runtime-dom.esm-bundler-32659b48.js";import{_ as M}from"./_plugin-vue_export-helper-c27b6911.js";import"./production-58f5acfb.js";import"./kongponents.es-c2485d1e.js";import"./store-15db9444.js";const U=i=>(N("data-v-609d39c5"),i=i(),V(),i),C=U(()=>n("p",{class:"mb-4 text-center"},`
        A zone requires both the zone control plane and zone ingress. On Kubernetes, you run a single command to create both resources. On Universal, you must create them separately.
      `,-1)),L={class:"mb-4 text-center"},S=["href"],B={class:"status-box mt-4"},E={key:0,class:"status--is-connected","data-testid":"zone-connected"},R={key:1,class:"status--is-disconnected","data-testid":"zone-disconnected"},D={class:"status-box mt-4"},K={key:0,class:"status--is-connected","data-testid":"zone-ingress-connected"},P={key:1,class:"status--is-disconnected","data-testid":"zone-ingress-disconnected"},G={key:0,class:"status-loading-box mt-4"},$=I({__name:"MultiZoneView",setup(i){const m=b(),p=1e3,s=l(!1),a=l(!1),u=l(null),d=l(null);O(function(){v(),g()}),f(),h();async function f(){try{const{total:t}=await w.getZones();s.value=t>0}catch(t){console.error(t)}finally{s.value||(v(),u.value=window.setTimeout(f,p))}}async function h(){try{const{total:t}=await w.getAllZoneIngressOverviews();a.value=t>0}catch(t){console.error(t)}finally{a.value||(g(),d.value=window.setTimeout(h,p))}}function v(){u.value!==null&&window.clearTimeout(u.value)}function g(){d.value!==null&&window.clearTimeout(d.value)}return(t,j)=>(o(),T(Z,null,{header:r(()=>[_(z,null,{title:r(()=>[e(`
          Add zones
        `)]),_:1})]),content:r(()=>[C,e(),n("p",L,[n("b",null,[e("See "),n("a",{href:`${y(m)("KUMA_DOCS_URL")}/deployments/multi-zone/?${y(m)("KUMA_UTM_QUERY_PARAMS")}#zone-control-plane`,target:"_blank"},"the documentation for options to install",8,S),e(".")])]),e(),n("div",null,[n("p",B,[e(`
          Zone status:

          `),s.value?(o(),c("span",E,"Connected")):(o(),c("span",R,"Disconnected"))]),e(),n("p",D,[e(`
          Zone ingress status:

          `),a.value?(o(),c("span",K,"Connected")):(o(),c("span",P,"Disconnected"))]),e(),!a.value||!s.value?(o(),c("div",G,[_(x)])):A("",!0)])]),navigation:r(()=>[_(k,{"next-step":"onboarding-create-mesh","previous-step":"onboarding-configuration-types","should-allow-next":s.value&&a.value},null,8,["should-allow-next"])]),_:1}))}});const te=M($,[["__scopeId","data-v-609d39c5"]]);export{te as default};
