import{d as y,r as n,o as p,q as d,w as a,b as r,e as E,p as l,au as m,s as v}from"./index-DELdVnGm.js";import{_ as z}from"./ResourceCodeBlock.vue_vue_type_script_setup_true_lang-gSzYjsvJ.js";const M=y({__name:"ZoneIngressConfigView",setup(F){return(S,t)=>{const _=n("RouteTitle"),g=n("DataSource"),u=n("DataLoader"),f=n("XCard"),C=n("AppView"),x=n("RouteView");return p(),d(x,{name:"zone-ingress-config-view",params:{proxy:"",codeSearch:"",codeFilter:!1,codeRegExp:!1}},{default:a(({route:e,t:h,uri:c})=>[r(_,{render:!1,title:h("zone-ingresses.routes.item.navigation.zone-ingress-config-view")},null,8,["title"]),t[0]||(t[0]=E()),r(C,null,{default:a(()=>[r(f,null,{default:a(()=>[r(u,{src:c(l(m),"/zone-ingresses/:name",{name:e.params.proxy})},{default:a(({data:w})=>[r(z,{resource:w.config,"is-searchable":"",query:e.params.codeSearch,"is-filter-mode":e.params.codeFilter,"is-reg-exp-mode":e.params.codeRegExp,onQueryChange:o=>e.update({codeSearch:o}),onFilterModeChange:o=>e.update({codeFilter:o}),onRegExpModeChange:o=>e.update({codeRegExp:o})},{default:a(({copy:o,copying:R})=>[R?(p(),d(g,{key:0,src:c(l(m),"/zone-ingresses/:name/as/kubernetes",{name:e.params.proxy},{cacheControl:"no-store"}),onChange:s=>{o(i=>i(s))},onError:s=>{o((i,V)=>V(s))}},null,8,["src","onChange","onError"])):v("",!0)]),_:2},1032,["resource","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])]),_:2},1032,["src"])]),_:2},1024)]),_:2},1024)]),_:1})}}});export{M as default};
