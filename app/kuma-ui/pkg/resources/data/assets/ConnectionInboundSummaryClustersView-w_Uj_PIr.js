import{d as k,r as o,p as i,o as m,w as n,b as s,e as d,m as w,a3 as T,c as V,N as E,L as F}from"./index-DzjyxUQd.js";const D=k({__name:"ConnectionInboundSummaryClustersView",props:{routeName:{},data:{}},setup(l){const t=l;return(B,r)=>{const u=o("RouteTitle"),_=o("XAction"),y=o("XCodeBlock"),g=o("DataCollection"),C=o("DataLoader"),f=o("AppView"),x=o("RouteView");return m(),i(x,{params:{codeSearch:"",codeFilter:!1,codeRegExp:!1,proxyType:"",mesh:"",proxy:"",connection:""},name:t.routeName},{default:n(({route:e,uri:h})=>[s(u,{render:!1,title:"Clusters"}),r[1]||(r[1]=d()),s(f,null,{default:n(()=>[s(C,{src:h(w(T),"/connections/clusters/for/:proxyType/:name/:mesh",{proxyType:{ingresses:"zone-ingress",egresses:"zone-egress"}[e.params.proxyType]??"dataplane",name:e.params.proxy,mesh:e.params.mesh||"*"})},{default:n(({data:R,refresh:N})=>[(m(!0),V(E,null,F(["proxyResourcePortName"in t.data?t.data.proxyResourcePortName:("clusterName"in t.data?t.data.clusterName:e.params.connection).replace("_",":")],c=>(m(),i(g,{key:typeof c,items:R.split(`
`),predicate:p=>p.startsWith(`${c}`)},{default:n(({items:p})=>[s(y,{language:"json",code:p.map(a=>a.replace(`${c}::`,"")).join(`
`),"is-searchable":"",query:e.params.codeSearch,"is-filter-mode":e.params.codeFilter,"is-reg-exp-mode":e.params.codeRegExp,onQueryChange:a=>e.update({codeSearch:a}),onFilterModeChange:a=>e.update({codeFilter:a}),onRegExpModeChange:a=>e.update({codeRegExp:a})},{"primary-actions":n(()=>[s(_,{action:"refresh",appearance:"primary",onClick:N},{default:n(()=>[...r[0]||(r[0]=[d(`
                  Refresh
                `,-1)])]),_:1},8,["onClick"])]),_:2},1032,["code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])]),_:2},1032,["items","predicate"]))),128))]),_:2},1032,["src"])]),_:2},1024)]),_:1},8,["name"])}}});export{D as default};
