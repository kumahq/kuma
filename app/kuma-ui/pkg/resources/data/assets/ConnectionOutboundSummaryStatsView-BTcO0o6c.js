import{d as x,r as n,o as R,p as y,w as o,b as t,e as r,m as k,a0 as V}from"./index-Ds8TyCyC.js";const b=x({__name:"ConnectionOutboundSummaryStatsView",props:{dataplaneOverview:{}},setup(d){const p=d;return(v,s)=>{const i=n("RouteTitle"),m=n("XAction"),l=n("XCodeBlock"),u=n("DataCollection"),_=n("DataLoader"),f=n("AppView"),g=n("RouteView");return R(),y(g,{params:{codeSearch:"",codeFilter:!1,codeRegExp:!1,mesh:"",dataPlane:"",connection:""},name:"connection-outbound-summary-stats-view"},{default:o(({route:e,uri:C})=>[t(i,{render:!1,title:"Stats"}),s[1]||(s[1]=r()),t(f,null,{default:o(()=>[t(_,{src:C(k(V),"/meshes/:mesh/dataplanes/:name/stats/:address",{mesh:e.params.mesh,name:e.params.dataPlane,address:p.dataplaneOverview.dataplane.networking.inboundAddress})},{default:o(({data:h,refresh:w})=>[t(u,{items:h.raw.split(`
`),predicate:c=>c.includes(`.${e.params.connection}.`)},{default:o(({items:c})=>[t(l,{language:"json",code:c.map(a=>a.replace(`${e.params.connection}.`,"")).join(`
`),"is-searchable":"",query:e.params.codeSearch,"is-filter-mode":e.params.codeFilter,"is-reg-exp-mode":e.params.codeRegExp,onQueryChange:a=>e.update({codeSearch:a}),onFilterModeChange:a=>e.update({codeFilter:a}),onRegExpModeChange:a=>e.update({codeRegExp:a})},{"primary-actions":o(()=>[t(m,{action:"refresh",appearance:"primary",onClick:w},{default:o(()=>s[0]||(s[0]=[r(`
                Refresh
              `)])),_:2},1032,["onClick"])]),_:2},1032,["code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])]),_:2},1032,["items","predicate"])]),_:2},1032,["src"])]),_:2},1024)]),_:1})}}});export{b as default};
