import{A as $,a as x}from"./AccordionList-97bba305.js";import{d as S,h as R,r as v,o as e,l as c,p as o,n as t,F as g,I as b,H as r,j as _,w as l,m as B,i as f,a8 as C,D as I,G as A,t as K,E as V,x as j}from"./index-df368167.js";const k=w=>(I("data-v-c7f30269"),w=w(),A(),w),T={class:"policies-list"},F={class:"mesh-gateway-policy-list"},H=k(()=>o("h3",{class:"mb-2"},`
        Gateway policies
      `,-1)),O={key:0},M=k(()=>o("h3",{class:"mt-6 mb-2"},`
        Listeners
      `,-1)),q=k(()=>o("b",null,"Host",-1)),z=k(()=>o("h4",{class:"mt-2 mb-2"},`
                Routes
              `,-1)),J={class:"dataplane-policy-header"},Q=k(()=>o("b",null,"Route",-1)),U=k(()=>o("b",null,"Service",-1)),W={key:0,class:"badge-list"},X={class:"mt-1"},Y=S({__name:"GatewayDataplanePolicyList",props:{gatewayDataplane:{},policyTypesByName:{}},setup(w){const N=w,D=R(()=>G(N.gatewayDataplane)),P=R(()=>L(N.gatewayDataplane.policies));function G(d){const m=[],s=d.listeners??[];for(const u of s)for(const a of u.hosts)for(const i of a.routes){const n=[];for(const h of i.destinations){const p=L(h.policies),y={routeName:i.route,route:{name:"policy-detail-view",params:{mesh:d.gateway.mesh,policyPath:"meshgatewayroutes",policy:i.route}},service:h.tags["kuma.io/service"],policies:p};n.push(y)}m.push({protocol:u.protocol,port:u.port,hostName:a.hostName,routeEntries:n})}return m}function L(d){if(d===void 0)return[];const m=[];for(const s of Object.values(d)){const u=N.policyTypesByName[s.type];m.push({type:s.type,name:s.name,route:{name:"policy-detail-view",params:{mesh:s.mesh,policyPath:u.path,policy:s.name}}})}return m}return(d,m)=>{const s=v("router-link"),u=v("KBadge");return e(),c("div",T,[o("div",F,[H,t(),P.value.length>0?(e(),c("ul",O,[(e(!0),c(g,null,b(P.value,(a,i)=>(e(),c("li",{key:i},[o("span",null,r(a.type),1),t(`:

          `),_(s,{to:a.route},{default:l(()=>[t(r(a.name),1)]),_:2},1032,["to"])]))),128))])):B("",!0),t(),M,t(),o("div",null,[(e(!0),c(g,null,b(D.value,(a,i)=>(e(),c("div",{key:i},[o("div",null,[o("div",null,[q,t(": "+r(a.hostName)+":"+r(a.port)+" ("+r(a.protocol)+`)
            `,1)]),t(),a.routeEntries.length>0?(e(),c(g,{key:0},[z,t(),_(x,{"initially-open":[],"multiple-open":""},{default:l(()=>[(e(!0),c(g,null,b(a.routeEntries,(n,h)=>(e(),f($,{key:h},C({"accordion-header":l(()=>[o("div",J,[o("div",null,[o("div",null,[Q,t(": "),_(s,{to:n.route},{default:l(()=>[t(r(n.routeName),1)]),_:2},1032,["to"])]),t(),o("div",null,[U,t(": "+r(n.service),1)])]),t(),n.policies.length>0?(e(),c("div",W,[(e(!0),c(g,null,b(n.policies,(p,y)=>(e(),f(u,{key:`${i}-${y}`},{default:l(()=>[t(r(p.type),1)]),_:2},1024))),128))])):B("",!0)])]),_:2},[n.policies.length>0?{name:"accordion-content",fn:l(()=>[o("ul",X,[(e(!0),c(g,null,b(n.policies,(p,y)=>(e(),c("li",{key:`${i}-${y}`},[t(r(p.type)+`:

                        `,1),_(s,{to:p.route},{default:l(()=>[t(r(p.name),1)]),_:2},1032,["to"])]))),128))])]),key:"0"}:void 0]),1024))),128))]),_:2},1024)],64)):B("",!0)])]))),128))])])])}}});const Z=K(Y,[["__scopeId","data-v-c7f30269"]]),te=S({__name:"GatewayPoliciesView",setup(w){return(N,D)=>{const P=v("RouteTitle"),G=v("DataSource"),L=v("KCard"),d=v("AppView"),m=v("RouteView");return e(),f(m,{name:"gateway-policies-view",params:{mesh:"",dataPlane:""}},{default:l(({route:s,t:u})=>[_(d,null,{title:l(()=>[o("h2",null,[_(P,{title:u("gateways.routes.item.navigation.gateway-policies-view"),render:!0},null,8,["title"])])]),default:l(()=>[t(),_(L,null,{body:l(()=>[_(G,{src:"/*/policy-types"},{default:l(({data:a,error:i})=>[_(G,{src:`/meshes/${s.params.mesh}/gateways/${s.params.dataPlane}/policies`},{default:l(({data:n,error:h})=>[i?(e(),f(V,{key:0,error:i},null,8,["error"])):h?(e(),f(V,{key:1,error:h},null,8,["error"])):n===void 0||a===void 0?(e(),f(j,{key:2})):(e(),f(Z,{key:3,"policy-types-by-name":a.policies.reduce((p,y)=>Object.assign(p,{[y.name]:y}),{}),"gateway-dataplane":n},null,8,["policy-types-by-name","gateway-dataplane"]))]),_:2},1032,["src"])]),_:2},1024)]),_:2},1024)]),_:2},1024)]),_:1})}}});export{te as default};
