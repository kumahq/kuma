import{d as g,e as o,o as x,m as R,w as n,a as t,b as r,l as w,a3 as y}from"./index-C4IVBmnO.js";const E=g({__name:"ConnectionInboundSummaryClustersView",props:{data:{}},setup(d){const c=d;return(V,k)=>{const p=o("RouteTitle"),i=o("KButton"),l=o("XCodeBlock"),m=o("DataCollection"),u=o("DataLoader"),_=o("AppView"),h=o("RouteView");return x(),R(h,{params:{codeSearch:"",codeFilter:!1,codeRegExp:!1,mesh:"",dataPlane:"",connection:""},name:"connection-inbound-summary-clusters-view"},{default:n(({route:e})=>[t(p,{render:!1,title:"Clusters"}),r(),t(_,null,{default:n(()=>[t(u,{src:`/meshes/${e.params.mesh}/dataplanes/${e.params.dataPlane}/data-path/clusters`},{default:n(({data:C,refresh:f})=>[t(m,{items:C.split(`
`),predicate:s=>s.startsWith(`${c.data.service}::`)},{default:n(({items:s})=>[t(l,{language:"json",code:s.map(a=>a.replace(`${c.data.service}::`,"")).join(`
`),"is-searchable":"",query:e.params.codeSearch,"is-filter-mode":e.params.codeFilter,"is-reg-exp-mode":e.params.codeRegExp,onQueryChange:a=>e.update({codeSearch:a}),onFilterModeChange:a=>e.update({codeFilter:a}),onRegExpModeChange:a=>e.update({codeRegExp:a})},{"primary-actions":n(()=>[t(i,{appearance:"primary",onClick:f},{default:n(()=>[t(w(y)),r(`

                Refresh
              `)]),_:2},1032,["onClick"])]),_:2},1032,["code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])]),_:2},1032,["items","predicate"])]),_:2},1032,["src"])]),_:2},1024)]),_:1})}}});export{E as default};
