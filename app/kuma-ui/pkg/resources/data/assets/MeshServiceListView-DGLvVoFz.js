import{d as D,r as n,o as l,m,w as s,b as o,e as r,l as L,ay as B,A as N,a2 as S,t as c,c as v,L as g,M as T,E as X,p as q}from"./index-B3PYX6oN.js";import{S as E}from"./SummaryView-C0QSUB0v.js";const j=D({__name:"MeshServiceListView",setup(G){return(M,$)=>{const w=n("RouteTitle"),u=n("XAction"),f=n("KBadge"),y=n("KumaPort"),z=n("KTruncate"),C=n("XActionGroup"),k=n("RouterView"),b=n("DataCollection"),V=n("DataLoader"),x=n("KCard"),A=n("AppView"),K=n("RouteView");return l(),m(K,{name:"mesh-service-list-view",params:{page:1,size:50,mesh:"",service:""}},{default:s(({route:t,t:_,can:P,uri:R,me:i})=>[o(w,{render:!1,title:_("services.routes.mesh-service-list-view.title")},null,8,["title"]),r(),o(A,{docs:_("services.mesh-service.href.docs")},{default:s(()=>[o(x,null,{default:s(()=>[o(V,{src:R(L(B),"/meshes/:mesh/mesh-services",{mesh:t.params.mesh},{page:t.params.page,size:t.params.size})},{loadable:s(({data:a})=>[o(b,{type:"services",items:(a==null?void 0:a.items)??[void 0],page:t.params.page,"page-size":t.params.size,total:a==null?void 0:a.total,onChange:t.update},{default:s(()=>[o(N,{"data-testid":"service-collection",headers:[{...i.get("headers.name"),label:"Name",key:"name"},{...i.get("headers.namespace"),label:"Namespace",key:"namespace"},...P("use zones")?[{...i.get("headers.zone"),label:"Zone",key:"zone"}]:[],{...i.get("headers.state"),label:"State",key:"state"},{...i.get("headers.status"),label:"DP proxies (connected / healthy / total)",key:"status"},{...i.get("headers.ports"),label:"Ports",key:"ports"},{...i.get("headers.actions"),label:"Actions",key:"actions",hideLabel:!0}],items:a==null?void 0:a.items,"is-selected-row":e=>e.name===t.params.service,onResize:i.set},{name:s(({row:e})=>[o(S,{text:e.name},{default:s(()=>[o(u,{"data-action":"",to:{name:"mesh-service-summary-view",params:{mesh:e.mesh,service:e.id},query:{page:t.params.page,size:t.params.size}}},{default:s(()=>[r(c(e.name),1)]),_:2},1032,["to"])]),_:2},1032,["text"])]),namespace:s(({row:e})=>[r(c(e.namespace),1)]),zone:s(({row:e})=>[e.zone?(l(),m(u,{key:0,to:{name:"zone-cp-detail-view",params:{zone:e.zone}}},{default:s(()=>[r(c(e.zone),1)]),_:2},1032,["to"])):(l(),v(g,{key:1},[r(c(_("common.detail.none")),1)],64))]),state:s(({row:e})=>[o(f,{appearance:e.spec.state==="Available"?"success":"danger"},{default:s(()=>[r(c(e.spec.state),1)]),_:2},1032,["appearance"])]),status:s(({row:e})=>{var p,h,d;return[r(c((p=e.status.dataplaneProxies)==null?void 0:p.connected)+" / "+c((h=e.status.dataplaneProxies)==null?void 0:h.healthy)+" / "+c((d=e.status.dataplaneProxies)==null?void 0:d.total),1)]}),ports:s(({row:e})=>[o(z,null,{default:s(()=>[(l(!0),v(g,null,T(e.spec.ports,p=>(l(),m(y,{key:p.port,port:{...p,targetPort:void 0}},null,8,["port"]))),128))]),_:2},1024)]),actions:s(({row:e})=>[o(C,null,{default:s(()=>[o(u,{to:{name:"mesh-service-detail-view",params:{mesh:e.mesh,service:e.id}}},{default:s(()=>[r(c(_("common.collection.actions.view")),1)]),_:2},1032,["to"])]),_:2},1024)]),_:2},1032,["headers","items","is-selected-row","onResize"]),r(),a!=null&&a.items&&t.params.service?(l(),m(k,{key:0},{default:s(e=>[o(E,{onClose:p=>t.replace({name:"mesh-service-list-view",params:{mesh:t.params.mesh},query:{page:t.params.page,size:t.params.size}})},{default:s(()=>[(l(),m(X(e.Component),{items:a==null?void 0:a.items},null,8,["items"]))]),_:2},1032,["onClose"])]),_:2},1024)):q("",!0)]),_:2},1032,["items","page","page-size","total","onChange"])]),_:2},1032,["src"])]),_:2},1024)]),_:2},1032,["docs"])]),_:1})}}});export{j as default};
