import{d as R,r as o,p as m,o as a,w as t,b as i,e as s,K as S,c as u,N as y,L as w,t as p,q as b,l as T,y as X,_ as D}from"./index-DYbR5Se5.js";import{S as A}from"./SummaryView-DDM3hZF4.js";const B=R({__name:"DataPlaneSubscriptionsSummaryView",props:{subscriptions:{}},setup(v){const _=v;return(N,c)=>{const h=o("RouteTitle"),f=o("XI18n"),k=o("XIcon"),V=o("XAction"),I=o("XLayout"),g=o("AppView"),x=o("RouterView"),C=o("RouteView");return a(),m(C,{name:"data-plane-subscriptions-summary-view",params:{inactive:Boolean,mesh:"",proxy:"",subscription:""}},{default:t(({route:l,t:n,me:r})=>[i(g,null,{title:t(()=>[T("h2",null,[i(h,{title:n("data-planes.routes.item.subscriptions.title")},null,8,["title"])])]),default:t(()=>[c[6]||(c[6]=s()),i(I,{"data-testid":"dataplane-subscriptions"},{default:t(()=>[i(f,{path:"data-planes.routes.item.subscriptions.description"}),c[5]||(c[5]=s()),i(S,{headers:[{...r.get("headers.connection"),label:"Â ",key:"connection"},{...r.get("headers.instanceId"),label:n("http.api.property.instanceId"),key:"instanceId"},{...r.get("headers.version"),label:n("http.api.property.version"),key:"version"},{...r.get("headers.connected"),label:n("http.api.property.connected"),key:"connected"},{...r.get("headers.disconnected"),label:n("http.api.property.disconnected"),key:"disconnected"},{...r.get("headers.responses"),label:n("http.api.property.responses"),key:"responses"}],"is-selected-row":e=>e.id===l.params.subscription,items:[..._.subscriptions].reverse(),onResize:r.set},{connection:t(({row:e})=>[(a(!0),u(y,null,w([e.connectTime&&!e.disconnectTime?"healthy":"unhealthy"],d=>(a(),m(k,{key:`${d}`,name:d},{default:t(()=>[s(p(n(`common.connection.${d}`)),1)]),_:2},1032,["name"]))),128))]),instanceId:t(({row:e})=>[i(V,{"data-action":"",to:{name:"data-plane-subscription-summary-view",params:{subscription:e.id}}},{default:t(()=>[s(p(e.controlPlaneInstanceId),1)]),_:2},1032,["to"])]),version:t(({row:e})=>[s(p(e.version?.kumaDp?.version??"-"),1)]),connected:t(({row:e})=>[s(p(n("common.formats.datetime",{value:Date.parse(e.connectTime??"")})),1)]),disconnected:t(({row:e})=>[e.disconnectTime?(a(),u(y,{key:0},[s(p(n("common.formats.datetime",{value:Date.parse(e.disconnectTime)})),1)],64)):b("",!0)]),responses:t(({row:e})=>[(a(!0),u(y,null,w([e.status?.total??{}],d=>(a(),u(y,null,[s(p(d.responsesSent)+"/"+p(d.responsesAcknowledged),1)],64))),256))]),_:2},1032,["headers","is-selected-row","items","onResize"])]),_:2},1024)]),_:2},1024),c[7]||(c[7]=s()),i(x,null,{default:t(e=>[e.route.name!==l.name?(a(),m(A,{key:0,width:"670px",onClose:function(){l.replace({name:"data-plane-subscriptions-summary-view",params:{mesh:l.params.mesh,proxy:l.params.proxy},query:{inactive:l.params.inactive?null:void 0}})}},{default:t(()=>[(a(),m(X(e.Component),{data:_.subscriptions},null,8,["data"]))]),_:2},1032,["onClose"])):b("",!0)]),_:2},1024)]),_:1})}}}),q=D(B,[["__scopeId","data-v-afd84a57"]]);export{q as default};
