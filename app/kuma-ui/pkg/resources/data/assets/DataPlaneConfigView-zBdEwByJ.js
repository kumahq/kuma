import{d as y,r as o,o as p,m as d,w as n,b as s,e as E,p as l,O as i,q as v}from"./index-DIs9RbIP.js";import{_ as D}from"./ResourceCodeBlock.vue_vue_type_script_setup_true_lang-bvP0TiZ0.js";const b=y({__name:"DataPlaneConfigView",setup(F){return(S,t)=>{const _=o("RouteTitle"),u=o("DataSource"),h=o("DataLoader"),f=o("XCard"),g=o("AppView"),C=o("RouteView");return p(),d(C,{name:"data-plane-config-view",params:{mesh:"",proxy:"",codeSearch:"",codeFilter:!1,codeRegExp:!1}},{default:n(({route:e,t:x,uri:c})=>[s(_,{render:!1,title:x("data-planes.routes.item.navigation.data-plane-config-view")},null,8,["title"]),t[0]||(t[0]=E()),s(g,null,{default:n(()=>[s(f,null,{default:n(()=>[s(h,{src:c(l(i),"/meshes/:mesh/dataplanes/:name",{mesh:e.params.mesh,name:e.params.proxy})},{default:n(({data:w})=>[s(D,{resource:w.config,"is-searchable":"",query:e.params.codeSearch,"is-filter-mode":e.params.codeFilter,"is-reg-exp-mode":e.params.codeRegExp,onQueryChange:a=>e.update({codeSearch:a}),onFilterModeChange:a=>e.update({codeFilter:a}),onRegExpModeChange:a=>e.update({codeRegExp:a})},{default:n(({copy:a,copying:R})=>[R?(p(),d(u,{key:0,src:c(l(i),"/meshes/:mesh/dataplanes/:name/as/kubernetes",{mesh:e.params.mesh,name:e.params.proxy},{cacheControl:"no-store"}),onChange:r=>{a(m=>m(r))},onError:r=>{a((m,V)=>V(r))}},null,8,["src","onChange","onError"])):v("",!0)]),_:2},1032,["resource","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])]),_:2},1032,["src"])]),_:2},1024)]),_:2},1024)]),_:1})}}});export{b as default};
