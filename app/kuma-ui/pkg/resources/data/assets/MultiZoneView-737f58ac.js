import{L as y}from"./LoadingBox-8e342684.js";import{O as x,a as Z,b as z}from"./OnboardingPage-46f5b350.js";import{d as I,R as k,L as T,t as d,S as O,o as a,g as V,w as i,h as c,i as w,C as A,l as e,m as n,j as l,k as N,A as L,_ as B,z as C,B as S,q as M}from"./index-cf0727dc.js";const q=u=>(C("data-v-5d5ad5e8"),u=u(),S(),u),D=q(()=>n("p",{class:"mb-4 text-center"},`
            A zone requires both the zone control plane and zone ingress. On Kubernetes, you run a single command to create both resources. On Universal, you must create them separately.
          `,-1)),E={class:"mb-4 text-center"},G=["href"],K={class:"status-box mt-4"},P={key:0,class:"status--is-connected","data-testid":"zone-connected"},R={key:1,class:"status--is-disconnected","data-testid":"zone-disconnected"},U={class:"status-box mt-4"},$={key:0,class:"status--is-connected","data-testid":"zone-ingress-connected"},j={key:1,class:"status--is-disconnected","data-testid":"zone-ingress-disconnected"},H={key:0,class:"status-loading-box mt-4"},b=1e3,F=I({__name:"MultiZoneView",setup(u){const m=k(),{t:p}=T(),s=d(!1),o=d(!1),r=d(null),_=d(null);O(function(){h(),v()}),f(),g();async function f(){try{const{total:t}=await m.getZones();s.value=t>0}catch(t){s.value=!1,console.error(t)}finally{s.value||(h(),r.value=window.setTimeout(f,b))}}async function g(){try{const{total:t}=await m.getAllZoneIngressOverviews();o.value=t>0}catch(t){o.value=!1,console.error(t)}finally{o.value||(v(),_.value=window.setTimeout(g,b))}}function h(){r.value!==null&&window.clearTimeout(r.value)}function v(){_.value!==null&&window.clearTimeout(_.value)}return(t,J)=>(a(),V(B,null,{default:i(()=>[c(A,{title:w(p)("onboarding.routes.multizone.title")},null,8,["title"]),e(),c(L,null,{default:i(()=>[c(x,null,{header:i(()=>[c(Z,null,{title:i(()=>[e(`
              Add zones
            `)]),_:1})]),content:i(()=>[D,e(),n("p",E,[n("b",null,[e("See "),n("a",{href:w(p)("onboarding.href.docs.install"),target:"_blank"},"the documentation for options to install",8,G),e(".")])]),e(),n("div",null,[n("p",K,[e(`
              Zone status:

              `),s.value?(a(),l("span",P,"Connected")):(a(),l("span",R,"Disconnected"))]),e(),n("p",U,[e(`
              Zone ingress status:

              `),o.value?(a(),l("span",$,"Connected")):(a(),l("span",j,"Disconnected"))]),e(),!o.value||!s.value?(a(),l("div",H,[c(y)])):N("",!0)])]),navigation:i(()=>[c(z,{"next-step":"onboarding-create-mesh","previous-step":"onboarding-configuration-types","should-allow-next":s.value&&o.value},null,8,["should-allow-next"])]),_:1})]),_:1})]),_:1}))}});const Y=M(F,[["__scopeId","data-v-5d5ad5e8"]]);export{Y as default};
