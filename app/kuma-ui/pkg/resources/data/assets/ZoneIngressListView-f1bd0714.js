import{d as D,u as E,r as o,v as S,y as x,A as Z,j as f,b,e as B,i as V,g as k,h as L,f as M,B as w,o as i}from"./index-81bf8339.js";import{_ as O}from"./MultizoneInfo.vue_vue_type_script_setup_true_lang-e63c2b08.js";import{_ as P}from"./ZoneIngressDetails.vue_vue_type_script_setup_true_lang-3180ad2f.js";import{D as q}from"./DataOverview-7635ffd5.js";import{u as C}from"./store-299cf70b.js";import{u as F}from"./index-128caa8e.js";import{Q as p}from"./QueryParameter-70743f73.js";import"./kongponents.es-ae910f47.js";import"./AccordionList-914dea12.js";import"./_plugin-vue_export-helper-c27b6911.js";import"./EmptyBlock.vue_vue_type_script_setup_true_lang-656dad5a.js";import"./EnvoyData-4dc75d06.js";import"./CodeBlock.vue_vue_type_style_index_0_lang-3cff1a2a.js";import"./StatusInfo.vue_vue_type_script_setup_true_lang-e1f4a219.js";import"./ErrorBlock-a89934d5.js";import"./LoadingBlock.vue_vue_type_script_setup_true_lang-f8191c4b.js";import"./SubscriptionHeader.vue_vue_type_script_setup_true_lang-d483d2d5.js";import"./TabsWidget-ef133439.js";import"./datadogLogEvents-302eea7b.js";import"./TagList-fdc38e6f.js";import"./StatusBadge-fc248548.js";const Q={class:"zoneingresses"},R={key:1,class:"kcard-stack"},U={class:"kcard-border"},$={key:0,class:"kcard-border"},fe=D({__name:"ZoneIngressListView",props:{selectedZoneIngressName:{type:[String,null],required:!1,default:null},offset:{type:Number,required:!1,default:0}},setup(z){const l=z,v=F(),N={title:"No Data",message:"There are no Zone Ingresses present."},g=E(),_=C(),u=o(!0),c=o(null),r=o({headers:[{label:"Status",key:"status"},{label:"Name",key:"entity"}],data:[]}),n=o(null),y=o(null),h=o(l.offset);S(()=>g.params.mesh,function(){g.name==="zone-ingress-list-view"&&m(0)}),x(function(){T(l.offset)});function T(e){_.getters["config/getMulticlusterStatus"]&&m(e)}async function m(e){var a;h.value=e,p.set("offset",e>0?e:null),u.value=!0,c.value=null;const t=w;try{const{items:s,next:d}=await v.getAllZoneIngressOverviews({size:t,offset:e});y.value=d,r.value.data=A(s??[]),await I({name:l.selectedZoneIngressName??((a=r.value.data[0])==null?void 0:a.entity.name)})}catch(s){r.value.data=[],n.value=null,s instanceof Error?c.value=s:console.error(s)}finally{u.value=!1}}function A(e){return e.map(t=>{const{name:a}=t,s={name:"zone-ingress-detail-view",params:{zoneIngress:a}},d=Z(t.zoneIngressInsight??{});return{entity:t,detailViewRoute:s,status:d}})}async function I({name:e}){if(e===void 0){n.value=null,p.set("zoneIngress",null);return}try{n.value=await v.getZoneIngressOverview({name:e}),p.set("zoneIngress",e)}catch(t){console.error(t)}}return(e,t)=>{var a;return i(),f("div",Q,[b(_).getters["config/getMulticlusterStatus"]===!1?(i(),B(O,{key:0})):(i(),f("div",R,[V("div",U,[k(q,{"selected-entity-name":(a=n.value)==null?void 0:a.name,"page-size":b(w),"is-loading":u.value,error:c.value,"empty-state":N,"table-data":r.value,"table-data-is-empty":r.value.data.length===0,next:y.value,"page-offset":h.value,onTableAction:I,onLoadData:m},null,8,["selected-entity-name","page-size","is-loading","error","table-data","table-data-is-empty","next","page-offset"])]),L(),n.value!==null?(i(),f("div",$,[k(P,{"zone-ingress-overview":n.value},null,8,["zone-ingress-overview"])])):M("",!0)]))])}}});export{fe as default};
