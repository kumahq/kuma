import{d as P,o as n,c as F,f as T,a as q,b as A,k as m,x as B,F as L,l as I,m as V,i as $,r as d,n as O}from"./index-be86debd.js";import{S as z}from"./ServiceSummary-54ad8c51.js";import{D as j}from"./DataPlaneList-9f7db446.js";import{_ as R}from"./EmptyBlock.vue_vue_type_script_setup_true_lang-4e97ff2e.js";import{E as C}from"./ErrorBlock-abdcf004.js";import{_ as G}from"./LoadingBlock.vue_vue_type_script_setup_true_lang-f8a7cc1f.js";import{Q}from"./QueryParameter-70743f73.js";import"./StatusBadge-16d25a68.js";import"./TagList-b29c183b.js";import"./YamlView.vue_vue_type_script_setup_true_lang-e3e45e41.js";import"./CodeBlock.vue_vue_type_style_index_0_lang-0ecd0eb5.js";import"./toYaml-4e00099e.js";import"./ContentWrapper-8c185b74.js";import"./DataOverview-3a620f41.js";const W={class:"component-frame"},J=P({__name:"ServiceDetails",props:{service:{type:Object,required:!0},externalService:{type:Object,required:!1,default:null},dataPlaneOverviews:{type:Array,required:!1,default:null},dppFilterFields:{type:Object,required:!0},selectedDppName:{type:String,required:!1,default:null}},emits:["load-dataplane-overviews"],setup(f,{emit:g}){const a=f;function _(e,v){var o;(((o=a.service.serviceType)==null?void 0:o.startsWith("gateway"))??!1)||delete v.gateway,g("load-dataplane-overviews",e,v)}return(e,v)=>{var t;return n(),F(L,null,[T("div",W,[q(z,{service:a.service,"external-service":f.externalService},null,8,["service","external-service"])]),A(),a.dataPlaneOverviews!==null?(n(),m(j,{key:0,class:"mt-4","data-plane-overviews":a.dataPlaneOverviews,"dpp-filter-fields":a.dppFilterFields,"selected-dpp-name":a.selectedDppName,"is-gateway-view":((t=a.dataPlaneOverviews[0])==null?void 0:t.dataplane.networking.gateway)!==void 0,onLoadData:_},null,8,["data-plane-overviews","dpp-filter-fields","selected-dpp-name","is-gateway-view"])):B("",!0)],64)}}}),K={class:"service-details"},oe=P({__name:"ServiceDetailView",props:{selectedDppName:{type:String,required:!1,default:null}},setup(f){const g=f,a=I(),_={name:{description:"filter by name or parts of a name"},protocol:{description:"filter by “kuma.io/protocol” value"},tag:{description:"filter by tags (e.g. “tag: version:2”)"},zone:{description:"filter by “kuma.io/zone” value"}},e=V(),v=$(),t=d(null),o=d(null),y=d(null),h=d(!0),w=d(null);O(()=>e.params.mesh,function(){e.name==="service-detail-view"&&S(0)}),O(()=>e.params.name,function(){e.name==="service-detail-view"&&S(0)});function N(){v.dispatch("updatePageTitle",e.params.service);const r=Q.get("filterFields"),l=r!==null?JSON.parse(r):{};S(0,l)}N();async function S(r,l={}){h.value=!0,w.value=null,t.value=null,o.value=null,y.value=null;const c=e.params.mesh,p=e.params.service;try{t.value=await a.getServiceInsight({mesh:c,name:p}),t.value.serviceType==="external"?o.value=await a.getExternalServiceByServiceInsightName(c,p):await x(r,l)}catch(s){s instanceof Error?w.value=s:console.error(s)}finally{h.value=!1}}async function x(r,l){const c=e.params.mesh,p=e.params.service;try{const s=b(p,r,l),i=await a.getAllDataplaneOverviewsFromMesh({mesh:c},s);y.value=i.items??[]}catch{y.value=null}}function b(r,l,c){const s=`kuma.io/service:${r}`,i={...c,offset:l,size:50};if(i.tag){const D=Array.isArray(i.tag)?i.tag:[i.tag],k=[];for(const[u,E]of D.entries())E.startsWith("kuma.io/service:")&&k.push(u);for(let u=k.length-1;u===0;u--)D.splice(k[u],1);i.tag=D.concat(s)}else i.tag=s;return i}return(r,l)=>(n(),F("div",K,[h.value?(n(),m(G,{key:0})):w.value!==null?(n(),m(C,{key:1,error:w.value},null,8,["error"])):t.value===null?(n(),m(R,{key:2})):(n(),m(J,{key:3,service:t.value,"data-plane-overviews":y.value,"external-service":o.value,"dpp-filter-fields":_,"selected-dpp-name":g.selectedDppName,onLoadDataplaneOverviews:x},null,8,["service","data-plane-overviews","external-service","selected-dpp-name"]))]))}});export{oe as default};
