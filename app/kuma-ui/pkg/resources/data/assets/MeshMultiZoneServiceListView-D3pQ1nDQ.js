import{d as M,r as o,p as c,o as i,w as s,b as t,e as m,l as f,I as P,m as q,a1 as K,q as T,K as $,t as _,c as g,N as w,L as y,y as G,_ as I}from"./index-CIntnFRJ.js";import{S as Z}from"./SummaryView-BF7jbE4k.js";const E=M({__name:"MeshMultiZoneServiceListView",setup(F){return(j,n)=>{const z=o("RouteTitle"),C=o("XSearch"),h=o("XAction"),b=o("XCopyButton"),X=o("KumaPort"),u=o("XLayout"),V=o("XBadge"),k=o("XActionGroup"),L=o("RouterView"),S=o("DataCollection"),A=o("DataLoader"),B=o("XCard"),R=o("AppView"),x=o("RouteView");return i(),c(x,{name:"mesh-multi-zone-service-list-view",params:{page:1,size:Number,mesh:"",service:"",s:""}},{default:s(({can:N,route:e,t:d,uri:D,me:p})=>[t(z,{render:!1,title:d("services.routes.mesh-multi-zone-service-list-view.title")},null,8,["title"]),n[6]||(n[6]=m()),t(R,{docs:d("services.mesh-multi-zone-service.href.docs")},{default:s(()=>[t(B,null,{default:s(()=>[t(u,null,{default:s(()=>[f("search",null,[f("form",{onSubmit:n[0]||(n[0]=P(()=>{},["prevent"]))},[t(C,{class:"search-field",keys:["name","namespace",...N("use zones")?["zone"]:[],"label"],value:e.params.s,onChange:r=>e.update({s:r})},null,8,["keys","value","onChange"])],32)]),n[5]||(n[5]=m()),t(A,{src:D(q(K),"/meshes/:mesh/mesh-multi-zone-services",{mesh:e.params.mesh},{page:e.params.page,size:e.params.size,search:e.params.s}),variant:"list"},{default:s(({data:r})=>[t(S,{type:"services",items:r.items,page:e.params.page,"page-size":e.params.size,total:r.total,onChange:e.update},{default:s(()=>[t($,{headers:[{...p.get("headers.name"),label:"Name",key:"name"},{...p.get("headers.ports"),label:"Ports",key:"ports"},{...p.get("headers.labels"),label:"Selector",key:"labels"},{...p.get("headers.actions"),label:"Actions",key:"actions",hideLabel:!0}],items:r.items,"is-selected-row":a=>a.name===e.params.service,onResize:p.set},{name:s(({row:a})=>[t(b,{text:a.name},{default:s(()=>[t(h,{"data-action":"",to:{name:"mesh-multi-zone-service-summary-view",params:{mesh:a.mesh,service:a.id},query:{page:e.params.page,size:e.params.size,s:e.params.s}}},{default:s(()=>[m(_(a.name),1)]),_:2},1032,["to"])]),_:2},1032,["text"])]),ports:s(({row:a})=>[t(u,{type:"separated",truncate:""},{default:s(()=>[(i(!0),g(w,null,y(a.spec.ports,l=>(i(),c(X,{key:l.port,port:{...l,targetPort:void 0}},null,8,["port"]))),128))]),_:2},1024)]),labels:s(({row:a})=>[t(u,{type:"separated",truncate:""},{default:s(()=>[(i(!0),g(w,null,y(a.spec.selector.meshService.matchLabels,(l,v)=>(i(),c(V,{key:`${v}:${l}`,appearance:"info"},{default:s(()=>[m(_(v)+":"+_(l),1)]),_:2},1024))),128))]),_:2},1024)]),actions:s(({row:a})=>[t(k,null,{default:s(()=>[t(h,{to:{name:"mesh-multi-zone-service-detail-view",params:{mesh:a.mesh,service:a.id}}},{default:s(()=>[m(_(d("common.collection.actions.view")),1)]),_:2},1032,["to"])]),_:2},1024)]),_:2,__:[1,2,3]},1032,["headers","items","is-selected-row","onResize"]),n[4]||(n[4]=m()),r.items&&e.params.service?(i(),c(L,{key:0},{default:s(a=>[t(Z,{onClose:l=>e.replace({name:"mesh-multi-zone-service-list-view",params:{mesh:e.params.mesh},query:{page:e.params.page,size:e.params.size,s:e.params.s}})},{default:s(()=>[(i(),c(G(a.Component),{items:r.items},null,8,["items"]))]),_:2},1032,["onClose"])]),_:2},1024)):T("",!0)]),_:2,__:[4]},1032,["items","page","page-size","total","onChange"])]),_:2},1032,["src"])]),_:2,__:[5]},1024)]),_:2},1024)]),_:2},1032,["docs"])]),_:1,__:[6]})}}}),O=I(E,[["__scopeId","data-v-475cba38"]]);export{O as default};
