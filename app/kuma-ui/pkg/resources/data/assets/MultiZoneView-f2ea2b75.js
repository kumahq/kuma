import{L as x}from"./LoadingBox-24d5109c.js";import{O as z,a as Z,b as k}from"./OnboardingPage-31209153.js";import{j as I,l as T,k as A,g as O,_ as M,h as N}from"./RouteView.vue_vue_type_script_setup_true_lang-76145142.js";import{_ as V}from"./RouteTitle.vue_vue_type_script_setup_true_lang-f639963c.js";import{d as L,q as r,M as U,o as a,a as C,w as c,h as i,b as m,g as e,k as n,e as l,f as S,p as B,m as $}from"./index-9d631905.js";import"./kongponents.es-bba90403.js";const E=u=>(B("data-v-40900992"),u=u(),$(),u),K=E(()=>n("p",{class:"mb-4 text-center"},`
            A zone requires both the zone control plane and zone ingress. On Kubernetes, you run a single command to create both resources. On Universal, you must create them separately.
          `,-1)),R={class:"mb-4 text-center"},D=["href"],P={class:"status-box mt-4"},q={key:0,class:"status--is-connected","data-testid":"zone-connected"},G={key:1,class:"status--is-disconnected","data-testid":"zone-disconnected"},j={class:"status-box mt-4"},H={key:0,class:"status--is-connected","data-testid":"zone-ingress-connected"},Q={key:1,class:"status--is-disconnected","data-testid":"zone-ingress-disconnected"},Y={key:0,class:"status-loading-box mt-4"},b=1e3,F=L({__name:"MultiZoneView",setup(u){const p=I(),f=T(),{t:y}=A(),s=r(!1),o=r(!1),d=r(null),_=r(null);U(function(){h(),w()}),v(),g();async function v(){try{const{total:t}=await p.getZones();s.value=t>0}catch(t){s.value=!1,console.error(t)}finally{s.value||(h(),d.value=window.setTimeout(v,b))}}async function g(){try{const{total:t}=await p.getAllZoneIngressOverviews();o.value=t>0}catch(t){o.value=!1,console.error(t)}finally{o.value||(w(),_.value=window.setTimeout(g,b))}}function h(){d.value!==null&&window.clearTimeout(d.value)}function w(){_.value!==null&&window.clearTimeout(_.value)}return(t,J)=>(a(),C(M,null,{default:c(()=>[i(V,{title:m(y)("onboarding.routes.multizone.title")},null,8,["title"]),e(),i(O,null,{default:c(()=>[i(z,null,{header:c(()=>[i(Z,null,{title:c(()=>[e(`
              Add zones
            `)]),_:1})]),content:c(()=>[K,e(),n("p",R,[n("b",null,[e("See "),n("a",{href:`${m(f)("KUMA_DOCS_URL")}/deployments/multi-zone/?${m(f)("KUMA_UTM_QUERY_PARAMS")}#zone-control-plane`,target:"_blank"},"the documentation for options to install",8,D),e(".")])]),e(),n("div",null,[n("p",P,[e(`
              Zone status:

              `),s.value?(a(),l("span",q,"Connected")):(a(),l("span",G,"Disconnected"))]),e(),n("p",j,[e(`
              Zone ingress status:

              `),o.value?(a(),l("span",H,"Connected")):(a(),l("span",Q,"Disconnected"))]),e(),!o.value||!s.value?(a(),l("div",Y,[i(x)])):S("",!0)])]),navigation:c(()=>[i(k,{"next-step":"onboarding-create-mesh","previous-step":"onboarding-configuration-types","should-allow-next":s.value&&o.value},null,8,["should-allow-next"])]),_:1})]),_:1})]),_:1}))}});const oe=N(F,[["__scopeId","data-v-40900992"]]);export{oe as default};
