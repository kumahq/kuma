import{L as v}from"./LoadingBox-DGLuIHq0.js";import{O as w,a as k,b as x}from"./OnboardingPage-DH263cTv.js";import{C as l}from"./CodeBlock-BBaehSk1.js";import{d as C,i as d,o as s,a as V,w as t,j as o,k as e,b as c,H as y,g as n,e as A,p as D,f as N,_ as S}from"./index-DJJJbhb4.js";const p=i=>(D("data-v-f0c029f3"),i=i(),N(),i),B=p(()=>n("p",{class:"mb-4 text-center"},`
              The demo application includes two services: a Redis backend to store a counter value, and a frontend web UI to show and increment the counter.
            `,-1)),O=p(()=>n("p",null,"To run execute the following command:",-1)),R={key:1},I={class:"mb-4 text-center"},T=["href"],L={class:"mt-4 text-center"},E=["href"],H={class:"status-box mt-4"},P={key:0,class:"status--is-connected","data-testid":"dpps-connected"},j={key:1,class:"status--is-disconnected","data-testid":"dpps-disconnected"},z={key:0,class:"status-loading-box mt-4"},F=C({__name:"OnboardingAddNewServicesCodeView",setup(i){return(G,M)=>{const _=d("RouteTitle"),u=d("DataLoader"),f=d("DataSource"),m=d("AppView"),h=d("RouteView");return s(),V(h,{name:"onboarding-add-new-services"},{default:t(({can:g,t:a})=>[o(_,{title:a("onboarding.routes.add-services-code.title"),render:!1},null,8,["title"]),e(),o(m,null,{default:t(()=>[o(f,{src:"/dataplanes/online?page=1&size=10"},{default:t(({data:r,error:b})=>[o(w,null,{header:t(()=>[o(k,null,{title:t(()=>[e(`
                Add services
              `)]),_:1})]),content:t(()=>[B,e(),g("use kubernetes")?(s(),c(y,{key:0},[O,e(),o(l,{language:"bash",code:a("onboarding.routes.add-services-code.k8s")},null,8,["code"])],64)):(s(),c("div",R,[n("p",I,[e(`
                Clone `),n("a",{href:a("onboarding.routes.add-services-code.repo"),target:"_blank"},"the GitHub repository",8,T),e(` for the demo application:
              `)]),e(),o(l,{language:"bash",code:`git clone ${a("onboarding.routes.add-services-code.repo")}`},null,8,["code"]),e(),n("p",L,[e(`
                And follow the instructions in `),n("a",{href:a("onboarding.routes.add-services-code.readme"),target:"_blank"},"the README",8,E),e(`.
              `)])])),e(),n("div",null,[o(u,{data:[r],errors:[b],loader:!1},{default:t(()=>[n("p",H,[e(`
                  DPPs status:

                  `),typeof r<"u"?(s(),c("span",P,"Connected")):(s(),c("span",j,"Disconnected"))]),e(),typeof r>"u"?(s(),c("div",z,[o(v)])):A("",!0)]),_:2},1032,["data","errors"])])]),navigation:t(()=>[o(x,{"next-step":"onboarding-dataplanes-view","previous-step":"onboarding-add-new-services-view","should-allow-next":typeof r<"u"},null,8,["should-allow-next"])]),_:2},1024)]),_:2},1024)]),_:2},1024)]),_:1})}}}),K=S(F,[["__scopeId","data-v-f0c029f3"]]);export{K as default};
