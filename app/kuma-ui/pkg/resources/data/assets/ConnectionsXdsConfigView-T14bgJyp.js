import{d as w,r as n,p as E,o as V,w as a,b as o,e as r,m as B,a3 as T,l as N}from"./index-rkLVsYtq.js";const b={ref:"$el"},v=w({__name:"ConnectionsXdsConfigView",props:{routeName:{}},setup(d){const i=d;return(p,s)=>{const c=n("RouteTitle"),l=n("XCheckbox"),m=n("XAction"),g=n("XCodeBlock"),u=n("XWindow"),_=n("DataLoader"),f=n("XCard"),x=n("AppView"),h=n("RouteView");return V(),E(h,{name:i.routeName,params:{mesh:"",proxy:"",proxyType:"",codeSearch:"",codeFilter:!1,codeRegExp:!1,includeEds:Boolean}},{default:a(({route:e,t:C,uri:y})=>[o(c,{render:!1,title:C("data-planes.routes.item.navigation.data-plane-xds-config-view")},null,8,["title"]),s[2]||(s[2]=r()),o(x,null,{default:a(()=>[o(f,null,{default:a(()=>[o(_,{src:y(B(T),"/connections/xds/for/:proxyType/:name/:mesh/:endpoints",{proxyType:{ingresses:"zone-ingress",egresses:"zone-egress"}[e.params.proxyType]??"dataplane",name:e.params.proxy,mesh:e.params.mesh||"*",endpoints:String(e.params.includeEds)})},{default:a(({data:R,refresh:X})=>[o(u,{resize:!0},{default:a(({resize:k})=>[N("div",b,[o(g,{"max-height":`${(k?.target?.innerHeight??0)-(p.$el?.getBoundingClientRect().top+200)}`,language:"json",code:JSON.stringify(R,null,2),"is-searchable":"",query:e.params.codeSearch,"is-filter-mode":e.params.codeFilter,"is-reg-exp-mode":e.params.codeRegExp,onFilterModeChange:t=>e.update({codeFilter:t}),onRegExpModeChange:t=>e.update({codeRegExp:t})},{"primary-actions":a(()=>[o(l,{checked:e.params.includeEds,label:"Include endpoints",onChange:t=>e.update({includeEds:t})},null,8,["checked","onChange"]),s[1]||(s[1]=r()),o(m,{action:"refresh",appearance:"primary",onClick:X},{default:a(()=>[...s[0]||(s[0]=[r(`
                    Refresh
                  `,-1)])]),_:1},8,["onClick"])]),_:2},1032,["max-height","code","query","is-filter-mode","is-reg-exp-mode","onFilterModeChange","onRegExpModeChange"])],512)]),_:2},1024)]),_:2},1032,["src"])]),_:2},1024)]),_:2},1024)]),_:1},8,["name"])}}});export{v as default};
