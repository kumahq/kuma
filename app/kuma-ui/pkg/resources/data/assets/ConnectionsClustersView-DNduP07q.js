import{d as V,r as o,p as X,o as T,w as a,b as n,e as r,m as k,a3 as B,l as E}from"./index-Dj9XieVz.js";const F={ref:"$el"},v=V({__name:"ConnectionsClustersView",props:{routeName:{}},setup(p){const c=p;return(i,s)=>{const d=o("RouteTitle"),l=o("XAction"),m=o("XCodeBlock"),u=o("XWindow"),g=o("DataLoader"),_=o("XCard"),f=o("AppView"),h=o("RouteView");return T(),X(h,{name:c.routeName,params:{mesh:"",proxy:"",proxyType:"",codeSearch:"",codeFilter:!1,codeRegExp:!1}},{default:a(({route:e,t:x,uri:C})=>[n(f,null,{default:a(()=>[n(d,{render:!1,title:x("data-planes.routes.item.navigation.data-plane-clusters-view")},null,8,["title"]),s[1]||(s[1]=r()),n(_,null,{default:a(()=>[n(g,{src:C(k(B),"/connections/clusters/for/:proxyType/:name/:mesh",{proxyType:{ingresses:"zone-ingress",egresses:"zone-egress"}[e.params.proxyType]??"dataplane",name:e.params.proxy,mesh:e.params.mesh||"*"})},{default:a(({data:y,refresh:R})=>[n(u,{resize:!0},{default:a(({resize:w})=>[E("div",F,[n(m,{"max-height":`${(w?.target?.innerHeight??0)-(i.$el?.getBoundingClientRect().top+200)}`,language:"json",code:y,"is-searchable":"",query:e.params.codeSearch,"is-filter-mode":e.params.codeFilter,"is-reg-exp-mode":e.params.codeRegExp,onQueryChange:t=>e.update({codeSearch:t}),onFilterModeChange:t=>e.update({codeFilter:t}),onRegExpModeChange:t=>e.update({codeRegExp:t})},{"primary-actions":a(()=>[n(l,{action:"refresh",appearance:"primary",onClick:R},{default:a(()=>[...s[0]||(s[0]=[r(`
                    Refresh
                  `,-1)])]),_:1},8,["onClick"])]),_:2},1032,["max-height","code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])],512)]),_:2},1024)]),_:2},1032,["src"])]),_:2},1024)]),_:2},1024)]),_:1},8,["name"])}}});export{v as default};
