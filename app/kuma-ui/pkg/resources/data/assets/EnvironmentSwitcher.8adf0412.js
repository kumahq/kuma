import{Y as v,_ as m,o,e as r,a,G as p,w as i,b as e,f as n,t as h,n as c,r as l}from"./index.8c6a97c0.js";const _={name:"EnvironmentSwitcher",data(){return{wizardRoutes:{kubernetes:"kubernetes-dataplane",universal:"universal-dataplane"}}},computed:{...v({environment:"config/getEnvironment"}),instructionsCtaText(){return this.environment==="universal"?"Switch to Kubernetes instructions":"Switch to Universal instructions"},instructionsCtaRoute(){return this.environment==="kubernetes"?{name:"universal-dataplane"}:{name:"kubernetes-dataplane"}}}},w={class:"wizard-switcher"},y={class:"capitalize"},b={key:0},g={key:0},k=n("p",null,[e(" We have detected that you are running on a "),n("strong",null,"Kubernetes environment"),e(", and we are going to be showing you instructions for Kubernetes unless you decide to visualize the instructions for Universal. ")],-1),f={key:1},z=n("p",null,[e(" We have detected that you are running on a "),n("strong",null,"Kubernetes environment"),e(", but you are viewing instructions for Universal. ")],-1),S={key:1},K={key:0},R=n("p",null,[e(" We have detected that you are running on a "),n("strong",null,"Universal environment"),e(", but you are viewing instructions for Kubernetes. ")],-1),U={key:1},E=n("p",null,[e(" We have detected that you are running on a "),n("strong",null,"Universal environment"),e(", and we are going to be showing you instructions for Universal unless you decide to visualize the instructions for Kubernetes. ")],-1);function B(t,C,N,V,s,W){const u=l("KButton"),d=l("KEmptyState");return o(),r("div",w,[a(d,{ref:"emptyState","cta-is-hidden":"","is-error":!t.environment,class:"my-6 wizard-empty-state"},p({message:i(()=>[t.environment==="kubernetes"?(o(),r("div",b,[t.$route.name===s.wizardRoutes.kubernetes?(o(),r("div",g,[k,n("p",null,[a(u,{to:{name:s.wizardRoutes.universal},appearance:"secondary"},{default:i(()=>[e(" Switch to Universal instructions ")]),_:1},8,["to"])])])):t.$route.name===s.wizardRoutes.universal?(o(),r("div",f,[z,n("p",null,[a(u,{to:{name:s.wizardRoutes.kubernetes},appearance:"secondary"},{default:i(()=>[e(" Switch back to Kubernetes instructions ")]),_:1},8,["to"])])])):c("",!0)])):t.environment==="universal"?(o(),r("div",S,[t.$route.name===s.wizardRoutes.kubernetes?(o(),r("div",K,[R,n("p",null,[a(u,{to:{name:s.wizardRoutes.universal},appearance:"secondary"},{default:i(()=>[e(" Switch back to Universal instructions ")]),_:1},8,["to"])])])):t.$route.name===s.wizardRoutes.universal?(o(),r("div",U,[E,n("p",null,[a(u,{to:{name:s.wizardRoutes.kubernetes},appearance:"secondary"},{default:i(()=>[e(" Switch to Kubernetes instructions ")]),_:1},8,["to"])])])):c("",!0)])):c("",!0)]),_:2},[t.environment==="kubernetes"||t.environment==="universal"?{name:"title",fn:i(()=>[e(" Running on "),n("span",y,h(t.environment),1)]),key:"0"}:void 0]),1032,["is-error"])])}const T=m(_,[["render",B]]);export{T as E};
