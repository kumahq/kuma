function p(e){let i=[];e.networking.inbound&&(i=e.networking.inbound.filter(n=>"tags"in n).flatMap(n=>Object.entries(n.tags)).map(([n,t])=>`${n}=${t}`)),e.networking.gateway&&(i=Object.entries(e.networking.gateway.tags).map(([n,t])=>`${n}=${t}`));const o=Array.from(new Set(i));return o.sort((n,t)=>n.localeCompare(t)),o.map(n=>n.split("=")).map(([n,t])=>({label:n,value:t}))}function r(e={subscriptions:[]}){return(e.subscriptions??[]).some(o=>{var n;return((n=o.connectTime)==null?void 0:n.length)&&!o.disconnectTime})?"online":"offline"}function l(e,i={subscriptions:[]}){const o=e.networking.inbound??[],n=o.filter(s=>s.health&&!s.health.ready).map(s=>`Inbound on port ${s.port} is not ready (kuma.io/service: ${s.tags["kuma.io/service"]})`);let t;switch(!0){case o.length===0:t="online";break;case n.length===o.length:t="offline";break;case n.length>0:t="partially_degraded";break;default:t=r(i)}return{status:t,reason:n}}function m(e){const i=(e==null?void 0:e.subscriptions)||[];if(i.length===0)return null;const o={},n=i[i.length-1];return n.version===void 0?null:(n.version.envoy&&(o.envoy=n.version.envoy.version),n.version.kumaDp&&(o.kumaDp=n.version.kumaDp.version),n.version.dependencies&&Object.entries(n.version.dependencies).forEach(([t,s])=>{o[t]=s}),o)}function b(e){var n,t;return((n=e.kumaDp)==null?void 0:n.kumaCpCompatible)??!0?((t=e.envoy)==null?void 0:t.kumaDpCompatible)??!0?{kind:a}:{kind:c,payload:{envoy:e.envoy.version,kumaDp:e.kumaDp.version}}:{kind:u,payload:{kumaDp:e.kumaDp.version}}}const a="COMPATIBLE",u="INCOMPATIBLE_UNSUPPORTED_KUMA_DP",c="INCOMPATIBLE_UNSUPPORTED_ENVOY",f="INCOMPATIBLE_WRONG_FORMAT";export{a as C,f as I,l as a,m as b,b as c,p as d,r as g};
