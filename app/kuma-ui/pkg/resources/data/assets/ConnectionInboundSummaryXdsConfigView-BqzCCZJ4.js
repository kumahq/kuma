import{d as R,r as o,p as S,o as N,w as t,b as r,e as i,m as s,a8 as w,t as T}from"./index-Bv0SUEJU.js";import{C as d}from"./kri-D19gROKk.js";const E=R({__name:"ConnectionInboundSummaryXdsConfigView",props:{data:{},routeName:{}},setup(m){const a=m;return(V,p)=>{const l=o("RouteTitle"),u=o("XAction"),g=o("XCodeBlock"),_=o("DataLoader"),x=o("AppView"),f=o("RouteView");return N(),S(f,{params:{codeSearch:"",codeFilter:!1,codeRegExp:!1,proxyType:"",mesh:"",proxy:"",connection:""},name:a.routeName},{default:t(({t:c,route:e,uri:y})=>[r(l,{render:!1,title:c("connections.routes.item.navigation.xds")},null,8,["title"]),p[0]||(p[0]=i()),r(x,null,{default:t(()=>[r(_,{src:y(s(w),"/connections/xds/for/:proxyType/:name/:mesh/inbound/:inbound",{mesh:e.params.mesh||"*",name:e.params.proxy,inbound:"proxyResourceName"in a.data?s(d).toString({...s(d).fromString(a.data.proxyResourceName),sectionName:a.data.port.toString()}):`${a.data.port}`,proxyType:{ingresses:"zone-ingress",egresses:"zone-egress"}[e.params.proxyType]??"dataplane"})},{default:t(({data:C,refresh:h})=>[r(g,{language:"json",code:JSON.stringify(C,null,2),"is-searchable":"",query:e.params.codeSearch,"is-filter-mode":e.params.codeFilter,"is-reg-exp-mode":e.params.codeRegExp,onQueryChange:n=>e.update({codeSearch:n}),onFilterModeChange:n=>e.update({codeFilter:n}),onRegExpModeChange:n=>e.update({codeRegExp:n})},{"primary-actions":t(()=>[r(u,{action:"refresh",appearance:"primary",onClick:h},{default:t(()=>[i(T(c("common.refresh")),1)]),_:2},1032,["onClick"])]),_:2},1032,["code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])]),_:2},1032,["src"])]),_:2},1024)]),_:1,__:[0]},8,["name"])}}});export{E as default};
