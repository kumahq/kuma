import{d as X,r as o,p as A,o as T,w as a,b as n,e as i,m as B,a3 as E,l as F}from"./index-CIntnFRJ.js";const N={ref:"$el"},M=X({__name:"ConnectionsStatsView",props:{networking:{},routeName:{}},setup(l){const p=l;return(m,s)=>{const _=o("RouteTitle"),g=o("XAction"),u=o("XCodeBlock"),f=o("XWindow"),h=o("DataLoader"),x=o("XCard"),C=o("AppView"),y=o("RouteView");return T(),A(y,{name:p.routeName,params:{mesh:"",proxy:"",proxyType:"",codeSearch:"",codeFilter:!1,codeRegExp:!1}},{default:a(({route:e,t:w,uri:R})=>[n(_,{render:!1,title:w("data-planes.routes.item.navigation.data-plane-stats-view")},null,8,["title"]),s[1]||(s[1]=i()),n(C,null,{default:a(()=>[n(x,null,{default:a(()=>[n(h,{src:R(B(E),"/connections/stats/for/:proxyType/:name/:mesh/:socketAddress",{proxyType:{ingresses:"zone-ingress",egresses:"zone-egress"}[e.params.proxyType]??"dataplane",name:e.params.proxy,mesh:e.params.mesh||"*",socketAddress:p.networking.inboundAddress})},{default:a(({data:k,refresh:V})=>[n(f,{resize:!0},{default:a(({resize:r})=>{var d,c;return[F("div",N,[n(u,{"max-height":`${(((d=r==null?void 0:r.target)==null?void 0:d.innerHeight)??0)-(((c=m.$el)==null?void 0:c.getBoundingClientRect().top)+200)}`,language:"json",code:k.raw,"is-searchable":"",query:e.params.codeSearch,"is-filter-mode":e.params.codeFilter,"is-reg-exp-mode":e.params.codeRegExp,onQueryChange:t=>e.update({codeSearch:t}),onFilterModeChange:t=>e.update({codeFilter:t}),onRegExpModeChange:t=>e.update({codeRegExp:t})},{"primary-actions":a(()=>[n(g,{action:"refresh",appearance:"primary",onClick:V},{default:a(()=>s[0]||(s[0]=[i(`
                    Refresh
                  `,-1)])),_:2,__:[0]},1032,["onClick"])]),_:2},1032,["max-height","code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])],512)]}),_:2},1024)]),_:2},1032,["src"])]),_:2},1024)]),_:2},1024)]),_:1,__:[1]},8,["name"])}}});export{M as default};
