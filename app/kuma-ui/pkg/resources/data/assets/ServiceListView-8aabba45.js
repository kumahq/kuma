import{d as L,u as q,q as l,s as z,o as h,a as w,w as u,h as c,b as k,g as B,P as D,f as F}from"./index-012f1e00.js";import{S as M}from"./ServiceSummary-0e034492.js";import{j as O,k as Q,g as R,_ as U}from"./RouteView.vue_vue_type_script_setup_true_lang-39a346d9.js";import{_ as j}from"./RouteTitle.vue_vue_type_script_setup_true_lang-8809e6f8.js";import{C as G}from"./ContentWrapper-417ac83a.js";import{D as K}from"./DataOverview-adabedfa.js";import{Q as S}from"./QueryParameter-70743f73.js";import"./kongponents.es-2f32199a.js";import"./DefinitionListItem-25665f6d.js";import"./ResourceCodeBlock.vue_vue_type_script_setup_true_lang-0ff4a9e4.js";import"./CodeBlock.vue_vue_type_style_index_0_lang-bb3aea36.js";import"./TextWithCopyButton-4e646988.js";import"./StatusInfo.vue_vue_type_script_setup_true_lang-174e0445.js";import"./EmptyBlock.vue_vue_type_script_setup_true_lang-d2c1c105.js";import"./ErrorBlock-d94637ae.js";import"./LoadingBlock.vue_vue_type_script_setup_true_lang-801e36cd.js";import"./toYaml-4e00099e.js";import"./StatusBadge-7fe3f937.js";import"./TagList-6eed843d.js";const pe=L({__name:"ServiceListView",props:{selectedServiceName:{type:String,required:!1,default:null},offset:{type:Number,required:!1,default:0}},setup(N){const m=N,p=O(),{t:P}=Q(),A=[{label:"Name",key:"entity"},{label:"Type",key:"serviceType"},{label:"Address",key:"addressPort"},{label:"Status",key:"status"},{label:"DP proxies (online / total)",key:"dpProxiesStatus"}],E={title:"No Data",message:"There are no service insights present."},v=q(),d=l(!0),f=l(null),b=l(null),x=l(m.offset),t=l(null),i=l(null),n=l({headers:A,data:[]});z(()=>v.params.mesh,function(){v.name==="services-list-view"&&y(0)}),y(m.offset);async function y(a){var o;x.value=a,S.set("offset",a>0?a:null),d.value=!0,f.value=null;const e=v.params.mesh,r=D;try{const{items:s,next:_}=await p.getAllServiceInsightsFromMesh({mesh:e},{size:r,offset:a});b.value=_,n.value.data=C(s??[]),await g({name:m.selectedServiceName??((o=n.value.data[0])==null?void 0:o.entity.name),mesh:e})}catch(s){n.value.data=[],t.value=null,i.value=null,s instanceof Error?f.value=s:console.error(s)}finally{d.value=!1}}function C(a){return a.map(e=>{const{serviceType:r="internal",addressPort:o="",status:s="not_available"}=e,_={name:"service-detail-view",params:{mesh:e.mesh,service:e.name}};let T="â€”";if(e.dataplanes){const{online:V=0,total:$=0}=e.dataplanes;T=`${V} / ${$}`}return{entity:e,detailViewRoute:_,status:s,serviceType:r,dpProxiesStatus:T,addressPort:o}})}async function g({name:a,mesh:e}){a!==void 0?(t.value=await p.getServiceInsight({mesh:e,name:a}),t.value.serviceType==="external"&&(i.value=await p.getExternalServiceByServiceInsightName(e,a)),S.set("service",a)):(t.value=null,i.value=null,S.set("service",null))}return(a,e)=>(h(),w(U,{module:"services"},{default:u(()=>[c(j,{title:k(P)("services.routes.items.title")},null,8,["title"]),B(),c(R,null,{default:u(()=>[c(G,null,{content:u(()=>{var r;return[c(K,{"selected-entity-name":(r=t.value)==null?void 0:r.name,"page-size":k(D),error:f.value,"is-loading":d.value,"empty-state":E,"table-data":n.value,"table-data-is-empty":n.value.data.length===0,next:b.value,"page-offset":x.value,onTableAction:g,onLoadData:y},null,8,["selected-entity-name","page-size","error","is-loading","table-data","table-data-is-empty","next","page-offset"])]}),sidebar:u(()=>[t.value!==null?(h(),w(M,{key:0,service:t.value,"external-service":i.value},null,8,["service","external-service"])):F("",!0)]),_:1})]),_:1})]),_:1}))}});export{pe as default};
