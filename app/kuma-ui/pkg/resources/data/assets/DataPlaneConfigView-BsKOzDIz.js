import{d as V,r as o,o as m,m as d,w as n,b as t,e as E,l,aw as p,p as v}from"./index--1DEc0sn.js";import{_ as D}from"./ResourceCodeBlock.vue_vue_type_script_setup_true_lang-BTrb7rgc.js";import"./CodeBlock-CZTqRzUy.js";import"./toYaml-DB9FPXFY.js";const N=V({__name:"DataPlaneConfigView",setup(F){return(S,k)=>{const i=o("RouteTitle"),_=o("DataSource"),h=o("DataLoader"),u=o("KCard"),f=o("AppView"),g=o("RouteView");return m(),d(g,{name:"data-plane-config-view",params:{mesh:"",dataPlane:"",codeSearch:"",codeFilter:!1,codeRegExp:!1}},{default:n(({route:e,t:C,uri:r})=>[t(i,{render:!1,title:C("data-planes.routes.item.navigation.data-plane-config-view")},null,8,["title"]),E(),t(f,null,{default:n(()=>[t(u,null,{default:n(()=>[t(h,{src:r(l(p),"/meshes/:mesh/dataplanes/:name",{mesh:e.params.mesh,name:e.params.dataPlane})},{default:n(({data:x})=>[t(D,{resource:x.config,"is-searchable":"",query:e.params.codeSearch,"is-filter-mode":e.params.codeFilter,"is-reg-exp-mode":e.params.codeRegExp,onQueryChange:a=>e.update({codeSearch:a}),onFilterModeChange:a=>e.update({codeFilter:a}),onRegExpModeChange:a=>e.update({codeRegExp:a})},{default:n(({copy:a,copying:w})=>[w?(m(),d(_,{key:0,src:r(l(p),"/meshes/:mesh/dataplanes/:name/as/kubernetes",{mesh:e.params.mesh,name:e.params.dataPlane},{cacheControl:"no-store"}),onChange:s=>{a(c=>c(s))},onError:s=>{a((c,R)=>R(s))}},null,8,["src","onChange","onError"])):v("",!0)]),_:2},1032,["resource","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])]),_:2},1032,["src"])]),_:2},1024)]),_:2},1024)]),_:1})}}});export{N as default};
