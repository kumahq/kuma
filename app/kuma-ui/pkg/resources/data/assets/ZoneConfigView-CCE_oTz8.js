import{d as N,m as p,w as a,b as i,e as d,r as e,c as z,v as j,F as k,t as A,s as M,o as s,B as O,p as $}from"./index-DCpx1q_-.js";const q=N({__name:"ZoneConfigView",props:{data:{}},setup(w){const o=w;return(D,r)=>{const y=e("RouteTitle"),x=e("XI18n"),v=e("XNotification"),R=e("XCodeBlock"),V=e("XAlert"),X=e("XCard"),I=e("AppView"),S=e("DataSource"),E=e("RouteView");return s(),p(E,{name:"zone-cp-config-view",params:{zone:"",codeSearch:"",codeFilter:!1,codeRegExp:!1}},{default:a(({route:n,t:m,uri:F})=>{var u,g;return[i(y,{render:!1,title:m("zone-cps.routes.item.navigation.zone-cp-config-view")},null,8,["title"]),r[1]||(r[1]=d()),i(S,{src:F(M(O),"/control-plane/outdated/:version",{version:((g=(u=o.data.zoneInsight.version)==null?void 0:u.kumaCp)==null?void 0:g.version)??"-"})},{default:a(({data:l})=>[i(I,{notifications:!0},{default:a(()=>{var f,_,C,h,b;return[(s(!0),z(k,null,j([{bool:o.data.zoneInsight.store==="memory",key:"store-memory"},{bool:!((_=(f=o.data.zoneInsight.version)==null?void 0:f.kumaCp)!=null&&_.kumaCpGlobalCompatible),key:"global-cp-incompatible",params:{zoneCpVersion:((h=(C=o.data.zoneInsight.version)==null?void 0:C.kumaCp)==null?void 0:h.version)??"-",globalCpVersion:(l==null?void 0:l.version)??""}},{bool:(((b=o.data.zoneInsight.connectedSubscription)==null?void 0:b.status.total.responsesRejected)??0)>0,key:"global-nack-response"}],({bool:t,key:c,params:B})=>(s(),z(k,{key:c},[t?(s(),p(v,{key:0,"data-testid":`warning-${c}`,uri:`zone-cps.notifications.${c}.${o.data.id}`},{default:a(()=>[i(x,{path:`zone-cps.notifications.${c}`,params:Object.fromEntries(Object.entries(B??{}))},null,8,["path","params"])]),_:2},1032,["data-testid","uri"])):$("",!0)],64))),128)),r[0]||(r[0]=d()),i(X,null,{default:a(()=>[Object.keys(o.data.zoneInsight.config).length>0?(s(),p(R,{key:0,language:"json",code:JSON.stringify(o.data.zoneInsight.config,null,2),"is-searchable":"",query:n.params.codeSearch,"is-filter-mode":n.params.codeFilter,"is-reg-exp-mode":n.params.codeRegExp,onQueryChange:t=>n.update({codeSearch:t}),onFilterModeChange:t=>n.update({codeFilter:t}),onRegExpModeChange:t=>n.update({codeRegExp:t})},null,8,["code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])):(s(),p(V,{key:1,class:"mt-4","data-testid":"warning-no-subscriptions",variant:"warning"},{default:a(()=>[d(A(m("zone-cps.detail.no_subscriptions")),1)]),_:2},1024))]),_:2},1024)]}),_:2},1024)]),_:2},1032,["src"])]}),_:1})}}});export{q as default};
