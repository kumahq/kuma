import{d as V,f as P,r as D,o as e,j as i,m as s,l as t,F as f,G as b,D as c,h as d,w as n,k as B,g as y,X as A,z as C,B as R,q as j,L as F,A as K,C as O,i as x,a5 as q,p as I,E as S,s as z,_ as H}from"./index-cf0727dc.js";import{A as J,a as M}from"./AccordionList-6ce6736a.js";const v=h=>(C("data-v-c7f30269"),h=h(),R(),h),T={class:"policies-list"},X={class:"mesh-gateway-policy-list"},Q=v(()=>s("h3",{class:"mb-2"},`
        Gateway policies
      `,-1)),U={key:0},W=v(()=>s("h3",{class:"mt-6 mb-2"},`
        Listeners
      `,-1)),Y=v(()=>s("b",null,"Host",-1)),Z=v(()=>s("h4",{class:"mt-2 mb-2"},`
                Routes
              `,-1)),E={class:"dataplane-policy-header"},ee=v(()=>s("b",null,"Route",-1)),te=v(()=>s("b",null,"Service",-1)),se={key:0,class:"badge-list"},ae={class:"mt-1"},oe=V({__name:"GatewayDataplanePolicyList",props:{gatewayDataplane:{},policyTypesByName:{}},setup(h){const w=h,G=P(()=>L(w.gatewayDataplane)),$=P(()=>g(w.gatewayDataplane.policies));function L(r){const u=[],o=r.listeners??[];for(const p of o)for(const a of p.hosts)for(const _ of a.routes){const l=[];for(const N of _.destinations){const m=g(N.policies),k={routeName:_.route,route:{name:"policy-detail-view",params:{mesh:r.gateway.mesh,policyPath:"meshgatewayroutes",policy:_.route}},service:N.tags["kuma.io/service"],policies:m};l.push(k)}u.push({protocol:p.protocol,port:p.port,hostName:a.hostName,routeEntries:l})}return u}function g(r){if(r===void 0)return[];const u=[];for(const o of Object.values(r)){const p=w.policyTypesByName[o.type];u.push({type:o.type,name:o.name,route:{name:"policy-detail-view",params:{mesh:o.mesh,policyPath:p.path,policy:o.name}}})}return u}return(r,u)=>{const o=D("router-link"),p=D("KBadge");return e(),i("div",T,[s("div",X,[Q,t(),$.value.length>0?(e(),i("ul",U,[(e(!0),i(f,null,b($.value,(a,_)=>(e(),i("li",{key:_},[s("span",null,c(a.type),1),t(`:

          `),d(o,{to:a.route},{default:n(()=>[t(c(a.name),1)]),_:2},1032,["to"])]))),128))])):B("",!0),t(),W,t(),s("div",null,[(e(!0),i(f,null,b(G.value,(a,_)=>(e(),i("div",{key:_},[s("div",null,[s("div",null,[Y,t(": "+c(a.hostName)+":"+c(a.port)+" ("+c(a.protocol)+`)
            `,1)]),t(),a.routeEntries.length>0?(e(),i(f,{key:0},[Z,t(),d(M,{"initially-open":[],"multiple-open":""},{default:n(()=>[(e(!0),i(f,null,b(a.routeEntries,(l,N)=>(e(),y(J,{key:N},A({"accordion-header":n(()=>[s("div",E,[s("div",null,[s("div",null,[ee,t(": "),d(o,{to:l.route},{default:n(()=>[t(c(l.routeName),1)]),_:2},1032,["to"])]),t(),s("div",null,[te,t(": "+c(l.service),1)])]),t(),l.policies.length>0?(e(),i("div",se,[(e(!0),i(f,null,b(l.policies,(m,k)=>(e(),y(p,{key:`${_}-${k}`},{default:n(()=>[t(c(m.type),1)]),_:2},1024))),128))])):B("",!0)])]),_:2},[l.policies.length>0?{name:"accordion-content",fn:n(()=>[s("ul",ae,[(e(!0),i(f,null,b(l.policies,(m,k)=>(e(),i("li",{key:`${_}-${k}`},[t(c(m.type)+`:

                        `,1),d(o,{to:m.route},{default:n(()=>[t(c(m.name),1)]),_:2},1032,["to"])]))),128))])]),key:"0"}:void 0]),1024))),128))]),_:2},1024)],64)):B("",!0)])]))),128))])])])}}});const ne=j(oe,[["__scopeId","data-v-c7f30269"]]),ce=V({__name:"GatewayPoliciesView",setup(h){const{t:w}=F();return(G,$)=>(e(),y(H,{name:"gateway-policies-view","data-testid":"gateway-policies-view"},{default:n(({route:L})=>[d(K,null,{title:n(()=>[s("h2",null,[d(O,{title:x(w)("gateways.routes.item.navigation.gateway-policies-view"),render:!0},null,8,["title"])])]),default:n(()=>[t(),d(x(q),null,{body:n(()=>[d(I,{src:"/*/policy-types"},{default:n(({data:g,error:r})=>[d(I,{src:`/meshes/${L.params.mesh}/gateways/${L.params.dataPlane}/policies`},{default:n(({data:u,error:o})=>[r?(e(),y(S,{key:0,error:r},null,8,["error"])):o?(e(),y(S,{key:1,error:o},null,8,["error"])):u===void 0||g===void 0?(e(),y(z,{key:2})):(e(),y(ne,{key:3,"policy-types-by-name":g.policies.reduce((p,a)=>Object.assign(p,{[a.name]:a}),{}),"gateway-dataplane":u},null,8,["policy-types-by-name","gateway-dataplane"]))]),_:2},1032,["src"])]),_:2},1024)]),_:2},1024)]),_:2},1024)]),_:1}))}});export{ce as default};
