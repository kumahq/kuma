import{u as T}from"./vue-router-67937a96.js";import{k}from"./kumaApi-08f7fc23.js";import{Q as q}from"./QueryParameter-70743f73.js";import{u as L}from"./store-ec4aec64.js";import{_ as A}from"./EmptyBlock.vue_vue_type_script_setup_true_lang-7c04ed58.js";import{E as B}from"./ErrorBlock-04954e92.js";import{_ as V}from"./LoadingBlock.vue_vue_type_script_setup_true_lang-ef489e58.js";import{D as $}from"./DataPlaneList-586111e2.js";import{S as z}from"./ServiceSummary-ea621225.js";import{d as P,h as F,g as I,e as j,f as R,a as d,b as C,F as G,o as c,r as u,s as O}from"./runtime-dom.esm-bundler-fd3ecc5a.js";import"./production-8efaeab1.js";import"./constants-31fdaf55.js";import"./vuex.esm-bundler-4e6e06ec.js";import"./kongponents.es-7ead79da.js";import"./_plugin-vue_export-helper-c27b6911.js";import"./datadogLogEvents-302eea7b.js";import"./ContentWrapper-a5f2521e.js";import"./DataOverview-6ea76f5e.js";import"./StatusBadge-760d0ebe.js";import"./TagList-d36d0a47.js";import"./YamlView.vue_vue_type_script_setup_true_lang-545eb1cb.js";import"./CodeBlock.vue_vue_type_style_index_0_lang-2bd08d1e.js";import"./_commonjsHelpers-edff4021.js";import"./toYaml-4e00099e.js";const Q={class:"component-frame"},W=P({__name:"ServiceDetails",props:{service:{type:Object,required:!0},externalService:{type:Object,required:!1,default:null},dataPlaneOverviews:{type:Array,required:!1,default:null},dppFilterFields:{type:Object,required:!0},selectedDppName:{type:String,required:!1,default:null}},emits:["load-dataplane-overviews"],setup(f,{emit:g}){const a=f;function e(w,t){var o;(((o=a.service.serviceType)==null?void 0:o.startsWith("gateway"))??!1)||delete t.gateway,g("load-dataplane-overviews",w,t)}return(w,t)=>{var n;return c(),F(G,null,[I("div",Q,[j(z,{service:a.service,"external-service":f.externalService},null,8,["service","external-service"])]),R(),a.dataPlaneOverviews!==null?(c(),d($,{key:0,class:"mt-4","data-plane-overviews":a.dataPlaneOverviews,"dpp-filter-fields":a.dppFilterFields,"selected-dpp-name":a.selectedDppName,"is-gateway-view":((n=a.dataPlaneOverviews[0])==null?void 0:n.dataplane.networking.gateway)!==void 0,onLoadData:e},null,8,["data-plane-overviews","dpp-filter-fields","selected-dpp-name","is-gateway-view"])):C("",!0)],64)}}}),J={class:"service-details"},ye=P({__name:"ServiceDetailView",props:{selectedDppName:{type:String,required:!1,default:null}},setup(f){const g=f,a={name:{description:"filter by name or parts of a name"},protocol:{description:"filter by “kuma.io/protocol” value"},tag:{description:"filter by tags (e.g. “tag: version:2”)"},zone:{description:"filter by “kuma.io/zone” value"}},e=T(),w=L(),t=u(null),n=u(null),o=u(null),_=u(!0),y=u(null);O(()=>e.params.mesh,function(){e.name==="service-detail-view"&&h(0)}),O(()=>e.params.name,function(){e.name==="service-detail-view"&&h(0)});function N(){w.dispatch("updatePageTitle",e.params.service);const r=q.get("filterFields"),l=r!==null?JSON.parse(r):{};h(0,l)}N();async function h(r,l={}){_.value=!0,y.value=null,t.value=null,n.value=null,o.value=null;const p=e.params.mesh,v=e.params.service;try{t.value=await k.getServiceInsight({mesh:p,name:v}),t.value.serviceType==="external"?n.value=await k.getExternalService({mesh:p,name:v}):await x(r,l)}catch(s){s instanceof Error?y.value=s:console.error(s)}finally{_.value=!1}}async function x(r,l){const p=e.params.mesh,v=e.params.service;try{const s=b(v,r,l),i=await k.getAllDataplaneOverviewsFromMesh({mesh:p},s);o.value=i.items??[]}catch{o.value=null}}function b(r,l,p){const s=`kuma.io/service:${r}`,i={...p,offset:l,size:50};if(i.tag){const D=Array.isArray(i.tag)?i.tag:[i.tag],S=[];for(const[m,E]of D.entries())E.startsWith("kuma.io/service:")&&S.push(m);for(let m=S.length-1;m===0;m--)D.splice(S[m],1);i.tag=D.concat(s)}else i.tag=s;return i}return(r,l)=>(c(),F("div",J,[_.value?(c(),d(V,{key:0})):y.value!==null?(c(),d(B,{key:1,error:y.value},null,8,["error"])):t.value===null?(c(),d(A,{key:2})):(c(),d(W,{key:3,service:t.value,"data-plane-overviews":o.value,"external-service":n.value,"dpp-filter-fields":a,"selected-dpp-name":g.selectedDppName,onLoadDataplaneOverviews:x},null,8,["service","data-plane-overviews","external-service","selected-dpp-name"]))]))}});export{ye as default};
