import{d as x,r as a,o as R,p as k,w as o,b as n,e as d,m as V,$ as y}from"./index-Ch1waQC_.js";const E=x({__name:"ConnectionsStatsView",props:{networking:{},routeName:{}},setup(c){const r=c;return(X,s)=>{const p=a("RouteTitle"),i=a("XAction"),l=a("XCodeBlock"),m=a("DataLoader"),u=a("XCard"),_=a("AppView"),g=a("RouteView");return R(),k(g,{name:r.routeName,params:{mesh:"",dataPlane:"",codeSearch:"",codeFilter:!1,codeRegExp:!1}},{default:o(({route:e,t:f,uri:C})=>[n(p,{render:!1,title:f("data-planes.routes.item.navigation.data-plane-stats-view")},null,8,["title"]),s[1]||(s[1]=d()),n(_,null,{default:o(()=>[n(u,null,{default:o(()=>[n(m,{src:C(V(y),"/meshes/:mesh/dataplanes/:name/stats/:address",{mesh:e.params.mesh,name:e.params.dataPlane,address:r.networking.inboundAddress})},{default:o(({data:h,refresh:w})=>[n(l,{language:"json",code:h.raw,"is-searchable":"",query:e.params.codeSearch,"is-filter-mode":e.params.codeFilter,"is-reg-exp-mode":e.params.codeRegExp,onQueryChange:t=>e.update({codeSearch:t}),onFilterModeChange:t=>e.update({codeFilter:t}),onRegExpModeChange:t=>e.update({codeRegExp:t})},{"primary-actions":o(()=>[n(i,{action:"refresh",appearance:"primary",onClick:w},{default:o(()=>s[0]||(s[0]=[d(`
                Refresh
              `)])),_:2},1032,["onClick"])]),_:2},1032,["code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])]),_:2},1032,["src"])]),_:2},1024)]),_:2},1024)]),_:1},8,["name"])}}});export{E as default};
