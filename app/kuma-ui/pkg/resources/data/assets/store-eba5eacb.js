var q=Object.defineProperty;var J=(e,t,s)=>t in e?q(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s;var g=(e,t,s)=>(J(e,typeof t!="symbol"?t+"":t,s),s);import{c as Q,u as X}from"./vuex.esm-bundler-df5bd11e.js";import{a as O,D as R}from"./constants-31fdaf55.js";const ee="modulepreload",te=function(e,t){return e.startsWith(".")?new URL(e,t).href:e},b={},l=function(t,s,n){if(!s||s.length===0)return t();const a=document.getElementsByTagName("link");return Promise.all(s.map(i=>{if(i=te(i,n),i in b)return;b[i]=!0;const r=i.endsWith(".css"),o=r?'[rel="stylesheet"]':"";if(!!n)for(let p=a.length-1;p>=0;p--){const f=a[p];if(f.href===i&&(!r||f.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${i}"]${o}`))return;const u=document.createElement("link");if(u.rel=r?"stylesheet":ee,r||(u.as="script",u.crossOrigin=""),u.href=i,document.head.appendChild(u),r)return new Promise((p,f)=>{u.addEventListener("load",p),u.addEventListener("error",()=>f(new Error(`Unable to preload CSS for ${i}`)))})})).then(()=>t())};function H(e,t,s=void 0){if(typeof e!="object"||Array.isArray(e))return s;const n=t.indexOf(".");if(n===-1)return e[t]===void 0?s:e[t];const a=t.substring(0,n),i=t.substring(n+1);return H(e[a],i,s)}const se=new Intl.DateTimeFormat("en-US",{dateStyle:"long"}),ne=new Intl.DateTimeFormat("en-US",{dateStyle:"long",timeStyle:"medium"});function ae(e){const t=new Date(Date.parse(e)),s=Math.floor((Date.now()-t.getTime())/1e3);return s<=1?"just now":s<20?`${s} seconds ago`:s<40?"half a minute ago":s<60?"less than a minute ago":s<=90?"one minute ago":s<=3540?`${Math.round(s/60)} minutes ago`:s<=5400?"1 hour ago":s<=86400?`${Math.round(s/3600)} hours ago`:s<=129600?"1 day ago":s<604800?`${Math.round(s/86400)} days ago`:s<=777600?"1 week ago":se.format(t)}function It(e){const t=new Date(Date.parse(e));return ne.format(t)}function yt(e,t){const s=e&&typeof e=="object"&&e.constructor===Array?Object.assign({},...e):e;return t.reduce((n,a)=>({...n,[a]:s[a]}),{})}function At(e){const{creationTime:t,modificationTime:s,...n}=e;return n}function Ot(e){const t=e.replace(/[^a-zA-Z0-9 -]/g,"").replace(/\s+/g,"-").replace(/-+/g,"-").trim();return e?t:""}async function T(e){try{let t=null,s=0,n=[];for(;;){const a={size:O,offset:s},{total:i,items:r,next:o}=await e(a);if(Array.isArray(r)&&(n=n.concat(r)),t===null&&(t=i),i!==t)throw new Error('Mismatch between "total" values between requests');if(!o)break;s+=O}return{total:t,items:n}}catch(t){throw new Error(`Resource fetching failed: ${t}`)}}function Ct(e){var s;const t=((s=e==null?void 0:e.zoneInsight)==null?void 0:s.subscriptions.length)??0;if(t&&e.zoneInsight.subscriptions[t-1].config){const n=JSON.parse(e.zoneInsight.subscriptions[t-1].config);return H(n,"dpServer.auth.type",R)}return R}function Dt(e){let t=[];e.networking.inbound&&(t=e.networking.inbound.filter(n=>"tags"in n).flatMap(n=>Object.entries(n.tags)).map(([n,a])=>`${n}=${a}`)),e.networking.gateway&&(t=Object.entries(e.networking.gateway.tags).map(([n,a])=>`${n}=${a}`));const s=Array.from(new Set(t));return s.sort((n,a)=>n.localeCompare(a)),s.map(n=>n.split("=")).map(([n,a])=>({label:n,value:a}))}function F(e={subscriptions:[]}){return(e.subscriptions??[]).some(s=>{var n;return((n=s.connectTime)==null?void 0:n.length)&&!s.disconnectTime})?"online":"offline"}function Mt(e,t={subscriptions:[]}){const s=e.networking.inbound??[],n=s.filter(i=>i.health&&!i.health.ready).map(i=>`Inbound on port ${i.port} is not ready (kuma.io/service: ${i.tags["kuma.io/service"]})`);let a;switch(!0){case s.length===0:a="online";break;case n.length===s.length:a="offline";break;case n.length>0:a="partially_degraded";break;default:a=F(t)}return{status:a,reason:n}}function wt(e){if(e===void 0||e.subscriptions.length===0)return null;const t={},s=e.subscriptions[e.subscriptions.length-1];return s.version===void 0?null:(s.version.envoy&&(t.envoy=s.version.envoy.version),s.version.kumaDp&&(t.kumaDp=s.version.kumaDp.version),s.version.dependencies&&Object.entries(s.version.dependencies).forEach(([n,a])=>{t[n]=a}),t)}function Pt(e){if(e.dataplaneInsight===void 0||e.dataplaneInsight.mTLS===void 0)return null;const{mTLS:t}=e.dataplaneInsight,s=new Date(t.certificateExpirationTime),n=new Date(s.getTime()+s.getTimezoneOffset()*6e4);return{certificateExpirationTime:{label:"Expiration Time",value:`${n.toLocaleDateString("en-US")} ${n.getHours()}:${n.getMinutes()}:${n.getSeconds()}`},lastCertificateRegeneration:{label:"Last Generated",value:ae(t.lastCertificateRegeneration)},certificateRegenerations:{label:"Regenerations",value:t.certificateRegenerations}}}function Rt(e){var n,a;return((n=e.kumaDp)==null?void 0:n.kumaCpCompatible)??!0?((a=e.envoy)==null?void 0:a.kumaDpCompatible)??!0?{kind:ie}:{kind:oe,payload:{envoy:e.envoy.version,kumaDp:e.kumaDp.version}}:{kind:re,payload:{kumaDp:e.kumaDp.version}}}const ie="COMPATIBLE",bt="INCOMPATIBLE_ZONE_CP_AND_KUMA_DP_VERSIONS",Lt="INCOMPATIBLE_ZONE_AND_GLOBAL_CPS_VERSIONS",re="INCOMPATIBLE_UNSUPPORTED_KUMA_DP",oe="INCOMPATIBLE_UNSUPPORTED_ENVOY",Nt="INCOMPATIBLE_WRONG_FORMAT";class le extends Error{constructor({title:s=null,message:n,code:a=null,statusCode:i,causes:r=[]}){super(n);g(this,"title");g(this,"code");g(this,"causes");g(this,"statusCode");this.name="ApiError",this.title=s,this.code=a,this.statusCode=i,this.causes=r}toJSON(){return{name:this.name,title:this.title,message:this.message,code:this.code,statusCode:this.statusCode,causes:this.causes}}}async function ce(e,t={}){var u;const s=t,n=s.method??"GET";s.headers=s.headers instanceof Headers?s.headers:new Headers(s.headers),!s.headers.has("content-type")&&["POST","PUT","PATCH"].includes(n)&&s.headers.set("content-type","application/json");let a=e;"params"in t&&(n==="GET"?a+=`?${new URLSearchParams(t.params).toString()}`:(u=s.headers.get("content-type"))!=null&&u.startsWith("application/json")&&(s.body=JSON.stringify(t.params)));let i;try{i=await fetch(a,s)}catch(p){throw ue(p)}const r=i.headers.get("content-type"),h=(r!==null?r.startsWith("application/json"):!1)?await i.json():await i.text();if(i.ok)return{response:i,data:h};throw he(i,h)}function ue(e){const t=e instanceof Error?e.message:"An unknown network error occurred.";return new Error(t)}function he(e,t){let s=null,n="An error has occurred while trying to load this data.",a=null,i=[];return typeof t=="string"&&t.length>0?n=t:t&&(Object.prototype.hasOwnProperty.call(t,"title")&&(s=t.title),Object.prototype.hasOwnProperty.call(t,"details")&&(n=t.details),Object.prototype.hasOwnProperty.call(t,"code")&&(a=t.code),Object.prototype.hasOwnProperty.call(t,"causes")&&Array.isArray(t.causes)&&(i=t.causes)),e.status===403&&(n="You currently donâ€™t have access to this data."),new le({title:s,message:n,code:a,causes:i,statusCode:e.status})}const L=window.location.origin;class pe{constructor(){g(this,"_baseUrl",L)}get baseUrl(){return this._baseUrl}set baseUrl(t){if(t.startsWith("http"))this._baseUrl=G(t);else{const s=me(t);this._baseUrl=[L,s].filter(n=>n!=="").join("/")}}async get(t,s){const n=N(s);n.method="GET";const{data:a}=await this.raw(t,n);return a}async raw(t,s){const n=N(s),a=t.startsWith("http")?t:[this.baseUrl,t].join("/");return ce(a,n)}}function G(e){return e.replace(/\/+$/,"")}function ge(e){return e.replace(/^\/+/,"")}function me(e){return G(ge(e))}function N(e){const t=e??{};if(t.params&&!Array.isArray(t.params)){const s=[];for(const[n,a]of Object.entries(t.params))if(a!==void 0)if(Array.isArray(a))for(const i of a)s.push([n,i]);else s.push([n,a]);t.params=s}return t}var y=new Map,x=new Map,de=new Map,E;(function(e){e[e.Constant=0]="Constant",e[e.Instance=1]="Instance",e[e.Factory=2]="Factory"})(E||(E={}));var m;(function(e){e[e.Container=0]="Container",e[e.Resolution=1]="Resolution",e[e.Singleton=2]="Singleton",e[e.Transient=3]="Transient"})(m||(m={}));var _e=class{constructor(e){this.impl=e,this.type=E.Constant}},Ee=class{constructor(e){this.impl=e,this.type=E.Factory}},ve=e=>e.type===E.Factory,I=class{constructor(e){this.impl=e,this.type=E.Instance}},fe=class extends I{constructor(){super(...arguments),this.scope=m.Container,this.cache=new WeakMap}},Te=class extends I{constructor(){super(...arguments),this.scope=m.Resolution}},Se=class extends I{constructor(e){super(e),this.impl=e,this.scope=m.Singleton}},Ie=class extends I{constructor(){super(...arguments),this.scope=m.Transient}},ye=e=>e.type===E.Instance,Ae=e=>e.scope===m.Container,Oe=e=>e.scope===m.Resolution,Ce=e=>e.scope===m.Singleton,De=e=>Symbol(e),B=e=>{const t=Symbol(e);return{__t:null,__d:e,__s:t,__o:!1,optional:{__t:null,__d:e,__s:t,__o:!0}}},v=class{constructor(){this.parent=null,this.map=new Map}set(e,t,s=v.notag){const n=this.map.get(t.__s);n?n.set(s,e):this.map.set(t.__s,new Map().set(s,e))}find(e,t,s){const n=this.map.get(e.__s);if(n!==void 0){if(s){const a=n.get(s);if(a)return a}if(t)for(let a=0,i=t.length;a<i;a+=1){const r=n.get(t[a]);if(r)return r}return n.get(v.notag)}}resolve(e,t,s,n){const a=this.find(e,s,n);return a===void 0?this.parent?this.parent.resolve(e,t,s,n):null:a instanceof v?(t.vaults.push(a),a.resolve(e,t,s,n)):a}get(e,t,s,n){const a=this.resolve(e,t,s,n);if(a)return a;for(let i=0,r=t.vaults,o=r.length;i<o;i+=1){const h=r[i].resolve(e,t,s,n);if(h)return h}return null}from(e){const t=new v;return t.parent=this.parent,this.map.forEach((s,n)=>{t.map.set(n,e(s))}),t}clone(){return this.from(e=>new Map(e))}},z=v;z.notag=De("NO_TAG");var Me=class{constructor(e,t,s,n){this.vault=e,this.tokens=t,this.getVault=s,this.condition=n}from(e){const{tokens:t}=this;for(let s=0,n=t.length;s<n;s+=1)this.vault.set(this.getVault(e),t[s],this.condition)}},we=class{constructor(e,t,s,n){this.vault=e,this.impl=t,this.token=s,this.condition=n}inContainerScope(){this.set(fe)}inResolutionScope(){this.set(Te)}inSingletonScope(){this.set(Se)}inTransientScope(){this.set(Ie)}set(e){this.vault.set(new e(this.impl),this.token,this.condition)}},Pe=class{constructor(e,t,s){this.vault=e,this.token=t,this.condition=s}toConstant(e){this.vault.set(new _e(e),this.token,this.condition)}toFactory(e,t){this.vault.set(new Ee({creator:e,initializer:t}),this.token,this.condition)}toInstance(e){return new we(this.vault,e,this.token,this.condition)}},C=class{constructor(e,t){this.vault=e,this.condition=t}static vault(e){return e.vault}bind(e){return new Pe(this.vault,e,this.condition)}use(...e){return new Me(this.vault,e,C.vault,this.condition)}},Re=class extends C{when(e){return new C(this.vault,e)}},be=class extends Re{constructor(){super(new z)}},K=class{constructor(e=new Map,t=[]){this.instances=e,this.vaults=t}split(){return new K(this.instances,this.vaults.slice())}},S=class extends be{constructor(){super(),this.snapshot=null}extend(e){return this.vault.parent=e===null?null:e.vault,this}clone(){const e=new S;return e.vault=this.vault.clone(),e}get(e,t){return this.resolveToken(e,t)}resolveTokens(e,t,s,n){return e.map(a=>this.resolveToken(a,s,n,t.split()))}resolveToken(e,t,s,n=new K){const a=this.vault.get(e,n,t,s);if(a)return this.resolveBinding(a,n);if(!e.__o)throw new Error(`No matching bindings found for '${e.__d}' token.`)}resolveBinding(e,t){return ye(e)?Ce(e)?this.resolveCache(e,t,()=>e.cache,s=>{e.cache=s}):Ae(e)?this.resolveCache(e,t,()=>e.cache.get(this.vault),s=>{e.cache.set(this.vault,s)}):Oe(e)?this.resolveCache(e,t,()=>t.instances.get(e),s=>{t.instances.set(e,s)}):this.createInstance(e.impl,t):ve(e)?(...s)=>{const n=this.createInstance(e.impl.creator,t);return n instanceof Promise?n.then(a=>S.resolveInitialization(a,s,e.impl.initializer)):S.resolveInitialization(n,s,e.impl.initializer)}:e.impl}resolveCache(e,t,s,n){const a=s();if(a!==void 0)return a;const i=this.createInstance(e.impl,t);return n(i),i}createInstance(e,t){const s=this.getParameters(e,t),n=y.get(e);if(n!==void 0)return n?e(...s):new e(...s);try{const a=e(...s);return y.set(e,!0),a}catch{const i=new e(...s);return y.set(e,!1),i}}getParameters(e,t){const s=x.get(e);if(s)return this.resolveTokens(s,t,de.get(e),e);if(e.length===0)return[];throw new Error(`Missing required 'injected' registration of '${e.name}'`)}static resolveInitialization(e,t,s){const n=s==null?void 0:s(e,...t);return n instanceof Promise?n.then(()=>e):e}},Le=()=>new S,Ne=(e,...t)=>(x.set(e,t),e);const D=Le(),M=e=>D.get(e),Vt=(...e)=>e.map(t=>()=>M(t)),A=(e,t)=>{const s=B(t.description);return D.bind(s).toInstance(e).inSingletonScope(),s},Ve=(e,t)=>{const s=B(t.description);return D.bind(s).toConstant(e),s},Ue={baseGuiPath:"",apiUrl:"/",version:"1.7.0"};class Z{constructor(t){g(this,"env");let s=t;const n=(r,o="")=>this.var(r,(s==null?void 0:s[r])??o),a=ke(),i=$e(n("KUMA_VERSION",a.version));s={...s,KUMA_UTM_QUERY_PARAMS:`utm_source=${n("KUMA_PRODUCT_NAME")}&utm_medium=${n("KUMA_PRODUCT_NAME")}-GUI`},this.env={...s,KUMA_INSTALL_URL:`${n("KUMA_INSTALL_URL")}?${n("KUMA_UTM_QUERY_PARAMS")}`,KUMA_DOCS_URL:`${n("KUMA_DOCS_URL")}/${i.patch==="0.0.0"?"dev":i.patch.replace(/\.\d+$/,".x")}`,KUMA_VERSION:i.pre,KUMA_API_URL:n("KUMA_API_URL")??a.apiUrl,KUMA_BASE_PATH:n("KUMA_BASE_PATH")??a.baseGuiPath}}var(t,s=""){var n;return((n=this.env)==null?void 0:n[t])??s}}function $e(e){const[t,s,...n]=e.split("."),[a,i]=n.join(".").split("-");return{major:t,minor:`${t}.${s}`,patch:`${t}.${s}.${a}`,pre:`${t}.${s}.${a}${i!==void 0?`-${i}`:""}`}}function ke(){const e=document.querySelector("#kuma-config");if(e instanceof HTMLScriptElement)try{return JSON.parse(e.innerText.trim())}catch{}return Ue}function _(e,t=0){const s=He(e);return s!==void 0?parseInt(s):t}function He(e){const t=Array.isArray(e)?e:[e];return t[t.length-1]??void 0}const Fe=e=>[{path:"/404",name:"not-found",alias:"/:pathMatch(.*)*",meta:{title:"Item not found"},component:()=>l(()=>import("./AppNotFoundView-e9e6dbb1.js"),[],import.meta.url)},{path:"/",name:"home",meta:{title:"Overview"},component:()=>l(()=>import("./MainOverviewView-01df3c50.js"),["./MeshResources-b0bd4417.css","./MainOverviewView-e4354112.css"],import.meta.url)},{path:"/diagnostics",name:"diagnostics",meta:{title:"Diagnostics"},component:()=>l(()=>import("./DiagnosticsView-393a0ecc.js"),["./CodeBlock-7d9027b4.css"],import.meta.url)},{path:"/zones",name:"zones",meta:{title:"Zones"},props:t=>({selectedZoneName:t.query.zone,offset:_(t.query.offset)}),component:()=>l(()=>import("./ZonesView-1ec043af.js"),["./AccordionItem-2e8063db.css","./CodeBlock-7d9027b4.css","./ErrorBlock-8c979915.css","./StatusBadge-43351938.css","./TagList-27d87a7b.css","./DataOverview-cc37ba93.css","./LabelList-82c1e9de.css","./SubscriptionHeader-da67a0ee.css","./TabsWidget-4d82abdb.css"],import.meta.url)},{path:"/zone-ingresses",name:"zoneingresses",meta:{title:"Zone ingresses"},props:t=>({selectedZoneIngressName:t.query.zoneIngress,offset:_(t.query.offset)}),component:()=>l(()=>import("./ZoneIngresses-a1d02c4c.js"),["./AccordionItem-2e8063db.css","./ErrorBlock-8c979915.css","./StatusBadge-43351938.css","./TagList-27d87a7b.css","./DataOverview-cc37ba93.css","./CodeBlock-7d9027b4.css","./EnvoyData-55ab94cb.css","./LabelList-82c1e9de.css","./SubscriptionHeader-da67a0ee.css","./TabsWidget-4d82abdb.css"],import.meta.url)},{path:"/zoneegresses",name:"zoneegresses",meta:{title:"Zone egresses"},props:t=>({selectedZoneEgressName:t.query.zoneEgress,offset:_(t.query.offset)}),component:()=>l(()=>import("./ZoneEgresses-70f11371.js"),["./AccordionItem-2e8063db.css","./ErrorBlock-8c979915.css","./StatusBadge-43351938.css","./TagList-27d87a7b.css","./DataOverview-cc37ba93.css","./CodeBlock-7d9027b4.css","./EnvoyData-55ab94cb.css","./LabelList-82c1e9de.css","./SubscriptionHeader-da67a0ee.css","./TabsWidget-4d82abdb.css"],import.meta.url)},{path:"/mesh/:mesh",children:[{path:"",name:"mesh-detail-view",meta:{title:"Mesh overview"},component:()=>l(()=>import("./MeshOverviewView-bf08df14.js"),["./ContentWrapper-fe2d0f8d.css","./MeshResources-b0bd4417.css","./ErrorBlock-8c979915.css","./LabelList-82c1e9de.css","./CodeBlock-7d9027b4.css","./MeshOverviewView-a199dee5.css"],import.meta.url)},{path:"gateways",children:[{path:"",name:"gateway-list-view",meta:{title:"Gateways"},props:t=>({selectedDppName:t.query.gateway,gatewayType:t.query.gatewayType==="all"?"true":t.query.gatewayType,offset:_(t.query.offset),isGatewayView:!0}),component:()=>l(()=>import("./DataPlaneListView-7457f6fa.js"),["./ContentWrapper-fe2d0f8d.css","./ErrorBlock-8c979915.css","./StatusBadge-43351938.css","./TagList-27d87a7b.css","./DataOverview-cc37ba93.css","./CodeBlock-7d9027b4.css","./DataPlaneList-d74cf059.css","./DataPlaneListView-c9bf2e34.css"],import.meta.url)},{path:":dataPlane",name:"gateway-detail-view",meta:{title:"Gateway",parent:"gateway-list-view",breadcrumbTitleParam:"dataPlane"},component:()=>l(()=>import("./DataPlaneDetailView-50d823ec.js"),["./AccordionItem-2e8063db.css","./CodeBlock-7d9027b4.css","./TagList-27d87a7b.css","./ErrorBlock-8c979915.css","./EnvoyData-55ab94cb.css","./LabelList-82c1e9de.css","./StatusBadge-43351938.css","./TabsWidget-4d82abdb.css","./SubscriptionHeader-da67a0ee.css","./DataPlaneDetailView-230a138b.css"],import.meta.url)}]},{path:"data-planes",children:[{path:"",name:"data-plane-list-view",meta:{title:"Data plane proxies"},props:t=>({selectedDppName:t.query.dpp,offset:_(t.query.offset)}),component:()=>l(()=>import("./DataPlaneListView-7457f6fa.js"),["./ContentWrapper-fe2d0f8d.css","./ErrorBlock-8c979915.css","./StatusBadge-43351938.css","./TagList-27d87a7b.css","./DataOverview-cc37ba93.css","./CodeBlock-7d9027b4.css","./DataPlaneList-d74cf059.css","./DataPlaneListView-c9bf2e34.css"],import.meta.url)},{path:":dataPlane",name:"data-plane-detail-view",meta:{title:"Data plane proxy",parent:"data-plane-list-view",breadcrumbTitleParam:"dataPlane"},component:()=>l(()=>import("./DataPlaneDetailView-50d823ec.js"),["./AccordionItem-2e8063db.css","./CodeBlock-7d9027b4.css","./TagList-27d87a7b.css","./ErrorBlock-8c979915.css","./EnvoyData-55ab94cb.css","./LabelList-82c1e9de.css","./StatusBadge-43351938.css","./TabsWidget-4d82abdb.css","./SubscriptionHeader-da67a0ee.css","./DataPlaneDetailView-230a138b.css"],import.meta.url)}]},{path:"services",children:[{path:"",name:"service-list-view",meta:{title:"Services"},props:t=>({selectedServiceName:t.query.service,offset:_(t.query.offset)}),component:()=>l(()=>import("./ServiceListView-dfa51e1f.js"),["./ContentWrapper-fe2d0f8d.css","./ErrorBlock-8c979915.css","./StatusBadge-43351938.css","./TagList-27d87a7b.css","./DataOverview-cc37ba93.css","./CodeBlock-7d9027b4.css","./ServiceSummary-af890f41.css"],import.meta.url)},{path:":service",name:"service-detail-view",meta:{title:"Internal service",parent:"service-list-view",breadcrumbTitleParam:"service"},props:t=>({selectedDppName:t.query.dpp}),component:()=>l(()=>import("./ServiceDetailView-88c08d4a.js"),["./ErrorBlock-8c979915.css","./ContentWrapper-fe2d0f8d.css","./StatusBadge-43351938.css","./TagList-27d87a7b.css","./DataOverview-cc37ba93.css","./CodeBlock-7d9027b4.css","./DataPlaneList-d74cf059.css","./ServiceSummary-af890f41.css"],import.meta.url)}]},{path:"policies",name:"policies",meta:{title:"Policies"},redirect:t=>{let s=e.state.policyTypes.find(n=>e.state.sidebar.insights.mesh.policies[n.name]!==0);return s===void 0&&(s=e.state.policyTypes[0]),{...t,params:{...t.params,policyPath:s.path},name:"policy"}}},{path:"policies/:policyPath",name:"policy",meta:{parent:"policies"},component:()=>l(()=>import("./PolicyView-a7c5cc77.js"),["./ErrorBlock-8c979915.css","./StatusBadge-43351938.css","./TagList-27d87a7b.css","./DataOverview-cc37ba93.css","./LabelList-82c1e9de.css","./TabsWidget-4d82abdb.css","./CodeBlock-7d9027b4.css","./PolicyView-143a82ea.css"],import.meta.url),props:t=>{const s=e.state.policyTypesByPath[t.params.policyPath];return t.meta.title=s.name,{policyPath:t.params.policyPath,selectedPolicyName:t.query.policy,offset:_(t.query.offset)}}}]},{path:"/onboarding",redirect:{name:"onboarding-welcome"},component:()=>l(()=>import("./ShellEmpty-bbe8ea02.js"),["./ShellEmpty-6642bce4.css"],import.meta.url),children:[{path:"welcome",name:"onboarding-welcome",meta:{title:"Welcome to Kuma!",onboardingProcess:!0},component:()=>l(()=>import("./WelcomeView-f51e87f7.js"),["./OnboardingNavigation-8e0e24c9.css","./WelcomeView-81c1745d.css"],import.meta.url)},{path:"deployment-types",name:"onboarding-deployment-types",meta:{title:"Deployment Types",onboardingProcess:!0},component:()=>l(()=>import("./DeploymentTypes-eda87d9d.js"),["./OnboardingNavigation-8e0e24c9.css","./OnboardingPage-b97c066f.css","./DeploymentTypes-a5506858.css"],import.meta.url)},{path:"configuration-types",name:"onboarding-configuration-types",meta:{title:"Configuration Types",onboardingProcess:!0},component:()=>l(()=>import("./ConfigurationTypes-2f72beee.js"),["./OnboardingNavigation-8e0e24c9.css","./OnboardingPage-b97c066f.css","./ConfigurationTypes-3e295b7d.css"],import.meta.url)},{path:"multi-zone",name:"onboarding-multi-zone",meta:{title:"Multizone",onboardingProcess:!0},component:()=>l(()=>import("./MultiZoneView-2e8817fb.js"),["./LoadingBox-c2da9e95.css","./OnboardingNavigation-8e0e24c9.css","./OnboardingPage-b97c066f.css"],import.meta.url)},{path:"create-mesh",name:"onboarding-create-mesh",meta:{title:"Create the Mesh",onboardingProcess:!0},component:()=>l(()=>import("./CreateMesh-52ef7c88.js"),["./OnboardingNavigation-8e0e24c9.css","./OnboardingPage-b97c066f.css"],import.meta.url)},{path:"add-services",name:"onboarding-add-services",meta:{title:"Add new services",onboardingProcess:!0},component:()=>l(()=>import("./AddNewServices-8e40d03c.js"),["./OnboardingNavigation-8e0e24c9.css","./OnboardingPage-b97c066f.css","./AddNewServices-1b605ca2.css"],import.meta.url)},{path:"add-services-code",name:"onboarding-add-services-code",meta:{title:"Add new services",onboardingProcess:!0},component:()=>l(()=>import("./AddNewServicesCode-56994bec.js"),["./CodeBlock-7d9027b4.css","./LoadingBox-c2da9e95.css","./OnboardingNavigation-8e0e24c9.css","./OnboardingPage-b97c066f.css"],import.meta.url)},{path:"dataplanes-overview",name:"onboarding-dataplanes-overview",meta:{title:"Data plane overview",onboardingProcess:!0},component:()=>l(()=>import("./DataplanesOverview-d65ccb70.js"),["./LoadingBox-c2da9e95.css","./StatusBadge-43351938.css","./OnboardingNavigation-8e0e24c9.css","./OnboardingPage-b97c066f.css","./DataplanesOverview-0c89c176.css"],import.meta.url)},{path:"completed",name:"onboarding-completed",meta:{title:"Completed",onboardingProcess:!0},component:()=>l(()=>import("./CompletedView-ca590809.js"),["./OnboardingNavigation-8e0e24c9.css","./OnboardingPage-b97c066f.css"],import.meta.url)}]},{path:"/wizard",name:"wizard",children:[{path:"mesh",name:"create-mesh",meta:{title:"Create a new mesh",wizardProcess:!0},component:()=>l(()=>import("./MeshWizard-26864158.js"),["./CodeBlock-7d9027b4.css","./StepSkeleton-4161d6eb.css","./ErrorBlock-8c979915.css","./TabsWidget-4d82abdb.css","./MeshWizard-bd986a8d.css"],import.meta.url)},{path:"kubernetes-dataplane",name:"kubernetes-dataplane",meta:{title:"Create a new data plane proxy on Kubernetes",wizardProcess:!0},component:()=>l(()=>import("./DataplaneKubernetes-a2d2f70d.js"),["./CodeBlock-7d9027b4.css","./StepSkeleton-4161d6eb.css","./EnvironmentSwitcher-8d17c23e.css","./DataplaneKubernetes-bad15b66.css"],import.meta.url)},{path:"universal-dataplane",name:"universal-dataplane",meta:{title:"Create a new data plane proxy on Universal",wizardProcess:!0},component:()=>l(()=>import("./DataplaneUniversal-54e14bd2.js"),["./CodeBlock-7d9027b4.css","./StepSkeleton-4161d6eb.css","./EnvironmentSwitcher-8d17c23e.css","./DataplaneUniversal-451f0c43.css"],import.meta.url)}]}],w={EnvVars:Ve({KUMA_PRODUCT_NAME:"Kuma",KUMA_FEEDBACK_URL:"https://github.com/kumahq/kuma/issues/new/choose",KUMA_CHAT_URL:"https://kuma-mesh.slack.com",KUMA_INSTALL_URL:"https://kuma.io/install/latest/",KUMA_VERSION_URL:"https://kuma.io/latest_version/",KUMA_DOCS_URL:"https://kuma.io/docs"},{description:"EnvVars"}),Env:A(Z,{description:"Env"}),env:A(()=>e=>M(w.Env).var(e),{description:"env"}),routes:A(()=>Fe(vt),{description:"routes"})};Ne(Z,w.EnvVars);const Ge=M(w.Env);class xe{constructor(){g(this,"client");this.client=new pe}get baseUrl(){return this.client.baseUrl}setBaseUrl(t){this.client.baseUrl=t}getInfo(){return this.client.get("")}async getStatus(){try{const{response:t}=await this.client.raw("");return t.status===200?"OK":null}catch{return null}}async getLatestVersion(){return this.client.get(Ge.var("KUMA_VERSION_URL"))}getConfig(){return this.client.get("config")}getPolicyTypes(){return this.client.get("policies")}getGlobalInsights(){return this.client.get("global-insights")}getZones(t){return this.client.get("zones",{params:t})}getZone({name:t},s){return this.client.get(`zones/${t}`,{params:s})}getAllZoneOverviews(t){return this.client.get("zones+insights",{params:t})}getZoneOverview({name:t},s){return this.client.get(`zones+insights/${t}`,{params:s})}getZoneIngressData({zoneIngressName:t,dataPath:s},n){return this.client.get(`zoneingresses/${t}/${s}`,{params:n})}getAllZoneIngressOverviews(t){return this.client.get("zoneingresses+insights",{params:t})}getZoneIngressOverview({name:t},s){return this.client.get(`zoneingresses+insights/${t}`,{params:s})}getZoneEgressData({zoneEgressName:t,dataPath:s},n){return this.client.get(`zoneegresses/${t}/${s}`,{params:n})}getAllZoneEgressOverviews(t){return this.client.get("zoneegressoverviews",{params:t})}getZoneEgressOverview({name:t},s){return this.client.get(`zoneegressoverviews/${t}`,{params:s})}getAllMeshes(t){return this.client.get("meshes",{params:t})}getMesh({name:t},s){return this.client.get(`meshes/${t}`,{params:s})}getAllMeshInsights(t){return this.client.get("mesh-insights",{params:t})}getMeshInsights({name:t},s){return this.client.get(`mesh-insights/${t}`,{params:s})}getAllDataplanes(t){return this.client.get("dataplanes",{params:t})}getDataplaneFromMesh({mesh:t,name:s},n){return this.client.get(`meshes/${t}/dataplanes/${s}`,{params:n})}getAllDataplaneOverviews(t){return this.client.get("dataplanes+insights",{params:t})}getAllDataplaneOverviewsFromMesh({mesh:t},s){return this.client.get(`meshes/${t}/dataplanes+insights`,{params:s})}getDataplaneOverviewFromMesh({mesh:t,name:s},n){return this.client.get(`meshes/${t}/dataplanes+insights/${s}`,{params:n})}getSidecarDataplanePolicies({mesh:t,name:s},n){return this.client.get(`meshes/${t}/dataplanes/${s}/policies`,{params:n})}getMeshGatewayDataplane({mesh:t,name:s},n){return this.client.get(`meshes/${t}/dataplanes/${s}/policies`,{params:n})}getDataplaneRules({mesh:t,name:s},n){return this.client.get(`meshes/${t}/dataplanes/${s}/rules`,{params:n})}getDataplaneData({mesh:t,dppName:s,dataPath:n},a){return this.client.get(`meshes/${t}/dataplanes/${s}/${n}`,{params:a})}getAllServiceInsights(t){return this.client.get("service-insights",{params:t})}getAllServiceInsightsFromMesh({mesh:t},s){return this.client.get(`meshes/${t}/service-insights`,{params:s})}getServiceInsight({mesh:t,name:s},n){return this.client.get(`meshes/${t}/service-insights/${s}`,{params:n})}getAllExternalServices(t){return this.client.get("external-services",{params:t})}getAllExternalServicesFromMesh({mesh:t},s){return this.client.get(`meshes/${t}/external-services`,{params:s})}getExternalService({mesh:t,name:s},n){return this.client.get(`meshes/${t}/external-services/${s}`,{params:n})}getPolicyConnections({mesh:t,policyType:s,policyName:n},a){return this.client.get(`meshes/${t}/${s}/${n}/dataplanes`,{params:a})}getAllPolicyEntities({path:t},s){return this.client.get(t,{params:s})}getAllPolicyEntitiesFromMesh({mesh:t,path:s},n){return this.client.get(`meshes/${t}/${s}`,{params:n})}getSinglePolicyEntity({mesh:t,path:s,name:n},a){return this.client.get(`meshes/${t}/${s}/${n}`,{params:a})}}const c=new xe,Be={status:null,tagline:null,version:null,kumaDocsVersion:"latest",clientConfig:null},ze={SET_CONFIG_DATA:(e,t)=>e.clientConfig=t,SET_STATUS:(e,t)=>e.status=t,SET_TAGLINE:(e,t)=>e.tagline=t,SET_VERSION:(e,t)=>e.version=t,SET_KUMA_DOCS_VERSION:(e,t)=>e.kumaDocsVersion=t},Ke={getStatus:e=>e.status,getConfig:e=>e.clientConfig,getEnvironment:e=>{var t;return(t=e.clientConfig)==null?void 0:t.environment},getMode:e=>{var t;return(t=e.clientConfig)==null?void 0:t.mode},getTagline:e=>e.tagline,getVersion:e=>e.version,getKumaDocsVersion:e=>e.kumaDocsVersion,getConfigurationType:e=>{var t,s;return(s=(t=e.clientConfig)==null?void 0:t.store)==null?void 0:s.type},getMulticlusterStatus:(e,t)=>({}).VITE_FAKE_MULTIZONE==="true"?(console.warn("%c âœ¨You are currently faking Multi-Zone mode.","background: black; color: white; display: block; padding: 0.25rem;"),!0):t.getMode==="global"},Ze={bootstrapConfig({dispatch:e}){const t=e("getInfo"),s=e("getConfig");return Promise.all([t,s])},getConfig({commit:e}){return c.getConfig().then(t=>{e("SET_CONFIG_DATA",t)})},getStatus({commit:e}){return c.getStatus().then(t=>{e("SET_STATUS",t)})},getInfo({commit:e}){return c.getInfo().then(t=>{e("SET_TAGLINE",t.tagline),e("SET_VERSION",t.version);let s;const n=t.basedOnKuma??t.version,a=n.indexOf("-preview.");if(a!==-1){const i=n.substring(0,a);s=i==="0.0.0"?"dev":i.replace(/\.\d+$/,".x")}else s=n.replace(/\.\d+$/,".x");e("SET_KUMA_DOCS_VERSION",s)}).catch(t=>{console.error(t)})}},je={namespaced:!0,state:()=>Be,getters:Ke,mutations:ze,actions:Ze},We={isOpen:!1},Ye={OPEN_MODAL:e=>e.isOpen=!0,CLOSE_MODAL:e=>e.isOpen=!1},qe={meshNotificationItemMap(e,t,s){var i;return(((i=s.meshes)==null?void 0:i.items)||[]).reduce((r,o)=>(r[o.name]={hasLogging:Boolean(o.logging),hasMtls:Boolean(o.mtls),hasMetrics:Boolean(o.metrics),hasTracing:Boolean(o.tracing)},r),{})},meshNotificationItemMapWithAction(e,t){const s=t.meshNotificationItemMap;return Object.entries(s).reduce((n,[a,i])=>(Object.values(i).some(o=>!o)&&(n[a]=i),n),{})},singleMeshNotificationItems(e,t,s,n){if(s.selectedMesh===null)return[];const a=t.meshNotificationItemMap[s.selectedMesh],i=Object.entries(n.getMeshInsight.policies).filter(([o,h])=>["MeshAccessLog","MeshTrace"].includes(o)).some(([o,h])=>h.total>0),r=[{name:"Observability, Metrics & Service Map",component:"MetricsNotification",isCompleted:a.hasMetrics},{name:"Logging",component:"LoggingNotification",isCompleted:a.hasLogging||i},{name:"Zero-trust security",component:"MtlsNotification",isCompleted:a.hasMtls},{name:"Tracing",component:"TracingNotification",isCompleted:a.hasTracing}];return r.sort((o,h)=>+o.isCompleted-+h.isCompleted),r},amountOfActions(e,t){return Object.keys(t.meshNotificationItemMapWithAction).length}},Je={openModal({commit:e}){e("OPEN_MODAL")},closeModal({commit:e}){e("CLOSE_MODAL")}},Qe={namespaced:!0,state:()=>We,getters:qe,mutations:Ye,actions:Je};class Xe{constructor(t){g(this,"storageAdapter");this.storageAdapter=t}get(t){let s;try{s=this.storageAdapter.getItem(t)}catch{return null}if(s===null||!(s.startsWith("[")||s.startsWith("{")))return s;try{return JSON.parse(s)}catch{return s}}set(t,s){try{const n=typeof s=="string"?s:JSON.stringify(s);this.storageAdapter.setItem(t,n)}catch{}}has(t){try{return this.storageAdapter.getItem(t)!==null}catch{return!1}}remove(t){try{this.storageAdapter.removeItem(t)}catch{}}}const d=new Xe(window.localStorage),et={isCompleted:d.get("onboardingIsCompleted")==="true",step:d.get("onboardingStep")||"onboarding-welcome",mode:"demo"},tt={SET_STEP:(e,t)=>e.step=t,SET_IS_COMPLETED:(e,t)=>e.isCompleted=t,UPDATE_MODE:(e,t)=>e.mode=t},st={getMode:e=>e.mode,showOnboarding:(e,t,s)=>{const n=s.meshes.items.length===1&&s.meshes.items[0].name==="default";return s.totalDataplaneCount===0&&n}},nt={completeOnboarding({commit:e,dispatch:t}){t("fetchDataplaneTotalCount",null,{root:!0}),t("sidebar/getInsights",null,{root:!0}),e("SET_IS_COMPLETED",!0),d.set("onboardingIsCompleted","true"),d.remove("onboardingStep")},changeStep({commit:e},t){e("SET_STEP",t),d.set("onboardingStep",t)}},at={namespaced:!0,state:()=>et,getters:st,mutations:tt,actions:nt};function V(e){const t=e.items.reduce((s,{dataplanes:n,dataplanesByType:a,policies:i,services:r})=>{var o,h;s.services.internal+=r.internal||0,s.services.external+=r.external||0,s.services.total+=r.total||0,s.dataplanes.total+=n.total||0,s.dataplanes.standard+=((o=a.standard)==null?void 0:o.total)||0,s.dataplanes.gateway+=((h=a.gateway)==null?void 0:h.total)||0;for(const[u,p]of Object.entries(i))s.policies[u]||(s.policies[u]=0),s.policies[u]+=p.total||0;return s},{services:{total:0,internal:0,external:0},dataplanes:{total:0,standard:0,gateway:0},policies:{}});return t.policies.total=Object.values(t.policies).reduce((s,n)=>s+n,0),t}function it(e){return Object.entries(e.resources).reduce((t,[s,n])=>(t[s]||(t[s]=0),t[s]+=n.total||0,t),{})}const rt={insights:{global:{},mesh:{services:{total:0,internal:0,external:0},dataplanes:{total:0,standard:0,gateway:0},policies:{}}}},ot={SET_GLOBAL_INSIGHTS:(e,t)=>e.insights.global=t,SET_MESH_INSIGHTS:(e,t)=>e.insights.mesh=t},lt={},ct={getInsights({dispatch:e}){return Promise.all([e("getGlobalInsights"),e("getMeshInsights")])},async getMeshInsights({commit:e,rootState:t}){if(t.selectedMesh===null)return;let s=null;try{const n=await c.getMeshInsights({name:t.selectedMesh});s=V({items:[n]})}catch{s=V({items:[]})}e("SET_MESH_INSIGHTS",s),e("SET_OVERVIEW_CHART_DATA",{chartName:"policies",data:[{category:"Policy",value:s.policies.total,tooltipDisabled:!0,labelDisabled:!0}]},{root:!0})},async getGlobalInsights({commit:e}){const t=await c.getGlobalInsights(),s=it(t);e("SET_GLOBAL_INSIGHTS",s)}},ut={namespaced:!0,state:()=>rt,getters:lt,mutations:ot,actions:ct},j=(e={},t={})=>{const s=e.online||0,n=t.online||0,a=e.partiallyDegraded||0,i=t.partiallyDegraded||0,r=e.total||0,o=t.total||0;return{online:s+n,partiallyDegraded:a+i,total:r+o}},P=()=>({CircuitBreaker:{total:0},FaultInjection:{total:0},HealthCheck:{total:0},MeshAccessLog:{total:0},MeshGateway:{total:0},MeshGatewayRoute:{total:0},MeshTrace:{total:0},MeshTrafficPermission:{total:0},ProxyTemplate:{total:0},RateLimit:{total:0},Retry:{total:0},Timeout:{total:0},TrafficLog:{total:0},TrafficPermission:{total:0},TrafficRoute:{total:0},TrafficTrace:{total:0},VirtualOutbound:{total:0}}),ht=(e=P(),t={})=>Object.entries(t).reduce((s,[n,a])=>{const i=s[n]?s[n].total:0;return{...s,[n]:{total:i+a.total}}},e),U=(e={},t={})=>Object.entries(t).reduce((s,[n,a])=>({...s,[n]:j(s[n],a)}),e),pt=(e={},t={})=>({kumaDp:U(e.kumaDp,t.kumaDp),envoy:U(e.envoy,t.envoy)});function W(){return{meshesTotal:0,dataplanes:{online:0,partiallyDegraded:0,total:0},policies:P(),dpVersions:{kumaDp:{},envoy:{}}}}function gt(e={}){return Y([e])}function Y(e=[]){return e.reduce((t,s)=>({meshesTotal:e.length,dataplanes:j(t.dataplanes,s.dataplanes),policies:ht(t.policies,s.policies),dpVersions:pt(t.dpVersions,s.dpVersions)}),{meshesTotal:0,dataplanes:{online:0,partiallyDegraded:0,total:0},policies:P(),dpVersions:{kumaDp:{},envoy:{}}})}const $="Online",k="Offline",mt="Partially degraded",dt={menu:null,globalLoading:!0,pageTitle:"",meshes:{total:0,items:[],next:null},selectedMesh:"default",totalDataplaneCount:0,version:"",itemQueryNamespace:"item",totalClusters:0,serviceSummary:{total:0,internal:{total:0,online:0,offline:0,partiallyDegraded:0},external:{total:0}},overviewCharts:{dataplanes:{data:[]},meshes:{data:[]},services:{data:[]},policies:{data:[]},zones:{data:[]},zonesCPVersions:{data:[]},kumaDPVersions:{data:[]},envoyVersions:{data:[]}},meshInsight:W(),meshInsightsFetching:!1,serviceInsightsFetching:!1,externalServicesFetching:!1,zonesInsightsFetching:!1,policyTypes:[],policyTypesByPath:{},policyTypesByName:{}},_t={modules:{sidebar:ut,config:je,notifications:Qe,onboarding:at},state:()=>dt,getters:{globalLoading:e=>e.globalLoading,getMeshList:e=>e.meshes,getItemQueryNamespace:e=>e.itemQueryNamespace,getMeshInsight:e=>e.meshInsight,getMeshInsightsFetching:e=>e.meshInsightsFetching,getServiceInsightsFetching:e=>e.serviceInsightsFetching,getExternalServicesFetching:e=>e.externalServicesFetching,getResourceFetching:({meshInsightsFetching:e,serviceInsightsFetching:t,externalServicesFetching:s})=>e||t||s,getServiceResourcesFetching:({serviceInsightsFetching:e,externalServicesFetching:t})=>e||t,getChart:({overviewCharts:e})=>t=>e[t],getZonesInsightsFetching:({zonesInsightsFetching:e})=>e},mutations:{SET_GLOBAL_LOADING:(e,{globalLoading:t})=>e.globalLoading=t,SET_PAGE_TITLE:(e,t)=>e.pageTitle=t,SET_MESHES:(e,t)=>e.meshes=t,SET_SELECTED_MESH:(e,t)=>e.selectedMesh=t,SET_TOTAL_DATAPLANE_COUNT:(e,t)=>e.totalDataplaneCount=t,SET_TOTAL_CLUSTER_COUNT:(e,t)=>e.totalClusters=t,SET_INTERNAL_SERVICE_SUMMARY:(e,{items:t=[]}={})=>{const{serviceSummary:s}=e,n=(u,{status:p="offline"})=>({...u,[p]:u[p]+1}),a={online:0,partially_degraded:0,offline:0},{online:i,offline:r,partially_degraded:o}=t.reduce(n,a),h=i+r+o;s.internal={...s.internal,total:h,online:i,partiallyDegraded:o,offline:r},s.total=s.external.total+h},SET_EXTERNAL_SERVICE_SUMMARY:(e,{total:t=0}={})=>{e.serviceSummary.external.total=t,e.serviceSummary.total=e.serviceSummary.internal.total+t},SET_MESH_INSIGHT:(e,t)=>e.meshInsight=gt(t),SET_MESH_INSIGHT_FROM_ALL_MESHES:(e,t)=>e.meshInsight=Y(t.items),SET_ZONES_INSIGHTS_FETCHING:(e,t)=>e.zonesInsightsFetching=t,SET_MESH_INSIGHTS_FETCHING:(e,t)=>e.meshInsightsFetching=t,SET_SERVICE_INSIGHTS_FETCHING:(e,t)=>e.serviceInsightsFetching=t,SET_EXTERNAL_SERVICES_FETCHING:(e,t)=>e.externalServicesFetching=t,SET_OVERVIEW_CHART_DATA:(e,t)=>{const{chartName:s,data:n}=t;e.overviewCharts[s].data=n},SET_POLICY_TYPES:(e,t)=>{t.sort((s,n)=>s.name.localeCompare(n.name)),e.policyTypes=t},SET_POLICY_TYPES_BY_PATH:(e,t)=>e.policyTypesByPath=t,SET_POLICY_TYPES_BY_NAME:(e,t)=>e.policyTypesByName=t},actions:{async bootstrap({commit:e,dispatch:t,getters:s,state:n}){if(e("SET_GLOBAL_LOADING",{globalLoading:!0}),await t("config/getStatus"),s["config/getStatus"]==="OK")if(await Promise.all([t("fetchMeshList"),t("fetchDataplaneTotalCount"),t("config/bootstrapConfig")]),n.meshes.items.length>0){const a=d.get("selectedMesh");let i;if(a!==null){const r=n.meshes.items.find(o=>o.name===a);r!==void 0&&(i=r)}i===void 0&&(i=n.meshes.items[0]),await t("updateSelectedMesh",i.name),await t("sidebar/getInsights")}else await t("updateSelectedMesh",null);e("SET_GLOBAL_LOADING",{globalLoading:!1})},updatePageTitle({commit:e},t){e("SET_PAGE_TITLE",t)},async fetchMeshList({commit:e}){const t={size:O};try{const s=await c.getAllMeshes(t);Array.isArray(s.items)?s.items.sort((n,a)=>n.name==="default"?-1:a.name==="default"?1:n.name.localeCompare(a.name)):s.items=[],e("SET_MESHES",s)}catch(s){console.error(s)}},updateSelectedMesh({commit:e},t){t!==null?d.set("selectedMesh",t):d.remove("selectedMesh"),e("SET_SELECTED_MESH",t)},fetchTotalClusterCount({commit:e}){return c.getZones().then(t=>{const s=t.total;e("SET_TOTAL_CLUSTER_COUNT",s)})},fetchDataplaneTotalCount({commit:e}){const t={size:1};return c.getAllDataplanes(t).then(s=>{const n=s.total;e("SET_TOTAL_DATAPLANE_COUNT",n)}).catch(s=>{console.error(s)})},async fetchMeshInsights({commit:e,dispatch:t},s){e("SET_MESH_INSIGHTS_FETCHING",!0);try{if(s===void 0){const n=await T(c.getAllMeshInsights.bind(c)),a=[];n.items.length>0&&a.push({category:"Mesh",value:n.items.length,tooltipDisabled:!0,labelDisabled:!0}),e("SET_OVERVIEW_CHART_DATA",{chartName:"meshes",data:a}),e("SET_MESH_INSIGHT_FROM_ALL_MESHES",n)}else e("SET_MESH_INSIGHT",await c.getMeshInsights({name:s}))}catch{e("SET_OVERVIEW_CHART_DATA",{chartName:"meshes",data:[]}),e("SET_MESH_INSIGHT",W())}finally{t("setChartsFromMeshInsights")}e("SET_MESH_INSIGHTS_FETCHING",!1)},async fetchServiceInsights({commit:e},t){e("SET_SERVICE_INSIGHTS_FETCHING",!0);try{const s=t===void 0?c.getAllServiceInsights.bind(c):c.getAllServiceInsightsFromMesh.bind(c,{mesh:t});e("SET_INTERNAL_SERVICE_SUMMARY",await T(s))}catch{e("SET_INTERNAL_SERVICE_SUMMARY")}e("SET_SERVICE_INSIGHTS_FETCHING",!1)},async fetchExternalServices({commit:e},t){e("SET_EXTERNAL_SERVICES_FETCHING",!0);try{const s=t===void 0?c.getAllExternalServices.bind(c):c.getAllExternalServicesFromMesh.bind(c,{mesh:t});e("SET_EXTERNAL_SERVICE_SUMMARY",await T(s))}catch{e("SET_EXTERNAL_SERVICE_SUMMARY")}e("SET_EXTERNAL_SERVICES_FETCHING",!1)},async fetchServices({dispatch:e},t){const s=e("fetchExternalServices",t),n=e("fetchServiceInsights",t);await Promise.all([n,s]),await e("setOverviewServicesChartData")},async fetchZonesInsights({commit:e,dispatch:t,getters:s},n=!1){e("SET_ZONES_INSIGHTS_FETCHING",!0);try{if(n){const a=await T(c.getAllZoneOverviews.bind(c));t("setOverviewZonesChartData",a),t("setOverviewZonesCPVersionsChartData",a)}else{const a=[{category:"Zone",value:1,tooltipDisabled:!0,labelDisabled:!0}],i=[{category:s["config/getVersion"],value:1,tooltipDisabled:!0}];e("SET_OVERVIEW_CHART_DATA",{chartName:"zones",data:a}),e("SET_OVERVIEW_CHART_DATA",{chartName:"zonesCPVersions",data:i})}}catch{e("SET_OVERVIEW_CHART_DATA",{chartName:"zones",data:[]}),e("SET_OVERVIEW_CHART_DATA",{chartName:"zonesCPVersions",data:[]})}e("SET_ZONES_INSIGHTS_FETCHING",!1)},async fetchPolicyTypes({commit:e}){const{policies:t}=await c.getPolicyTypes(),s=t.reduce((a,i)=>Object.assign(a,{[i.path]:i}),{}),n=t.reduce((a,i)=>Object.assign(a,{[i.name]:i}),{});e("SET_POLICY_TYPES",t),e("SET_POLICY_TYPES_BY_PATH",s),e("SET_POLICY_TYPES_BY_NAME",n)},setChartsFromMeshInsights({dispatch:e}){e("setOverviewDataplanesChartData"),e("setOverviewKumaDPVersionsChartData"),e("setOverviewEnvoyVersionsChartData")},setOverviewZonesChartData({commit:e},{items:t=[]}){const s=t.length;let n=0;t.forEach(i=>{F(i.zoneInsight)==="online"&&n++});const a=[];s&&(a.push({category:$,value:n}),n!==s&&a.push({category:k,value:s-n})),e("SET_OVERVIEW_CHART_DATA",{chartName:"zones",data:a})},setOverviewServicesChartData({state:e,commit:t}){const{internal:s,external:n}=e.serviceSummary,a=[];s.total&&e.selectedMesh!==null&&a.push({category:"Internal",value:s.total,minSizeForLabel:.16,route:{name:"service-list-view",params:{mesh:e.selectedMesh}}}),n.total&&e.selectedMesh!==null&&a.push({category:"External",value:n.total,minSizeForLabel:.16,route:{name:"service-list-view",params:{mesh:e.selectedMesh}}}),t("SET_OVERVIEW_CHART_DATA",{chartName:"services",data:a})},setOverviewDataplanesChartData({state:e,commit:t}){const s=e.meshInsight.dataplanes.total,n=e.meshInsight.dataplanes.online??0,a=e.meshInsight.dataplanes.partiallyDegraded??0,i=[];s&&(i.push({category:$,value:n}),a&&i.push({category:mt,value:a}),n+a!==s&&i.push({category:k,value:s-a-n})),t("SET_OVERVIEW_CHART_DATA",{chartName:"dataplanes",data:i})},setOverviewZonesCPVersionsChartData({commit:e},{items:t}){const s=t.reduce((n,a)=>{const{subscriptions:i}=a.zoneInsight;if(!i.length)return n;const{version:r}=a.zoneInsight.subscriptions.pop(),o=n.find(({category:h})=>{var u;return h===((u=r==null?void 0:r.kumaCp)==null?void 0:u.version)});return o?o.value++:n.push({category:r.kumaCp.version,value:1}),n},[]);e("SET_OVERVIEW_CHART_DATA",{chartName:"zonesCPVersions",data:s})},setOverviewEnvoyVersionsChartData({state:e,commit:t}){const{envoy:s}=e.meshInsight.dpVersions,n=Object.entries(s).map(([a,i])=>({category:a,value:i.total}));t("SET_OVERVIEW_CHART_DATA",{chartName:"envoyVersions",data:n})},setOverviewKumaDPVersionsChartData({state:e,commit:t}){const{kumaDp:s}=e.meshInsight.dpVersions,n=Object.entries(s).map(([a,i])=>({category:a,value:i.total}));t("SET_OVERVIEW_CHART_DATA",{chartName:"kumaDPVersions",data:n})}}},Et=Symbol("store"),vt=Q(_t);function Ut(){return X(Et)}export{le as A,d as C,Lt as I,w as T,l as _,A as a,M as b,Vt as c,Et as d,F as e,T as f,H as g,yt as h,Ct as i,ae as j,c as k,bt as l,re as m,oe as n,At as o,Dt as p,Mt as q,It as r,vt as s,wt as t,Ut as u,Rt as v,ie as w,Nt as x,Pt as y,Ot as z};
