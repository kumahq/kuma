import{d as E,r as a,m as l,o as m,w as s,b as n,e as i,s as w,am as I,aj as K,p as f,C as P,t as p,c as y,F as k,K as T}from"./index-DQlkU3EZ.js";import{S as q}from"./SummaryView-DlEzNI49.js";const Z=E({__name:"MeshExternalServiceListView",props:{mesh:{}},setup(C){const _=C;return(F,r)=>{const b=a("RouteTitle"),d=a("XI18n"),v=a("XNotification"),h=a("XAction"),x=a("XCopyButton"),X=a("KumaPort"),V=a("XActionGroup"),A=a("RouterView"),D=a("DataCollection"),N=a("DataLoader"),R=a("XCard"),S=a("AppView"),B=a("DataSource"),L=a("RouteView");return m(),l(L,{name:"mesh-external-service-list-view",params:{page:1,size:Number,mesh:"",service:""}},{default:s(({route:t,t:u,can:$,uri:g,me:c})=>[n(b,{render:!1,title:u("services.routes.mesh-external-service-list-view.title")},null,8,["title"]),r[7]||(r[7]=i()),n(B,{src:g(w(I),"/zone-cps/:name/egresses",{name:"*"},{page:1,size:100})},{default:s(({data:z})=>[n(S,{docs:u("services.mesh-external-service.href.docs"),notifications:!0},{default:s(()=>[n(v,{notify:!_.mesh.mtlsBackend,uri:`mes-mtls-warning.${_.mesh.id}`},{default:s(()=>[n(d,{path:"services.mesh-external-service.notifications.mtls-warning"})]),_:1},8,["notify","uri"]),r[5]||(r[5]=i()),n(v,{notify:z&&!z.items.find(o=>typeof o.zoneEgressInsight.connectedSubscription<"u"),uri:`mes-no-zone-ingress.${_.mesh.id}`},{default:s(()=>[n(d,{path:"services.mesh-external-service.notifications.no-zone-egress"})]),_:2},1032,["notify","uri"]),r[6]||(r[6]=i()),n(R,null,{default:s(()=>[n(N,{src:g(w(K),"/meshes/:mesh/mesh-external-services",{mesh:t.params.mesh},{page:t.params.page,size:t.params.size})},{loadable:s(({data:o})=>[n(D,{type:"services",items:(o==null?void 0:o.items)??[void 0],page:t.params.page,"page-size":t.params.size,total:o==null?void 0:o.total,onChange:t.update},{default:s(()=>[n(P,{"data-testid":"service-collection",headers:[{...c.get("headers.name"),label:"Name",key:"name"},{...c.get("headers.namespace"),label:"Namespace",key:"namespace"},...$("use zones")?[{...c.get("headers.zone"),label:"Zone",key:"zone"}]:[],{...c.get("headers.port"),label:"Port",key:"port"},{...c.get("headers.actions"),label:"Actions",key:"actions",hideLabel:!0}],items:o==null?void 0:o.items,"is-selected-row":e=>e.name===t.params.service,onResize:c.set},{name:s(({row:e})=>[n(x,{text:e.name},{default:s(()=>[n(h,{"data-action":"",to:{name:"mesh-external-service-summary-view",params:{mesh:e.mesh,service:e.id},query:{page:t.params.page,size:t.params.size}}},{default:s(()=>[i(p(e.name),1)]),_:2},1032,["to"])]),_:2},1032,["text"])]),namespace:s(({row:e})=>[i(p(e.namespace),1)]),zone:s(({row:e})=>[e.labels&&e.labels["kuma.io/origin"]==="zone"&&e.labels["kuma.io/zone"]?(m(),y(k,{key:0},[e.labels["kuma.io/zone"]?(m(),l(h,{key:0,to:{name:"zone-cp-detail-view",params:{zone:e.labels["kuma.io/zone"]}}},{default:s(()=>[i(p(e.labels["kuma.io/zone"]),1)]),_:2},1032,["to"])):f("",!0)],64)):(m(),y(k,{key:1},[i(p(u("common.detail.none")),1)],64))]),port:s(({row:e})=>[e.spec.match?(m(),l(X,{key:0,port:e.spec.match},null,8,["port"])):f("",!0)]),actions:s(({row:e})=>[n(V,null,{default:s(()=>[n(h,{to:{name:"mesh-external-service-detail-view",params:{mesh:e.mesh,service:e.id}}},{default:s(()=>[i(p(u("common.collection.actions.view")),1)]),_:2},1032,["to"])]),_:2},1024)]),_:2},1032,["headers","items","is-selected-row","onResize"]),r[4]||(r[4]=i()),o!=null&&o.items&&t.params.service?(m(),l(A,{key:0},{default:s(e=>[n(q,{onClose:G=>t.replace({name:"mesh-external-service-list-view",params:{mesh:t.params.mesh},query:{page:t.params.page,size:t.params.size}})},{default:s(()=>[(m(),l(T(e.Component),{items:o==null?void 0:o.items},null,8,["items"]))]),_:2},1032,["onClose"])]),_:2},1024)):f("",!0)]),_:2},1032,["items","page","page-size","total","onChange"])]),_:2},1032,["src"])]),_:2},1024)]),_:2},1032,["docs"])]),_:2},1032,["src"])]),_:1})}}});export{Z as default};
