import{H as p,N as m,cl as u,co as b,i as t,o as g,c as _,w as s,a as o,l as e,b as a,t as h}from"./index.e014f0d3.js";import{O as f}from"./OnboardingNavigation.ce0e25fe.js";import{O as v,a as y}from"./OnboardingPage.f68c3d36.js";const N={name:"CreateMesh",components:{OnboardingNavigation:f,OnboardingHeading:v,OnboardingPage:y,KTable:m},data(){return{productName:u,tableHeaders:[{label:"Name",key:"name"},{label:"Services",key:"servicesAmount"},{label:"DPPs",key:"dppsAmount"}],tableData:{total:1,data:[{name:"default",servicesAmount:0,dppsAmount:0}]}}},computed:{...b({multicluster:"config/getMulticlusterStatus"}),previousStep(){return this.multicluster?"onboarding-multi-zone":"onboarding-configuration-types"}}},O={class:"text-center mb-4"},x=e("i",null,"default",-1),P={class:"flex justify-center mt-10 mb-12 pb-12"},A={class:"w-full sm:w-3/5 lg:w-2/5 p-4"},C=e("p",{class:"text-center"},`
        This mesh is empty. Next, you add services and their data plane proxies.
      `,-1);function H(T,k,w,D,n,r){const i=t("OnboardingHeading"),c=t("KTable"),l=t("OnboardingNavigation"),d=t("OnboardingPage");return g(),_(d,null,{header:s(()=>[o(i,{title:"Create the mesh"})]),content:s(()=>[e("p",O,[a(`
        When you install, `+h(n.productName)+" creates a ",1),x,a(` mesh, but you can add as many meshes as you need.
      `)]),a(),e("div",P,[e("div",A,[o(c,{fetcher:()=>n.tableData,headers:n.tableHeaders,"disable-pagination":"","is-small":""},null,8,["fetcher","headers"])])]),a(),C]),navigation:s(()=>[o(l,{"next-step":"onboarding-add-services","previous-step":r.previousStep},null,8,["previous-step"])]),_:1})}const K=p(N,[["render",H]]);export{K as default};
