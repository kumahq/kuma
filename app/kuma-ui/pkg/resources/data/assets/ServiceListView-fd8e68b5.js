import{d as E,cv as C,bP as r,h as L,c8 as y,o as g,i as P,w as T,a as R,j as V}from"./index-08ba2993.js";import{Q as k}from"./QueryParameter-70743f73.js";import{C as q}from"./ContentWrapper-fe544c43.js";import{D as z}from"./DataOverview-1eb5b106.js";import{S as M}from"./ServiceSummary-9dd04a3f.js";import"./EmptyBlock.vue_vue_type_script_setup_true_lang-cf69250c.js";import"./ErrorBlock-21576094.js";import"./LoadingBlock.vue_vue_type_script_setup_true_lang-778739a1.js";import"./StatusBadge-c118c8ba.js";import"./TagList-e8e9bfa1.js";import"./YamlView.vue_vue_type_script_setup_true_lang-f673f333.js";import"./index-a8834e9c.js";import"./CodeBlock.vue_vue_type_style_index_0_lang-e26b650c.js";import"./_commonjsHelpers-87174ba5.js";const X=E({__name:"ServiceListView",props:{selectedServiceName:{type:String,required:!1,default:null},offset:{type:Number,required:!1,default:0}},setup(_){const c=_,A=[{label:"Service",key:"name"},{label:"Type",key:"serviceType"},{label:"Address",key:"addressPort"},{label:"Status",key:"status"},{label:"DP proxies (online / total)",key:"dpProxiesStatus"}],S=50,D={title:"No Data",message:"There are no service insights present."},u=C(),m=r(!0),p=r(null),x=r(null),b=r(c.offset),l=r(null),h=r(null),o=r({headers:A,data:[]});L(()=>u.params.mesh,function(){u.name==="service-list-view"&&v(0)}),v(c.offset);async function v(e){b.value=e,k.set("offset",e>0?e:null),m.value=!0,p.value=null;const t=u.params.mesh,s=S;try{const{items:a,next:d}=await y.getAllServiceInsightsFromMesh({mesh:t},{size:s,offset:e});if(x.value=d,Array.isArray(a)&&a.length>0){a.sort((n,i)=>n.name>i.name?1:n.name<i.name?-1:0),o.value.data=a.map(n=>N(n));const f=c.selectedServiceName??a[0].name;await w({name:f,mesh:t})}else o.value.data=[]}catch(a){a instanceof Error?p.value=a:console.error(a)}finally{m.value=!1}}function N(e){const t={name:"service-detail-view",params:{mesh:e.mesh,service:e.name}},s={name:"mesh-detail-view",params:{mesh:e.mesh}};let a="â€”";if(e.dataplanes){const{online:n=0,total:i=0}=e.dataplanes;a=`${n} / ${i}`}const d=e.addressPort,f=e.serviceType??"internal";return{...e,serviceType:f,nameRoute:t,meshRoute:s,dpProxiesStatus:a,addressPort:d}}async function w({mesh:e,name:t}){l.value=await y.getServiceInsight({mesh:e,name:t}),l.value.serviceType==="external"&&(h.value=await y.getExternalService({mesh:e,name:t})),k.set("service",t)}return(e,t)=>(g(),P(q,null,{content:T(()=>{var s;return[R(z,{"selected-entity-name":(s=l.value)==null?void 0:s.name,"page-size":S,error:p.value,"is-loading":m.value,"empty-state":D,"table-data":o.value,"table-data-is-empty":o.value.data.length===0,next:x.value,"page-offset":b.value,onTableAction:w,onLoadData:v},null,8,["selected-entity-name","error","is-loading","table-data","table-data-is-empty","next","page-offset"])]}),sidebar:T(()=>[l.value!==null?(g(),P(M,{key:0,service:l.value,"external-service":h.value},null,8,["service","external-service"])):V("",!0)]),_:1}))}});export{X as default};
