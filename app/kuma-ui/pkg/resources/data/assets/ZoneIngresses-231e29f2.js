import{M as q}from"./kongponents.es-5ca9e130.js";import{d as C,u as L,r as n,v as P,y as $,A as F,j as d,b as g,e as z,i as Q,g as x,w as A,h as E,f as N,B as D,o}from"./index-6ef061d4.js";import{_ as R}from"./MultizoneInfo.vue_vue_type_script_setup_true_lang-806aea7f.js";import{_ as U}from"./ZoneIngressDetails.vue_vue_type_script_setup_true_lang-7f3be38f.js";import{D as j}from"./DataOverview-273e56b2.js";import{u as G}from"./store-444aa12f.js";import{u as K}from"./index-8eaa4fe5.js";import{Q as S}from"./QueryParameter-70743f73.js";import"./AccordionList-fc691476.js";import"./_plugin-vue_export-helper-c27b6911.js";import"./DefinitionListItem-97bb646e.js";import"./ErrorBlock-5ce00c3e.js";import"./LoadingBlock.vue_vue_type_script_setup_true_lang-431ef500.js";import"./EnvoyData-a689fa08.js";import"./CodeBlock.vue_vue_type_style_index_0_lang-cadc6770.js";import"./StatusInfo.vue_vue_type_script_setup_true_lang-dfb8a1dd.js";import"./SubscriptionHeader.vue_vue_type_script_setup_true_lang-60a557a2.js";import"./TabsWidget-a1cf8c62.js";import"./datadogLogEvents-302eea7b.js";import"./TagList-2830199d.js";import"./StatusBadge-310603a4.js";const Y={class:"zoneingresses"},H={key:1,class:"kcard-stack"},J={class:"kcard-border"},W={key:0,class:"kcard-border"},be=C({__name:"ZoneIngresses",props:{selectedZoneIngressName:{type:String,required:!1,default:null},offset:{type:Number,required:!1,default:0}},setup(Z){const u=Z,y=K(),T={title:"No Data",message:"There are no Zone Ingresses present."},c=L(),_=G(),i=n(!0),r=n(!1),m=n(null),f=n({headers:[{label:"Status",key:"status"},{label:"Name",key:"name"}],data:[]}),l=n(null),w=n([]),b=n(null),B=n([]),h=n(u.offset);P(()=>c.params.mesh,function(){c.name==="zone-ingress-list-view"&&(i.value=!0,r.value=!1,m.value=null,p(0))}),$(function(){M(u.offset)});function M(t){_.getters["config/getMulticlusterStatus"]&&p(t)}async function p(t){h.value=t,S.set("offset",t>0?t:null),i.value=!0,r.value=!1;const s=c.query.ns||null,a=D;try{const{data:e,next:v}=await O(s,a,t);b.value=v,e.length?(r.value=!1,w.value=e,I({name:u.selectedZoneIngressName??e[0].name}),f.value.data=e.map(k=>{const V=F(k.zoneIngressInsight??{});return{...k,status:V}})):(f.value.data=[],r.value=!0)}catch(e){e instanceof Error?m.value=e:console.error(e),r.value=!0}finally{i.value=!1}}function I({name:t}){var a;const s=w.value.find(e=>e.name===t);if(s){const e=((a=s.zoneIngressInsight)==null?void 0:a.subscriptions)??[];B.value=Array.from(e).reverse(),l.value=s,S.set("zoneIngress",t)}}async function O(t,s,a){if(t)return{data:[await y.getZoneIngressOverview({name:t},{size:s,offset:a})],next:null};{const{items:e,next:v}=await y.getAllZoneIngressOverviews({size:s,offset:a});return{data:e??[],next:v}}}return(t,s)=>{var a;return o(),d("div",Y,[g(_).getters["config/getMulticlusterStatus"]===!1?(o(),z(R,{key:0})):(o(),d("div",H,[Q("div",J,[x(j,{"selected-entity-name":(a=l.value)==null?void 0:a.name,"page-size":g(D),"is-loading":i.value,error:m.value,"empty-state":T,"table-data":f.value,"table-data-is-empty":r.value,next:b.value,"page-offset":h.value,onTableAction:I,onLoadData:p},{additionalControls:A(()=>[t.$route.query.ns?(o(),z(g(q),{key:0,class:"back-button",appearance:"primary",icon:"arrowLeft",to:{name:"zone-ingress-list-view"}},{default:A(()=>[E(`
              View all
            `)]),_:1})):N("",!0)]),_:1},8,["selected-entity-name","page-size","is-loading","error","table-data","table-data-is-empty","next","page-offset"])]),E(),l.value!==null?(o(),d("div",W,[x(U,{"zone-ingress-overview":l.value},null,8,["zone-ingress-overview"])])):N("",!0)]))])}}});export{be as default};
