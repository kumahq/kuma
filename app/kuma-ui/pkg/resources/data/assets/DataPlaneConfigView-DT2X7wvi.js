import{d as E,r as n,p as c,o as r,w as o,b as s,e as m,c as F,N as S,L as h,l as w,M as b,t as B,m as l,V as y,Y as C}from"./index-e9EOlcJX.js";const q=E({__name:"DataPlaneConfigView",setup(X){return(L,d)=>{const x=n("RouteTitle"),k=n("XSelect"),i=n("XLayout"),g=n("XCodeBlock"),u=n("DataLoader"),R=n("XCard"),M=n("AppView"),V=n("RouteView");return r(),c(V,{name:"data-plane-config-view",params:{mesh:"",proxy:"",codeSearch:"",codeFilter:!1,codeRegExp:!1,environment:String}},{default:o(({route:a,t:p,uri:f})=>[s(x,{render:!1,title:p("data-planes.routes.item.navigation.data-plane-config-view")},null,8,["title"]),d[1]||(d[1]=m()),s(M,null,{default:o(()=>[s(R,null,{default:o(()=>[s(i,null,{default:o(()=>[s(i,{type:"separated",justify:"end"},{default:o(()=>[(r(),F(S,null,h([["universal","k8s"]],t=>w("div",{key:typeof t},[s(k,{label:p("data-planes.routes.item.format"),selected:a.params.environment,onChange:e=>{a.update({environment:e})},onVnodeBeforeMount:e=>{var _;return((_=e==null?void 0:e.props)==null?void 0:_.selected)&&t.includes(e.props.selected)&&e.props.selected!==a.params.environment&&a.update({environment:e.props.selected})}},b({_:2},[h(t,e=>({name:`${e}-option`,fn:o(()=>[m(B(p(`data-planes.routes.item.formats.${e}`)),1)])}))]),1032,["label","selected","onChange","onVnodeBeforeMount"])])),64))]),_:2},1024),d[0]||(d[0]=m()),a.params.environment==="universal"?(r(),c(u,{key:0,src:f(l(y),"/meshes/:mesh/dataplanes/:name",{mesh:a.params.mesh,name:a.params.proxy})},{default:o(({data:t})=>[s(g,{"data-testid":"codeblock-yaml-universal",language:"yaml",code:l(C).stringify(t.config),"is-searchable":"",query:a.params.codeSearch,"is-filter-mode":a.params.codeFilter,"is-reg-exp-mode":a.params.codeRegExp,onQueryChange:e=>a.update({codeSearch:e}),onFilterModeChange:e=>a.update({codeFilter:e}),onRegExpModeChange:e=>a.update({codeRegExp:e})},null,8,["code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])]),_:2},1032,["src"])):(r(),c(u,{key:1,src:f(l(y),"/meshes/:mesh/dataplanes/:name/as/kubernetes",{mesh:a.params.mesh,name:a.params.proxy})},{default:o(({data:t})=>[s(g,{"data-testid":"codeblock-yaml-k8s",language:"yaml",code:l(C).stringify(t),"is-searchable":"",query:a.params.codeSearch,"is-filter-mode":a.params.codeFilter,"is-reg-exp-mode":a.params.codeRegExp,onQueryChange:e=>a.update({codeSearch:e}),onFilterModeChange:e=>a.update({codeFilter:e}),onRegExpModeChange:e=>a.update({codeRegExp:e})},null,8,["code","query","is-filter-mode","is-reg-exp-mode","onQueryChange","onFilterModeChange","onRegExpModeChange"])]),_:2},1032,["src"]))]),_:2,__:[0]},1024)]),_:2},1024)]),_:2},1024)]),_:1,__:[1]})}}});export{q as default};
