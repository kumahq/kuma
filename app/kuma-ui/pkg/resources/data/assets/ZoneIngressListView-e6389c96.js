import{d as V,q as $,r as n,s as I,R as B,o as i,c as k,w as x,a as l,u,b as N,e as T,f as D,J as E,g as L}from"./index-ae9fe02d.js";import{_ as O}from"./MultizoneInfo.vue_vue_type_script_setup_true_lang-87a58f8a.js";import{_ as q}from"./ZoneIngressDetails.vue_vue_type_script_setup_true_lang-4ae2fed2.js";import{u as C,g as M,b as P,f as R,e as F}from"./RouteView.vue_vue_type_script_setup_true_lang-b5eb5713.js";import{_ as Q}from"./RouteTitle.vue_vue_type_script_setup_true_lang-ff8a3bd8.js";import{D as U}from"./DataOverview-c2e9eccb.js";import{Q as g}from"./QueryParameter-70743f73.js";import"./kongponents.es-d2465199.js";import"./AccordionList-90b588f6.js";import"./DefinitionListItem-41d0e307.js";import"./EnvoyData-f55801e5.js";import"./CodeBlock.vue_vue_type_style_index_0_lang-8d0a701f.js";import"./StatusInfo.vue_vue_type_script_setup_true_lang-a6039e50.js";import"./EmptyBlock.vue_vue_type_script_setup_true_lang-0a364a2e.js";import"./ErrorBlock-28357309.js";import"./LoadingBlock.vue_vue_type_script_setup_true_lang-0cb24ca1.js";import"./SubscriptionHeader.vue_vue_type_script_setup_true_lang-7c9d6b6b.js";import"./TabsWidget-ddcb55c2.js";import"./TextWithCopyButton-4600fce9.js";import"./TagList-37f0ef0c.js";import"./StatusBadge-716bbdd6.js";const G={class:"zoneingresses"},J={key:1,class:"kcard-stack"},K={class:"kcard-border"},Y={key:0,class:"kcard-border"},_e=V({__name:"ZoneIngressListView",props:{selectedZoneIngressName:{type:[String,null],required:!1,default:null},offset:{type:Number,required:!1,default:0}},setup(S){const c=S,v=C(),{t:_}=M(),A={title:"No Data",message:"There are no Zone Ingresses present."},y=$(),b=P(),m=n(!0),d=n(null),o=n({headers:[{label:"Status",key:"status"},{label:"Name",key:"entity"}],data:[]}),r=n(null),w=n(null),h=n(c.offset);I(()=>y.params.mesh,function(){y.name==="zone-ingress-list-view"&&f(0)}),I(()=>b.getters["config/getMulticlusterStatus"],function(e){e&&f(c.offset)},{immediate:!0});async function f(e){var s;h.value=e,g.set("offset",e>0?e:null),m.value=!0,d.value=null;const t=E;try{const{items:a,next:p}=await v.getAllZoneIngressOverviews({size:t,offset:e});w.value=p,o.value.data=Z(a??[]),await z({name:c.selectedZoneIngressName??((s=o.value.data[0])==null?void 0:s.entity.name)})}catch(a){o.value.data=[],r.value=null,a instanceof Error?d.value=a:console.error(a)}finally{m.value=!1}}function Z(e){return e.map(t=>{const{name:s}=t,a={name:"zone-ingress-detail-view",params:{zoneIngress:s}},p=B(t.zoneIngressInsight??{});return{entity:t,detailViewRoute:a,status:p}})}async function z({name:e}){if(e===void 0){r.value=null,g.set("zoneIngress",null);return}try{r.value=await v.getZoneIngressOverview({name:e}),g.set("zoneIngress",e)}catch(t){console.error(t)}}return(e,t)=>(i(),k(F,null,{default:x(()=>[l(Q,{title:u(_)("zone-ingresses.routes.items.title")},null,8,["title"]),N(),l(R,{breadcrumbs:[{to:{name:"zone-ingress-list-view"},text:u(_)("zone-ingresses.routes.items.breadcrumbs")}]},{default:x(()=>{var s;return[T("div",G,[u(b).getters["config/getMulticlusterStatus"]===!1?(i(),k(O,{key:0})):(i(),D("div",J,[T("div",K,[l(U,{"selected-entity-name":(s=r.value)==null?void 0:s.name,"page-size":u(E),"is-loading":m.value,error:d.value,"empty-state":A,"table-data":o.value,"table-data-is-empty":o.value.data.length===0,next:w.value,"page-offset":h.value,onTableAction:z,onLoadData:f},null,8,["selected-entity-name","page-size","is-loading","error","table-data","table-data-is-empty","next","page-offset"])]),N(),r.value!==null?(i(),D("div",Y,[l(q,{"zone-ingress-overview":r.value},null,8,["zone-ingress-overview"])])):L("",!0)]))])]}),_:1},8,["breadcrumbs"])]),_:1}))}});export{_e as default};
