import{d as L,r as n,o as p,p as m,w as s,b as o,e as r,m as B,ar as N,A as S,V as q,t as i,c as g,J as w,K,F as T,q as F}from"./index-DEIC-piS.js";import{S as G}from"./SummaryView-BNuGhANj.js";const Z=L({__name:"MeshServiceListView",setup($){return(E,_)=>{const y=n("RouteTitle"),d=n("XAction"),f=n("XBadge"),z=n("KumaPort"),C=n("XLayout"),k=n("XActionGroup"),V=n("RouterView"),b=n("DataCollection"),x=n("DataLoader"),A=n("XCard"),X=n("AppView"),P=n("RouteView");return p(),m(P,{name:"mesh-service-list-view",params:{page:1,size:50,mesh:"",service:""}},{default:s(({route:t,t:u,can:R,uri:D,me:c})=>[o(y,{render:!1,title:u("services.routes.mesh-service-list-view.title")},null,8,["title"]),_[7]||(_[7]=r()),o(X,{docs:u("services.mesh-service.href.docs")},{default:s(()=>[o(A,null,{default:s(()=>[o(x,{src:D(B(N),"/meshes/:mesh/mesh-services",{mesh:t.params.mesh},{page:t.params.page,size:t.params.size})},{loadable:s(({data:a})=>[o(b,{type:"services",items:(a==null?void 0:a.items)??[void 0],page:t.params.page,"page-size":t.params.size,total:a==null?void 0:a.total,onChange:t.update},{default:s(()=>[o(S,{"data-testid":"service-collection",headers:[{...c.get("headers.name"),label:"Name",key:"name"},{...c.get("headers.namespace"),label:"Namespace",key:"namespace"},...R("use zones")?[{...c.get("headers.zone"),label:"Zone",key:"zone"}]:[],{...c.get("headers.state"),label:"State",key:"state"},{...c.get("headers.status"),label:"DP proxies (connected / healthy / total)",key:"status"},{...c.get("headers.ports"),label:"Ports",key:"ports"},{...c.get("headers.actions"),label:"Actions",key:"actions",hideLabel:!0}],items:a==null?void 0:a.items,"is-selected-row":e=>e.name===t.params.service,onResize:c.set},{name:s(({row:e})=>[o(q,{text:e.name},{default:s(()=>[o(d,{"data-action":"",to:{name:"mesh-service-summary-view",params:{mesh:e.mesh,service:e.id},query:{page:t.params.page,size:t.params.size}}},{default:s(()=>[r(i(e.name),1)]),_:2},1032,["to"])]),_:2},1032,["text"])]),namespace:s(({row:e})=>[r(i(e.namespace),1)]),zone:s(({row:e})=>[e.zone?(p(),m(d,{key:0,to:{name:"zone-cp-detail-view",params:{zone:e.zone}}},{default:s(()=>[r(i(e.zone),1)]),_:2},1032,["to"])):(p(),g(w,{key:1},[r(i(u("common.detail.none")),1)],64))]),state:s(({row:e})=>[o(f,{appearance:e.spec.state==="Available"?"success":"danger"},{default:s(()=>[r(i(e.spec.state),1)]),_:2},1032,["appearance"])]),status:s(({row:e})=>{var l,h,v;return[r(i((l=e.status.dataplaneProxies)==null?void 0:l.connected)+" / "+i((h=e.status.dataplaneProxies)==null?void 0:h.healthy)+" / "+i((v=e.status.dataplaneProxies)==null?void 0:v.total),1)]}),ports:s(({row:e})=>[o(C,{type:"separated",truncate:""},{default:s(()=>[(p(!0),g(w,null,K(e.spec.ports,l=>(p(),m(z,{key:l.port,port:{...l,targetPort:void 0}},null,8,["port"]))),128))]),_:2},1024)]),actions:s(({row:e})=>[o(k,null,{default:s(()=>[o(d,{to:{name:"mesh-service-detail-view",params:{mesh:e.mesh,service:e.id}}},{default:s(()=>[r(i(u("common.collection.actions.view")),1)]),_:2},1032,["to"])]),_:2},1024)]),_:2},1032,["headers","items","is-selected-row","onResize"]),_[6]||(_[6]=r()),a!=null&&a.items&&t.params.service?(p(),m(V,{key:0},{default:s(e=>[o(G,{onClose:l=>t.replace({name:"mesh-service-list-view",params:{mesh:t.params.mesh},query:{page:t.params.page,size:t.params.size}})},{default:s(()=>[(p(),m(T(e.Component),{items:a==null?void 0:a.items},null,8,["items"]))]),_:2},1032,["onClose"])]),_:2},1024)):F("",!0)]),_:2},1032,["items","page","page-size","total","onChange"])]),_:2},1032,["src"])]),_:2},1024)]),_:2},1032,["docs"])]),_:1})}}});export{Z as default};
