import{d as x,r,o as t,m as _,w as e,b as o,c as n,F as u,G as h,U as b,e as a,t as y,k as l,p as g,l as K,at as M,H as N,I as T,q as z}from"./index-BLmmRP-W.js";import{a as j,A as F}from"./AccordionList-ClFEs_D7.js";import{C as H}from"./CodeBlock-D2JhkXuS.js";import{P as q}from"./PolicyTypeTag-lS4Ajubg.js";import{R as E}from"./RuleMatchers-W1QFHvf_.js";const B=i=>(N("data-v-3051e933"),i=i(),T(),i),G={key:0,class:"rules"},U=B(()=>l("h3",null,"Rules",-1)),Y={class:"mt-4"},J={class:"stack-with-borders"},Q=B(()=>l("dt",null,`
                                    Config
                                  `,-1)),W={class:"mt-2"},X=x({__name:"ConnectionOutboundSummaryOverviewView",props:{data:{},dataplaneOverview:{}},setup(i){const V=i;return(Z,ee)=>{const P=r("KBadge"),R=r("RouterLink"),D=r("DataSource"),O=r("KCard"),S=r("DataCollection"),L=r("DataLoader"),A=r("AppView"),I=r("RouteView");return t(),_(I,{params:{mesh:"",dataPlane:"",connection:""},name:"connection-outbound-summary-overview-view"},{default:e(({t:$,route:f})=>[o(A,null,{default:e(()=>[(t(!0),n(u,null,h([f.params.connection.replace(/-([a-f0-9]){16}$/,"")],v=>(t(),n("div",{key:v,class:"stack-with-borders"},[o(b,{layout:"horizontal"},{title:e(()=>[a(`
              Protocol
            `)]),body:e(()=>[o(P,{appearance:"info"},{default:e(()=>[a(y($(`http.api.value.${["grpc","http","tcp"].find(k=>typeof V.data[k]<"u")}`)),1)]),_:2},1024)]),_:2},1024),a(),V.data?(t(),n("div",G,[U,a(),o(L,{src:`/meshes/${f.params.mesh}/rules/for/${f.params.dataPlane}`},{default:e(({data:k})=>[o(S,{predicate:p=>p.ruleType==="to"&&!["MeshHTTPRoute","MeshTCPRoute"].includes(p.type)&&p.matchers.every(s=>s.key==="kuma.io/service"&&(s.not?s.value!==v:s.value===v)),items:k.rules},{default:e(({items:p})=>[l("div",Y,[o(j,{"initially-open":0,"multiple-open":"",class:"stack"},{default:e(()=>[(t(!0),n(u,null,h(Object.groupBy(p,s=>s.type),(s,w)=>(t(),_(O,{key:w},{default:e(()=>[o(F,null,{"accordion-header":e(()=>[o(q,{"policy-type":w},{default:e(()=>[a(y(w)+" ("+y(s.length)+`)
                            `,1)]),_:2},1032,["policy-type"])]),"accordion-content":e(()=>[l("div",J,[(t(!0),n(u,null,h(s,d=>(t(),n(u,{key:d},[d.matchers.length>0?(t(),_(b,{key:0,layout:"horizontal"},{title:e(()=>[a(`
                                    To
                                  `)]),body:e(()=>[l("p",null,[o(E,{items:d.matchers},null,8,["items"])])]),_:2},1024)):g("",!0),a(),d.origins.length>0?(t(),_(b,{key:1,layout:"horizontal"},{title:e(()=>[a(`
                                    Origin Policies
                                  `)]),body:e(()=>[o(D,{src:"/policy-types"},{default:e(({data:C})=>[(t(!0),n(u,null,h([Object.groupBy((C==null?void 0:C.policies)??[],m=>m.name)],m=>(t(),n("ul",{key:m},[(t(!0),n(u,null,h(d.origins,c=>(t(),n("li",{key:`${c.mesh}-${c.name}`},[m[c.type]?(t(),_(R,{key:0,to:{name:"policy-detail-view",params:{mesh:c.mesh,policyPath:m[c.type][0].path,policy:c.name}}},{default:e(()=>[a(y(c.name),1)]),_:2},1032,["to"])):(t(),n(u,{key:1},[a(y(c.name),1)],64))]))),128))]))),128))]),_:2},1024)]),_:2},1024)):g("",!0),a(),l("div",null,[Q,a(),l("dd",W,[l("div",null,[o(H,{code:K(M).stringify(d.raw),language:"yaml","show-copy-button":!1},null,8,["code"])])])])],64))),128))])]),_:2},1024)]),_:2},1024))),128))]),_:2},1024)])]),_:2},1032,["predicate","items"])]),_:2},1032,["src"])])):g("",!0)]))),128))]),_:2},1024)]),_:1})}}}),ce=z(X,[["__scopeId","data-v-3051e933"]]);export{ce as default};
