import{d as D,r as o,p as m,o as a,w as t,b as i,e as s,K as R,c as u,N as _,L as w,t as c,q as b,l as T,y as A,_ as S}from"./index-DLcMka4k.js";const B=D({__name:"DataPlaneSubscriptionsSummaryView",props:{subscriptions:{}},setup(v){const y=v;return(N,p)=>{const h=o("RouteTitle"),f=o("XI18n"),k=o("XIcon"),V=o("XAction"),I=o("XLayout"),X=o("AppView"),g=o("XDrawer"),x=o("RouterView"),C=o("RouteView");return a(),m(C,{name:"data-plane-subscriptions-summary-view",params:{inactive:Boolean,mesh:"",proxy:"",subscription:""}},{default:t(({route:l,t:n,me:r})=>[i(X,null,{title:t(()=>[T("h2",null,[i(h,{title:n("data-planes.routes.item.subscriptions.title")},null,8,["title"])])]),default:t(()=>[p[6]||(p[6]=s()),i(I,{"data-testid":"dataplane-subscriptions"},{default:t(()=>[i(f,{path:"data-planes.routes.item.subscriptions.description"}),p[5]||(p[5]=s()),i(R,{headers:[{...r.get("headers.connection"),label:"Â ",key:"connection"},{...r.get("headers.instanceId"),label:n("http.api.property.instanceId"),key:"instanceId"},{...r.get("headers.version"),label:n("http.api.property.version"),key:"version"},{...r.get("headers.connected"),label:n("http.api.property.connected"),key:"connected"},{...r.get("headers.disconnected"),label:n("http.api.property.disconnected"),key:"disconnected"},{...r.get("headers.responses"),label:n("http.api.property.responses"),key:"responses"}],"is-selected-row":e=>e.id===l.params.subscription,items:[...y.subscriptions].reverse(),onResize:r.set},{connection:t(({row:e})=>[(a(!0),u(_,null,w([e.connectTime&&!e.disconnectTime?"healthy":"unhealthy"],d=>(a(),m(k,{key:`${d}`,name:d},{default:t(()=>[s(c(n(`common.connection.${d}`)),1)]),_:2},1032,["name"]))),128))]),instanceId:t(({row:e})=>[i(V,{"data-action":"",to:{name:"data-plane-subscription-summary-view",params:{subscription:e.id}}},{default:t(()=>[s(c(e.controlPlaneInstanceId),1)]),_:2},1032,["to"])]),version:t(({row:e})=>[s(c(e.version?.kumaDp?.version??"-"),1)]),connected:t(({row:e})=>[s(c(n("common.formats.datetime",{value:Date.parse(e.connectTime??"")})),1)]),disconnected:t(({row:e})=>[e.disconnectTime?(a(),u(_,{key:0},[s(c(n("common.formats.datetime",{value:Date.parse(e.disconnectTime)})),1)],64)):b("",!0)]),responses:t(({row:e})=>[(a(!0),u(_,null,w([e.status?.total??{}],d=>(a(),u(_,null,[s(c(d.responsesSent)+"/"+c(d.responsesAcknowledged),1)],64))),256))]),_:2},1032,["headers","is-selected-row","items","onResize"])]),_:2},1024)]),_:2},1024),p[7]||(p[7]=s()),i(x,null,{default:t(e=>[e.route.name!==l.name?(a(),m(g,{key:0,width:"670px",onClose:function(){l.replace({name:"data-plane-subscriptions-summary-view",params:{mesh:l.params.mesh,proxy:l.params.proxy},query:{inactive:l.params.inactive?null:void 0}})}},{default:t(()=>[(a(),m(A(e.Component),{data:y.subscriptions},null,8,["data"]))]),_:2},1032,["onClose"])):b("",!0)]),_:2},1024)]),_:1})}}}),P=S(B,[["__scopeId","data-v-8afc5cd5"]]);export{P as default};
