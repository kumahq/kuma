(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["wizard-dataplane-kubernetes"],{1373:function(e,t,a){"use strict";a("99af");var s=a("e80b"),n=a.n(s);t["a"]={methods:{formatForCLI:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:'" | kumactl apply -f -',a='echo "',s=n()(e);return"".concat(a).concat(s).concat(t)}}}},"16a3":function(e,t,a){"use strict";var s=a("fc11"),n=a("f3f3"),i=a("a026");t["a"]=i["default"].extend({data:function(){return{storedData:[],storedVal:"",storedKey:""}},watch:{storedVal:function(){var e=JSON.stringify(this.storedData);localStorage.storedFormData=e}},mounted:function(){this.clearStorage()},methods:{updateStorage:function(e,t){this.storedVal=t||"",this.storedKey=e||"",this.storedData=Object(n["a"])(Object(n["a"])({},this.storedData),Object(s["a"])({},e,t)),this.$store.dispatch("updateWizardData",this.storedData),this.$emit("storageItemModified",t)},getStorageItem:function(e){var t=localStorage.storedFormData;return this.$emit("storageItemRetrieved",e),t&&t.length>0?JSON.parse(localStorage.storedFormData)[e]:null},clearStorage:function(){localStorage.removeItem("storedFormData"),this.$store.dispatch("updateWizardData",null)}}})},"259a":function(e,t,a){"use strict";a("c1f9")},"32c3":function(e,t,a){"use strict";a("53a0")},"53a0":function(e,t,a){},a527:function(e,t,a){"use strict";a.r(t);var s=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"wizard"},[a("div",{staticClass:"wizard__content"},[a("StepSkeleton",{attrs:{steps:e.steps,"sidebar-content":e.sidebarContent,"footer-enabled":!1===e.hideScannerSiblings,"next-disabled":e.nextDisabled}},[a("template",{slot:"general"},[a("h3",[e._v(" Create Kubernetes Dataplane ")]),a("p",[e._v(" Welcome to the wizard to create a new Dataplane resource in "+e._s(e.title)+". We will be providing you with a few steps that will get you started. ")]),a("p",[e._v(" As you know, the "+e._s(e.$productName)+" GUI is read-only. ")]),a("h3",[e._v(" To get started, please select on what Mesh you would like to add the Dataplane: ")]),a("p",[e._v(" If you've got an existing Mesh that you would like to associate with your Dataplane, you can select it below, or create a new one using our Mesh Wizard. ")]),a("small",[e._v("Would you like to see instructions for Universal? Use sidebar to change wizard!")]),a("KCard",{staticClass:"my-6",attrs:{"has-shadow":""}},[a("template",{slot:"body"},[a("FormFragment",{attrs:{title:"Choose a Mesh","for-attr":"dp-mesh","all-inline":""}},[a("div",[a("select",{directives:[{name:"model",rawName:"v-model",value:e.validate.meshName,expression:"validate.meshName"}],staticClass:"k-input w-100",attrs:{id:"dp-mesh"},on:{change:function(t){var a=Array.prototype.filter.call(t.target.options,(function(e){return e.selected})).map((function(e){var t="_value"in e?e._value:e.value;return t}));e.$set(e.validate,"meshName",t.target.multiple?a:a[0])}}},[a("option",{attrs:{disabled:"",value:""}},[e._v(" Select an existing Meshâ€¦ ")]),e._l(e.meshes.items,(function(t){return a("option",{key:t.name,domProps:{value:t.name}},[e._v(" "+e._s(t.name)+" ")])}))],2)]),a("div",[a("label",{staticClass:"k-input-label mr-4"},[e._v(" or ")]),a("KButton",{attrs:{to:{name:"create-mesh"},appearance:"primary"}},[e._v(" Create a new Mesh ")])],1)])],1)],2)],1),a("template",{slot:"scope-settings"},[a("h3",[e._v(" Setup Dataplane Mode ")]),a("p",[e._v(" You can create a data plane for a service or a data plane for a Gateway. ")]),a("KCard",{staticClass:"my-6",attrs:{"has-shadow":""}},[a("template",{slot:"body"},[a("FormFragment",{attrs:{"all-inline":"","equal-cols":"","hide-label-col":""}},[a("label",{attrs:{for:"service-dataplane"}},[a("input",{directives:[{name:"model",rawName:"v-model",value:e.validate.k8sDataplaneType,expression:"validate.k8sDataplaneType"}],staticClass:"k-input",attrs:{id:"service-dataplane",type:"radio",name:"dataplane-type",value:"dataplane-type-service",checked:""},domProps:{checked:e._q(e.validate.k8sDataplaneType,"dataplane-type-service")},on:{change:function(t){return e.$set(e.validate,"k8sDataplaneType","dataplane-type-service")}}}),a("span",[e._v(" Service Dataplane ")])]),a("label",{attrs:{for:"ingress-dataplane"}},[a("input",{directives:[{name:"model",rawName:"v-model",value:e.validate.k8sDataplaneType,expression:"validate.k8sDataplaneType"}],staticClass:"k-input",attrs:{id:"ingress-dataplane",type:"radio",name:"dataplane-type",value:"dataplane-type-ingress",disabled:""},domProps:{checked:e._q(e.validate.k8sDataplaneType,"dataplane-type-ingress")},on:{change:function(t){return e.$set(e.validate,"k8sDataplaneType","dataplane-type-ingress")}}}),a("span",[e._v(" Ingress Dataplane ")])])])],1)],2),"dataplane-type-service"===e.validate.k8sDataplaneType?a("div",[a("p",[e._v(" Should the data plane be added for an entire Namespace and all of its services, or for specific individual services in any namespace? ")]),a("KCard",{staticClass:"my-6",attrs:{"has-shadow":""}},[a("template",{slot:"body"},[a("FormFragment",{attrs:{"all-inline":"","equal-cols":"","hide-label-col":""}},[a("label",{attrs:{for:"k8s-services-all"}},[a("input",{directives:[{name:"model",rawName:"v-model",value:e.validate.k8sServices,expression:"validate.k8sServices"}],staticClass:"k-input",attrs:{id:"k8s-services-all",type:"radio",name:"k8s-services",value:"all-services",checked:""},domProps:{checked:e._q(e.validate.k8sServices,"all-services")},on:{change:function(t){return e.$set(e.validate,"k8sServices","all-services")}}}),a("span",[e._v(" All Services in Namespace ")])]),a("label",{attrs:{for:"k8s-services-individual"}},[a("input",{directives:[{name:"model",rawName:"v-model",value:e.validate.k8sServices,expression:"validate.k8sServices"}],staticClass:"k-input",attrs:{id:"k8s-services-individual",type:"radio",name:"k8s-services",value:"individual-services",disabled:""},domProps:{checked:e._q(e.validate.k8sServices,"individual-services")},on:{change:function(t){return e.$set(e.validate,"k8sServices","individual-services")}}}),a("span",[e._v(" Individual Services ")])])])],1)],2),"individual-services"===e.validate.k8sServices?a("KCard",{staticClass:"my-6",attrs:{"has-shadow":""}},[a("template",{slot:"body"},[a("FormFragment",{attrs:{title:"Deployments","for-attr":"k8s-deployment-selection"}},[a("input",{directives:[{name:"model",rawName:"v-model",value:e.validate.k8sServiceDeploymentSelection,expression:"validate.k8sServiceDeploymentSelection"}],staticClass:"k-input w-100",attrs:{id:"k8s-service-deployment-new",type:"text",placeholder:"your-new-deployment",required:""},domProps:{value:e.validate.k8sServiceDeploymentSelection},on:{input:function(t){t.target.composing||e.$set(e.validate,"k8sServiceDeploymentSelection",t.target.value)}}})])],1)],2):e._e(),a("KCard",{staticClass:"my-6",attrs:{"has-shadow":""}},[a("template",{slot:"body"},[a("FormFragment",{attrs:{title:"Namespace","for-attr":"k8s-namespace-selection"}},[a("input",{directives:[{name:"model",rawName:"v-model",value:e.validate.k8sNamespaceSelection,expression:"validate.k8sNamespaceSelection"}],staticClass:"k-input w-100",attrs:{id:"k8s-namespace-new",type:"text",placeholder:"your-namespace",required:""},domProps:{value:e.validate.k8sNamespaceSelection},on:{input:function(t){t.target.composing||e.$set(e.validate,"k8sNamespaceSelection",t.target.value)}}})])],1)],2)],1):e._e(),"dataplane-type-ingress"===e.validate.k8sDataplaneType?a("div",[a("p",[e._v(" "+e._s(e.title)+" natively supports the Kong Ingress. Do you want to deploy Kong or another Ingress? ")]),a("KCard",{staticClass:"my-6",attrs:{"has-shadow":""}},[a("template",{slot:"body"},[a("FormFragment",{attrs:{"all-inline":"","equal-cols":"","hide-label-col":""}},[a("label",{attrs:{for:"k8s-ingress-kong"}},[a("input",{directives:[{name:"model",rawName:"v-model",value:e.validate.k8sIngressBrand,expression:"validate.k8sIngressBrand"}],staticClass:"k-input",attrs:{id:"k8s-ingress-kong",type:"radio",name:"k8s-ingress-brand",value:"kong-ingress",checked:""},domProps:{checked:e._q(e.validate.k8sIngressBrand,"kong-ingress")},on:{change:function(t){return e.$set(e.validate,"k8sIngressBrand","kong-ingress")}}}),a("span",[e._v(" Kong Ingress ")])]),a("label",{attrs:{for:"k8s-ingress-other"}},[a("input",{directives:[{name:"model",rawName:"v-model",value:e.validate.k8sIngressBrand,expression:"validate.k8sIngressBrand"}],staticClass:"k-input",attrs:{id:"k8s-ingress-other",type:"radio",name:"k8s-ingress-brand",value:"other-ingress"},domProps:{checked:e._q(e.validate.k8sIngressBrand,"other-ingress")},on:{change:function(t){return e.$set(e.validate,"k8sIngressBrand","other-ingress")}}}),a("span",[e._v(" Other Ingress ")])])])],1)],2),a("KCard",{staticClass:"my-6",attrs:{"has-shadow":""}},[a("template",{slot:"body"},[a("FormFragment",{attrs:{title:"Deployments","for-attr":"k8s-deployment-selection"}},[a("input",{directives:[{name:"model",rawName:"v-model",value:e.validate.k8sIngressDeployment,expression:"validate.k8sIngressDeployment"}],staticClass:"k-input w-100",attrs:{id:"k8s-ingress-deployment-new",type:"text",placeholder:"your-deployment",required:""},domProps:{value:e.validate.k8sIngressDeployment},on:{input:function(t){t.target.composing||e.$set(e.validate,"k8sIngressDeployment",t.target.value)}}})])],1)],2),"other-ingress"===e.validate.k8sIngressBrand?a("KAlert",{attrs:{appearance:"info"}},[a("template",{slot:"alertMessage"},[a("p",[e._v(' Please go ahead and deploy the Ingress first, then restart this wizard and select "Existing Ingress". ')])])],2):e._e()],1):e._e()],1),a("template",{slot:"complete"},[e.validate.meshName?a("div",[!1===e.hideScannerSiblings?a("div",[a("h3",[e._v(" Auto-Inject DPP ")]),a("p",[e._v(" You can now execute the following commands to automatically inject the sidecar proxy in every Pod, and by doing so creating the Dataplane. ")]),a("Tabs",{attrs:{loaders:!1,tabs:e.tabs,"has-border":!0,"initial-tab-override":"kubernetes"}},[a("template",{slot:"kubernetes"},[a("CodeView",{attrs:{title:"Kubernetes","copy-button-text":"Copy Command to Clipboard",lang:"bash",content:e.codeOutput}})],1)],2)],1):e._e(),a("Scanner",{attrs:{"loader-function":e.scanForEntity,"should-start":!0,"has-error":e.scanError,"can-complete":e.scanFound},on:{hideSiblings:e.hideSiblings}},[a("template",{slot:"loading-title"},[a("h3",[e._v("Searchingâ€¦")])]),a("template",{slot:"loading-content"},[a("p",[e._v("We are looking for your dataplane.")])]),a("template",{slot:"complete-title"},[a("h3",[e._v("Done!")])]),a("template",{slot:"complete-content"},[a("p",[e._v(" Your Dataplane "),e.validate.k8sNamespaceSelection?a("strong",[e._v(" "+e._s(e.validate.k8sNamespaceSelection)+" ")]):e._e(),e._v(" was found! ")]),a("p",[e._v(" Proceed to the next step where we will show you your new Dataplane. ")]),a("p",[a("KButton",{attrs:{appearance:"primary"},on:{click:e.compeleteDataPlaneSetup}},[e._v(" View Your Dataplane ")])],1)]),a("template",{slot:"error-title"},[a("h3",[e._v("Mesh not found")])]),a("template",{slot:"error-content"},[a("p",[e._v("We were unable to find your mesh.")])])],2)],1):a("KAlert",{attrs:{appearance:"danger"}},[a("template",{slot:"alertMessage"},[a("p",[e._v(" Please return to the first step and make sure to select an existing Mesh, or create a new one. ")])])],2)],1),a("template",{slot:"dataplane"},[a("h3",[e._v("Dataplane")]),a("p",[e._v(" In "+e._s(e.title)+", a Dataplane resource represents a data plane proxy running alongside one of your services. Data plane proxies can be added in any Mesh that you may have created, and in Kubernetes, they will be auto-injected by "+e._s(e.title)+". ")])]),a("template",{slot:"example"},[a("h3",[e._v("Example")]),a("p",[e._v(" Below is an example of a Dataplane resource output: ")]),a("code",[a("pre",[e._v("apiVersion: 'kuma.io/v1alpha1'\nkind: Dataplane\nmesh: default\nmetadata:\n  name: dp-echo-1\n  annotations:\n    kuma.io/sidecar-injection: enabled\n    kuma.io/mesh: default\nnetworking:\n  address: 10.0.0.1\n  inbound:\n  - port: 10000\n    servicePort: 9000\n    tags:\n      kuma.io/service: echo")])])]),a("template",{slot:"switch"},[a("Switcher")],1)],2)],1)])},n=[],i=(a("b0c0"),a("d3b7"),a("ac1f"),a("5319"),a("498a"),a("f3f3")),r=a("2f62"),o=a("16a3"),l=a("1373"),d=a("2791"),c=a("251b"),p=a("4c4d"),u=a("e108"),m=a("12d5"),v=a("c3b5"),h=a("b9af"),g=a.n(h),k={name:"DataplaneWizardKubernetes",metaInfo:{title:"Create a new Dataplane on Kubernetes"},components:{FormFragment:d["a"],Tabs:c["a"],StepSkeleton:p["a"],Switcher:u["a"],CodeView:m["a"],Scanner:v["a"]},mixins:[l["a"],o["a"]],data:function(){return{schema:g.a,steps:[{label:"General",slug:"general"},{label:"Scope Settings",slug:"scope-settings"},{label:"Install",slug:"complete"}],tabs:[{hash:"#kubernetes",title:"Kubernetes"}],sidebarContent:[{name:"dataplane"},{name:"example"},{name:"switch"}],startScanner:!1,scanFound:!1,hideScannerSiblings:!1,scanError:!1,isComplete:!1,validate:{meshName:"",k8sDataplaneType:"dataplane-type-service",k8sServices:"all-services",k8sNamespace:"",k8sNamespaceSelection:"",k8sServiceDeployment:"",k8sServiceDeploymentSelection:"",k8sIngressDeployment:"",k8sIngressDeploymentSelection:"",k8sIngressType:"",k8sIngressBrand:"kong-ingress",k8sIngressSelection:""},vmsg:[]}},computed:Object(i["a"])(Object(i["a"])({},Object(r["c"])({title:"getTagline",version:"getVersion",environment:"getEnvironment",formData:"getStoredWizardData",selectedTab:"getSelectedTab",meshes:"getMeshList"})),{},{dataplaneUrl:function(){"".concat(window.location.origin,"/#");var e=this.validate;return!(!e.meshName||!e.k8sNamespaceSelection)&&{name:"dataplanes",params:{mesh:e.meshName}}},codeOutput:function(){var e=Object.assign({},this.schema),t=this.validate.k8sNamespaceSelection;if(t){e.metadata.name=t,e.metadata.namespace=t,e.metadata.annotations["kuma.io/mesh"]=this.validate.meshName;var a='" | kubectl apply -f - && kubectl delete pod --all -n '.concat(t),s=this.formatForCLI(e,a);return s}},nextDisabled:function(){var e=this.validate,t=e.k8sNamespaceSelection,a=e.meshName;return!a.length||"1"===this.$route.query.step&&!t}}),watch:{"validate.k8sNamespaceSelection":function(e){var t=e.replace(/[^a-zA-Z0-9 -]/g,"").replace(/\s+/g,"-").replace(/-+/g,"-").trim();this.validate.k8sNamespaceSelection=t},$route:function(){var e=this.$route.query.step;1===e&&(this.validate.k8sNamespaceSelection?this.nextDisabled=!1:this.nextDisabled=!0)}},methods:{hideSiblings:function(){this.hideScannerSiblings=!0},scanForEntity:function(){var e=this,t=this.validate,a=t.meshName,s=this.validate.k8sNamespaceSelection;this.scanComplete=!1,this.scanError=!1,a&&s&&this.$api.getDataplaneFromMesh(a,s).then((function(t){t&&t.name.length>0?(e.isRunning=!0,e.scanFound=!0):e.scanError=!0})).catch((function(t){e.scanError=!0,console.error(t)})).finally((function(){e.scanComplete=!0}))},compeleteDataPlaneSetup:function(){this.$store.dispatch("updateSelectedMesh",this.validate.meshName),localStorage.setItem("selectedMesh",this.validate.meshName),this.$router.push({name:"dataplanes",params:{mesh:this.validate.meshName}})}}},y=k,b=(a("32c3"),a("2877")),f=Object(b["a"])(y,s,n,!1,null,"158755a5",null);t["default"]=f.exports},b9af:function(e,t,a){"use strict";e.exports={apiVersion:"v1",kind:"Namespace",metadata:{name:null,namespace:null,annotations:{"kuma.io/sidecar-injection":"enabled","kuma.io/mesh":null}}}},c1f9:function(e,t,a){},e108:function(e,t,a){"use strict";var s=function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"wizard-switcher"},[a("KEmptyState",{ref:"emptyState",staticClass:"my-6 wizard-empty-state",attrs:{"cta-is-hidden":"","is-error":!e.environment}},["kubernetes"===e.environment||"universal"===e.environment?a("template",{slot:"title"},[e._v(" Running on "),a("span",{staticClass:"env-name"},[e._v(e._s(e.environment))])]):e._e(),a("template",{slot:"message"},["kubernetes"===e.environment?a("div",[this.$route.name===e.wizardRoutes.kubernetes?a("div",[a("p",[e._v(" We have detected that you are running on a "),a("strong",[e._v("Kubernetes environment")]),e._v(", and we are going to be showing you instructions for Kubernetes unless you decide to visualize the instructions for Universal. ")]),a("p",[a("KButton",{attrs:{to:{name:e.wizardRoutes.universal},appearance:"primary"}},[e._v(" Switch to Universal instructions ")])],1)]):this.$route.name===e.wizardRoutes.universal?a("div",[a("p",[e._v(" We have detected that you are running on a "),a("strong",[e._v("Kubernetes environment")]),e._v(", but you are viewing instructions for Universal. ")]),a("p",[a("KButton",{attrs:{to:{name:e.wizardRoutes.kubernetes},appearance:"primary"}},[e._v(" Switch back to Kubernetes instructions ")])],1)]):e._e()]):"universal"===e.environment?a("div",[this.$route.name===e.wizardRoutes.kubernetes?a("div",[a("p",[e._v(" We have detected that you are running on a "),a("strong",[e._v("Universal environment")]),e._v(", but you are viewing instructions for Kubernetes. ")]),a("p",[a("KButton",{attrs:{to:{name:e.wizardRoutes.universal},appearance:"primary"}},[e._v(" Switch back to Universal instructions ")])],1)]):this.$route.name===e.wizardRoutes.universal?a("div",[a("p",[e._v(" We have detected that you are running on a "),a("strong",[e._v("Universal environment")]),e._v(", and we are going to be showing you instructions for Universal unless you decide to visualize the instructions for Kubernetes. ")]),a("p",[a("KButton",{attrs:{to:{name:e.wizardRoutes.kubernetes},appearance:"primary"}},[e._v(" Switch to Kubernetes instructions ")])],1)]):e._e()]):e._e()])],2)],1)},n=[],i=a("f3f3"),r=a("2f62"),o={name:"Switcher",data:function(){return{wizardRoutes:{kubernetes:"kubernetes-dataplane",universal:"universal-dataplane"}}},computed:Object(i["a"])(Object(i["a"])({},Object(r["c"])({environment:"getEnvironment"})),{},{instructionsCtaText:function(){return"universal"===this.environment?"Switch to Kubernetes instructions":"Switch to Universal instructions"},instructionsCtaRoute:function(){return"kubernetes"===this.environment?{name:"universal-dataplane"}:{name:"kubernetes-dataplane"}}})},l=o,d=(a("259a"),a("2877")),c=Object(d["a"])(l,s,n,!1,null,"74db9631",null);t["a"]=c.exports}}]);