---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: meshtraces.kuma.io
spec:
  group: kuma.io
  names:
    categories:
    - kuma
    kind: MeshTrace
    listKind: MeshTraceList
    plural: meshtraces
    singular: meshtrace
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma MeshTrace resource.
            properties:
              default:
                properties:
                  backends:
                    items:
                      properties:
                        datadog:
                          description: a mirror of api/mesh/v1alpha1/mesh.proto DatadogTracingBackendConfig
                            / ZipkinTracingBackendConfig make generate/policies failed
                            when trying to re-use these
                          properties:
                            address:
                              description: Address of datadog collector.
                              type: string
                            port:
                              description: Port of datadog collector
                              format: int32
                              type: integer
                          type: object
                        zipkin:
                          description: only one of zipkin or datadog can be used
                          properties:
                            apiVersion:
                              description: 'Version of the API. values: httpJson,
                                httpJsonV1, httpProto. Default: httpJson see https://github.com/envoyproxy/envoy/blob/v1.22.0/api/envoy/config/trace/v3/zipkin.proto#L66'
                              type: string
                            sharedSpanContext:
                              description: 'Determines whether client and server spans
                                will share the same span context. Default: true. https://github.com/envoyproxy/envoy/blob/v1.22.0/api/envoy/config/trace/v3/zipkin.proto#L63'
                              properties:
                                value:
                                  description: The bool value.
                                  type: boolean
                              type: object
                            traceId128bit:
                              description: 'Generate 128bit traces. Default: false'
                              type: boolean
                            url:
                              description: Address of Zipkin collector.
                              type: string
                          type: object
                      type: object
                    type: array
                  sampling:
                    properties:
                      client:
                        type: number
                      overall:
                        type: number
                      random:
                        type: number
                    type: object
                  tags:
                    items:
                      properties:
                        header:
                          properties:
                            default:
                              type: string
                            name:
                              type: string
                          type: object
                        literal:
                          description: only one of literal or header can be used
                          type: string
                        name:
                          type: string
                      type: object
                    type: array
                type: object
              targetRef:
                description: TargetRef is a reference to the resource the policy takes
                  an effect on. The resource could be either a real store object or
                  virtual resource defined inplace.
                properties:
                  kind:
                    description: Kind of the referenced resource
                    enum:
                    - Mesh
                    - MeshSubset
                    - MeshService
                    - MeshServiceSubset
                    - MeshGatewayRoute
                    - MeshHTTPRoute
                    type: string
                  mesh:
                    description: Mesh is used with MeshService and MeshServiceSubset
                      to identify the service from another mesh. Could be useful when
                      implementing policies with cross-mesh support.
                    type: string
                  name:
                    description: Name of the referenced resource
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Tags are used with MeshSubset and MeshServiceSubset
                      to define a subset of proxies
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
