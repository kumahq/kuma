{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "kumahq/kuma:active-branches",
    "Kong/public-shared-renovate",
    "Kong/public-shared-renovate//scoped/kuma/go-control-plane",
    "Kong/public-shared-renovate//overrides/security-labels(area/security)",
    "Kong/public-shared-renovate//overrides/security-reviewers(team:kuma-security-managers)",
    ":automergeRequireAllStatusChecks",
    ":automergeMinor",
    ":automergePatch",
    ":combinePatchMinorReleases",
    ":disableRateLimiting",
    ":semanticCommitTypeAll(chore)",
    "docker:pinDigests",
    "schedule:earlyMondays"
  ],
  "ignorePresets": [
    ":ignoreModulesAndTests",
    "customManagers:dockerfileVersions",
    "customManagers:helmChartYamlAppVersions",
    "customManagers:tfvarsVersions"
  ],
  "enabledManagers": [
    "custom.regex",
    "dockerfile",
    "github-actions",
    "gomod",
    "helm-values",
    "kubernetes",
    "mise"
  ],
  "automergeStrategy": "squash",
  "internalChecksFilter": "strict",
  "keepUpdatedLabel": "renovate/keep-updated",
  "rebaseWhen": "conflicted",
  "prTitleStrict": true,
  "vulnerabilityAlerts": {"commitMessageSuffix": ""},
  "kubernetes": {
    "description": [
      " Update container image tags in Kubernetes manifests installed via",
      " 'kumactl install demo|observability'. Limits matching to the generated YAML under",
      " app/kumactl/data/install/k8s/"
    ],
    "managerFilePatterns": ["/app/kumactl/(?:cmd|data)/install/(?:k8s|testdata)/.+\\.ya?ml$/"]
  },
  "customManagers": [
    {
      "customType": "regex",
      "description": [
        " Parse version pins in Makefiles and .mk files using an inline Renovate hint placed above",
        " a VERSION-like variable assignment. The following line must assign a version variable,",
        " e.g.: 'OAPI_TOOL_VERSION ?= v1.1.7@sha256:â€¦' or 'export FOO_VERSION := \"1.2.3\"'",
        "",
        " The regex extracts:",
        " - depName (required)",
        " - packageName (optional)",
        " - extractVersion (optional)",
        " - registryUrl (optional)",
        " - currentValue (version or tag, quotes optional)",
        " - currentDigest (sha256) if present after '@' (Docker-specific)",
        "",
        " The defined datasource determines update behavior. Versioning is inferred automatically,",
        " but can be overridden via '/<versioning>' after the datasource name. This enables",
        " Renovate to suggest accurate updates - bumping tags, versions, and for Docker, updating",
        " both the tag and digest",
        "",
        " See mk/docs.mk for an example in use.",
        "",
        " Hint syntax:",
        " # renovate[<datasource>[/<versioning>]]: depName=<name> [packageName=<name>] [extractVersion=<expr>] [registryUrl=<url>]"
      ],
      "managerFilePatterns": [
        "/(^|/)[Mm]akefile$/",
        "/\\.mk$/"
      ],
      "matchStrings": [
        "# renovate\\[(?<datasource>[0-9a-z-]+)(?:/(?<versioning>[0-9a-z-]+))?\\]: depName=(?<depName>\\S+?)(?: packageName=(?<packageName>\\S+?))?(?: extractVersion=(?<extractVersion>\\S+?))?(?: registryUrl=(?<registryUrl>\\S+?))?\\s+(?:export )?[A-Za-z0-9_]+?_VERSION\\s*:*\\??=\\s*[\"']?(?<currentValue>[^@\\s\"']+)(?:@(?<currentDigest>sha256:[0-9a-f]{64}))?[\"']?"
      ],
      "versioningTemplate": "{{#if versioning}}{{versioning}}{{else if (or (includes (toArray 'docker' 'helm' 'npm' 'kubernetes-api') datasource))}}{{datasource}}{{else if (equals datasource 'node-version')}}node{{else if (equals datasource 'crate')}}cargo{{else if (or (includes (toArray 'go' 'golang-version') datasource))}}semver{{else}}semver-coerced{{/if}}"
    }
  ],
  "packageRules": [
    {
      "description": [
        " For PRs targeting branches other than 'main' or 'master', add a label with",
        " the base branch name (e.g. 'release-2.8') so reviewers can quickly identify",
        " which release branch the PR targets"
      ],
      "matchBaseBranches": ["!/(?:master|main)/"],
      "addLabels": ["{{baseBranch}}"]
    },
    {
      "description": [
        " Show 'Adoption' instead of 'Confidence' in PR body tables for Go updates"
      ],
      "matchDatasources": ["go"],
      "matchUpdateTypes": ["patch", "minor", "major"],
      "prBodyColumns": ["Package", "Type", "Change", "Age", "Adoption"]
    },
    {
      "description": [
        " Update golden test YAML under app/kumactl/cmd/install/testdata to the correct",
        " image versions in the same Renovate run/PR. Combined with the kubernetes",
        " managerFilePatterns, this keeps golden files in sync so we don't have to update them",
        " manually"
      ],
      "matchManagers": ["kubernetes"],
      "matchPackageNames": ["gcr.io/octo/**", "docker.io/{kumahq,[Kk]ong}/**", "kuma-ci/**"],
      "matchFileNames": ["/app/kumactl/cmd/install/testdata/.+\\.ya?ml$/"],
      "enabled": false
    },
    {
      "description": [
        " Disable 'kubernetes-api' updates (e.g. apiVersion fields like 'rbac.authorization.k8s.io/v1')",
        " in golden test manifests under app/kumactl/cmd/install/testdata so Renovate does not rewrite",
        " Kubernetes API versions in test data"
      ],
      "matchDatasources": ["kubernetes-api"],
      "matchFileNames": ["/app/kumactl/cmd/install/testdata/.+\\.ya?ml$/"],
      "enabled": false
    },
    {
      "description": [
        " Group related container image updates in the 'kumactl install demo|observability'",
        " Kubernetes manifests so they land in a single PR"
      ],
      "matchFileNames": ["app/kumactl/{cmd,data}/install/{k8s,testdata}/**"],
      "groupName": "kumactl install demo|observability images",
      "groupSlug": "kumactl-install-k8s",
      "prFooter": "> Changelog: skip"
    },
    {
      "description": [
        " For GitHub Actions dependency updates, add a 'ci/skip-test' label and use a terse PR",
        " body/footer so these routine workflow bumps don't trigger full CI or clutter the",
        " changelog"
      ],
      "matchManagers": ["github-actions"],
      "addLabels": ["ci/skip-test"],
      "prFooter": "> Changelog: skip"
    },
    {
      "description": [
        "Treat updates to shared Kong GitHub Actions (tracked by the regex manager) like other",
        "workflow bumps: apply the 'ci/skip-test' label to avoid unnecessary test runs, wait 24h",
        "before proposing updates to catch issues with freshly published tags and reduce churn,",
        "and add a 'Changelog: skip' footer to avoid release-notes noise"
      ],
      "matchManagers": ["custom.regex"],
      "matchPackageNames": ["*/public-shared-actions/**"],
      "minimumReleaseAge": "24h",
      "addLabels": ["ci/skip-test"],
      "prFooter": "> Changelog: skip"
    },
    {
      "description": [
        " For GitHub Actions workflow updates to 'ci-tools/release-tool' under '.github/workflows/**':",
        " add the 'ci/skip-test' label so these workflow-only bumps don't run the full test matrix"
      ],
      "matchFileNames": [".github/workflows/**"],
      "matchDepNames": ["ci-tools/release-tool"],
      "addLabels": ["ci/skip-test"]
    },
    {
      "description": [
        "Apply a 24h minimumReleaseAge to dependencies from the 'kumahq' GitHub org",
        "(matching both 'kumahq/*' and 'github.com/kumahq/*'). Unlike the default 12-day delay,",
        "this shorter window gives us enough time to catch mistakes or regressions in freshly",
        "published tags, while still allowing fixes to flow quickly once releases stabilize"
      ],
      "matchPackageNames": ["{github.com/,}kumahq/*"],
      "minimumReleaseAge": "24h"
    },
    {
      "description": [
        " For mise-managed dev tools: use semantic commit scope 'deps/dev' for individual",
        " (non-grouped) PRs, and 'deps' when updates are grouped. Add a '> Changelog: skip' footer",
        " to individual PRs only, keeping routine tool bumps out of the main changelog without",
        " affecting grouped PRs"
      ],
      "matchManagers": ["mise"],
      "semanticCommitScope": "deps{{#unless isGroup}}/dev{{/unless}}",
      "prFooter": "{{#unless isGroup}}> Changelog: skip{{/unless}}"
    },
    {
      "description": [
        " Extract the version for 'aqua:grpc/grpc-go/protoc-gen-go-grpc' from its command path",
        " so Renovate can correctly detect and propose updates for this tool"
      ],
      "matchDepNames": ["aqua:grpc/grpc-go/protoc-gen-go-grpc"],
      "extractVersion": "^cmd/protoc-gen-go-grpc/(?<version>.*)$"
    },
    {
      "description": [
        " Group dependency bumps from selected GitHub sources into a single PR across managers",
        " (e.g., mise and gomod) to avoid separate PRs per manager"
      ],
      "matchSourceUrls": ["https://github.com/{onsi/ginkgo,golangci/golangci-lint,helm/helm}"],
      "groupName": "{{{replace 'https://github\\.com/[a-z-]+/' '' sourceUrl}}}"
    },
    {
      "description": [
        " Group kubectl updates (registry.k8s.io/kubectl or standalone 'kubectl') into a single PR",
        " across managers"
      ],
      "matchDepNames": ["{registry.k8s.io/,}kubectl"],
      "groupName": "kubectl"
    },
    {
      "description": [
        " Apply the 'immediately' helper for all dependencies from the 'kumahq' org (matching both",
        " 'kumahq/*' and 'github.com/kumahq/*') so Renovate proposes updates as soon as they're",
        " available, without waiting for the default release-age delay. This lets us consume our own",
        " releases quickly while other third-party dependencies continue to observe their configured",
        " delays"
      ],
      "matchPackageNames": ["{,github.com/}kumahq/**"],
      "extends": ["Kong/public-shared-renovate//helpers/immediately"]
    },
    {
      "description": [
        " Disable all dependency updates by default on 'release-*' branches to keep",
        " those branches stable and predictable"
      ],
      "matchBaseBranches": ["release-*"],
      "matchPackageNames": ["*"],
      "enabled": false
    },
    {
      "description": [
        " Exception for release branches: allow patch-level updates to 'envoy' so we can pick up",
        " bugfixes and security patches without enabling all updates"
      ],
      "matchBaseBranches": ["release-*"],
      "matchDepNames": ["envoy"],
      "matchUpdateTypes": ["patch"],
      "enabled": true
    },
    {
      "description": [
        " Catch-all rule that applies the standard commit message format for all dependencies",
        "",
        " This rule extends the shared baseline preset to ensure consistent commit message",
        " action/topic/extra rendering across all updates. It must be the last packageRule",
        " in renovate.json, so it takes precedence after any more specific rules."
      ],
      "matchDepNames": "*",
      "extends": ["Kong/public-shared-renovate//scoped/kuma/commit-message-baseline"]
    }
  ]
}
