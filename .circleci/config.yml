version: 2

go-defaults: &go-defaults
  working_directory: /go/src/github.com/Kong/konvoy
  docker:
  - image: golang:1.12.5
  environment:
    GO111MODULE: "on"

remote-docker-defaults: &remote-docker-defaults
  docker:
  - image: circleci/golang:1.12

vm-executor-defaults: &vm-executor-defaults
  machine:
    image: ubuntu-1604:201903-01

mac-executor-defaults: &mac-executor-defaults
  macos:
    xcode: "9.0"

jobs:
  kcp/dev/golang:
    docker:
    - image: golang:1.12.5
    environment:
      GO111MODULE: "on"
    steps:
    - checkout
    - run:
        name: "Install all development tools"
        command: make dev/tools -C components/konvoy-control-plane

  kcp/dev/ubuntu:
    docker:
    - image: ubuntu:16.04
    environment:
      GO_VERSION: 1.12.5
      GO111MODULE: "on"
    steps:
    - checkout
    - run:
        name: "Install Go"
        command: |
          apt update && apt install -y curl git make
          # see https://golang.org/doc/install#tarball
          curl -L https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz | tar -xz -C $HOME
    - run:
        name: "Install all development tools"
        command: |
          export PATH=$HOME/go/bin:$PATH
          make dev/tools -C components/konvoy-control-plane

  kcp/dev/mac:
    <<: *mac-executor-defaults
    environment:
      GO_VERSION: 1.12.5
      GO111MODULE: "on"
    steps:
    - checkout
    - run:
        name: "Install Go"
        command: |
          # see https://golang.org/doc/install#tarball
          curl -L https://dl.google.com/go/go${GO_VERSION}.darwin-amd64.tar.gz | tar -xz -C $HOME
    - run:
        name: "Install all development tools"
        command: |
          export PATH=$HOME/go/bin:$PATH
          make dev/tools -C components/konvoy-control-plane

  kcp/check:
    <<: *go-defaults
    steps:
    - checkout
    - restore_cache:
        keys:
        - konvoy-control-plane/go.mod/{{ checksum "components/konvoy-control-plane/go.sum" }}
    - run: make check -C components/konvoy-control-plane
    - save_cache:
        key: konvoy-control-plane/go.mod/{{ checksum "components/konvoy-control-plane/go.sum" }}
        paths:
          - "/go/pkg/mod"

  kcp/build:
    <<: *go-defaults
    steps:
    - checkout
    - restore_cache:
        keys:
        - konvoy-control-plane/go.mod/{{ checksum "components/konvoy-control-plane/go.sum" }}
    - run: make build -C components/konvoy-control-plane
    - save_cache:
        key: konvoy-control-plane/go.mod/{{ checksum "components/konvoy-control-plane/go.sum" }}
        paths:
          - "/go/pkg/mod"

  kcp/image:
    <<: *remote-docker-defaults
    steps:
    - checkout
    - setup_remote_docker
    - run: make image -C components/konvoy-control-plane

  kcp/example/docker-compose:
    <<: *vm-executor-defaults
    steps:
    - checkout
    - run:
        name: Start Docker Compose setup
        command: make run/example/docker-compose -C components/konvoy-control-plane DOCKER_COMPOSE_OPTIONS=--detach
    - run:
        name: Wait until Envoy listener gets configured
        command: make wait/example/docker-compose -C components/konvoy-control-plane
    - run:
        name: Make test requests via Envoy
        command: make curl/example/docker-compose -C components/konvoy-control-plane
    - run:
        name: Verify Envoy stats
        command: make verify/example/docker-compose -C components/konvoy-control-plane

  kcp/example/minikube:
    <<: *vm-executor-defaults
    steps:
    - checkout
    - run:
        name: Install Minikube
        command: make dev/install/minikube -C components/konvoy-control-plane
    - run:
        name: Install Kubectl
        command: make dev/install/kubectl -C components/konvoy-control-plane
    - run:
        name: Start Minikube
        command: sudo CHANGE_MINIKUBE_NONE_USER=true $HOME/bin/minikube start --vm-driver=none
    - run:
        name: Build Control Plane
        command: make build/example/minikube -C components/konvoy-control-plane
    - run:
        name: Deploy Konvoy demo
        command: make deploy/example/minikube -C components/konvoy-control-plane
    - run:
        name: Wait until Envoy listener gets configured
        command: make wait/example/minikube -C components/konvoy-control-plane
    - run:
        name: Make test requests via Envoy
        command: make curl/example/minikube -C components/konvoy-control-plane
    - run:
        name: Verify Envoy stats
        command: make verify/example/minikube -C components/konvoy-control-plane

workflows:
  version: 2
  konvoy-control-plane:
    jobs:
    - kcp/dev/golang
    - kcp/dev/mac
    - kcp/dev/ubuntu
    - kcp/check
    - kcp/build:
        requires:
        - kcp/check
    - kcp/image:
        requires:
        - kcp/build
    - kcp/example/docker-compose:
        requires:
        - kcp/build
    - kcp/example/minikube:
        requires:
        - kcp/build
