---
apiVersion: v1
kind: Namespace
metadata:
  name: kuma-example
  labels:
    kuma.io/sidecar-injection: enabled

---
apiVersion: v1
kind: Service
metadata:
  name: kuma-example-web
  namespace: kuma-example
spec:
  ports:
  - port: 6060
    name: http
  selector:
    app: kuma-example-web
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-example-web
  namespace: kuma-example
  labels:
    app: kuma-example-web
    version: v8
    env: prod
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: kuma-example-web
      version: v8
      env: prod
  template:
    metadata:
      labels:
        app: kuma-example-web
        version: v8
        env: prod
    spec:
      containers:
      - name: kuma-example-web
        image: kong-docker-kuma-ci-docker.bintray.io/curl
        imagePullPolicy: IfNotPresent
        command:
        - nc
        - -lk
        - -s
        - 0.0.0.0
        - -p
        - "6060"
        - -e
        - curl
        - --silent
        - --show-error
        - --include
        - --fail
        - http://kuma-example-backend:7070/version
        ports:
        - containerPort: 6060
        livenessProbe:
          exec:
            command:
            - wget
            - -qO-
            - http://localhost:6060
        readinessProbe:
          exec:
            command:
            - wget
            - -qO-
            - http://localhost:6060
        resources:
          requests:
            cpu: 50m
            memory: 64Mi

---
apiVersion: v1
kind: Service
metadata:
  name: kuma-example-backend
  namespace: kuma-example
  annotations:
    8080.service.kuma.io/protocol: http
spec:
  ports:
  - port: 7070
    name: tcp
  - port: 8080
    name: http
    targetPort: 7070
  selector:
    app: kuma-example-backend
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kuma-example-backend-config
  namespace: kuma-example
data:
  backend.yaml: |
    #
    # HTTP server that serves static responses
    #
    static_resources:
      listeners:
      - name: main
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 7070
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            config:
              stat_prefix: ingress_http
              codec_type: auto
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/"
                    direct_response:
                      status: 200
                      body:
                        filename: /tmp/response.json
              http_filters:
              - name: envoy.router
                config: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-example-backend-v1
  namespace: kuma-example
  labels:
    app: kuma-example-backend
    version: v1
    env: prod
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: kuma-example-backend
      version: v1
      env: prod
  template:
    metadata:
      labels:
        app: kuma-example-backend
        version: v1
        env: prod
    spec:
      containers:
      - name: kuma-example-backend
        image: envoyproxy/envoy-alpine:v1.14.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 7070
        command:
        - sh
        - -c
        - echo '{"version":"v1"}' >/tmp/response.json ; envoy -c /etc/envoy/backend.yaml
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
        volumeMounts:
        - name: kuma-example-backend-config
          mountPath: /etc/envoy
      volumes:
      - name: kuma-example-backend-config
        configMap:
          name: kuma-example-backend-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-example-backend-v2
  namespace: kuma-example
  labels:
    app: kuma-example-backend
    version: v2
    env: intg
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: kuma-example-backend
      version: v2
      env: prod
  template:
    metadata:
      labels:
        app: kuma-example-backend
        version: v2
        env: prod
    spec:
      containers:
      - name: kuma-example-backend
        image: envoyproxy/envoy-alpine:v1.14.2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 7070
        command:
        - sh
        - -c
        - echo '{"version":"v2"}' >/tmp/response.json ; envoy -c /etc/envoy/backend.yaml
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
        volumeMounts:
        - name: kuma-example-backend-config
          mountPath: /etc/envoy
      volumes:
      - name: kuma-example-backend-config
        configMap:
          name: kuma-example-backend-config
