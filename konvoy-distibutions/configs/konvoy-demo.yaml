#
# Sample Envoy configuration that includes Konvoy filter and demo gRPC Server
#
admin:
  # Support CPU Profiling
  profile_path: /tmp/envoy.prof
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      protocol: TCP
      address: 127.0.0.1
      port_value: 9901
static_resources:
  listeners:
  # Konvoy http filter
  - name: listener_0
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 10000
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                route:
                  host_rewrite: mockbin.org
                  cluster: service_mockbin
          http_filters:
          #
          # Konvoy filter to pipe HTTP request through a side car process
          #
          - name: konvoy
            typed_config:
              "@type": type.googleapis.com/envoy.config.filter.http.konvoy.v2alpha.Konvoy
              stat_prefix: demo-grpc-server
              grpc_service:
                envoy_grpc:
                  cluster_name: konvoy_demo_side_car
              per_service_config:
                # Configuration specific to a custom "Http Konvoy" Service implementation,
                # i.e. "Demo Http Konvoy" Service.
                http_konvoy:
                  # If Envoy gets configured via a YAML/JSON file, one should use `google.protobuf.Struct`
                  # instead of a Proto type natively supported by a particular Konvoy Server.
                  # Otherwise, Envoy will fail on start up.
                  # The reason for that is that Envoy is trying to convert YAML/JSON configuration into a Proto message
                  # of type `@type` and crashes since that Proto type is not known to him.
                  # E.g., `demo-grpc-server` uses Proto type `com.konghq.konvoy.demo.http.DemoHttpKonvoyConfiguration`
                  # to represent its configuration. However, Envoy has no access to that Proto definition.
                  "@type": type.googleapis.com/google.protobuf.Struct
                  value:
                    # HTTP request header to inject
                    header_name: via-konvoy-service
                    header_value: demo-http-konvoy
          - name: envoy.router
  # Konvoy network filter
  - name: listener_1
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 10001
    filter_chains:
    - filters:
      #
      # Konvoy filter to pipe L4 payload data through a side car process
      #
      - name: konvoy
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.konvoy.v2alpha.Konvoy
          stat_prefix: demo-grpc-server
          grpc_service:
            envoy_grpc:
              cluster_name: konvoy_demo_side_car
          per_service_config:
            # Configuration specific to a custom "Network Konvoy" Service implementation,
            # i.e. "Demo Network Konvoy" Service.
            network_konvoy:
              # If Envoy gets configured via a YAML/JSON file, one should use `google.protobuf.Struct`
              # instead of a Proto type natively supported by a particular Konvoy Server.
              # Otherwise, Envoy will fail on start up.
              # The reason for that is that Envoy is trying to convert YAML/JSON configuration into a Proto message
              # of type `@type` and crashes since that Proto type is not known to him.
              # E.g., `demo-grpc-server` uses Proto type `com.konghq.konvoy.demo.network.DemoNetworkKonvoyConfiguration`
              # to represent its configuration. However, Envoy has no access to that Proto definition.
              "@type": type.googleapis.com/google.protobuf.Struct
              value:
                # Delay to apply
                fixed_delay: 2s
      - name: envoy.tcp_proxy
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.tcp_proxy.v2.TcpProxy
          stat_prefix: post_konvoy_tcp_proxy
          cluster: service_mockbin
  clusters:
  #
  # "Http Konvoy" and "Network Konvoy" gRPC Services deployed as a side car process
  #
  - name: konvoy_demo_side_car
    connect_timeout: 0.25s
    type: STATIC
    dns_lookup_family: V4_ONLY
    hosts:
    - socket_address:
        address: 127.0.0.1
        port_value: 8980
    lb_policy: ROUND_ROBIN
    http2_protocol_options: {}
  - name: service_mockbin
    connect_timeout: 5s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: service_mockbin
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: mockbin.org
                port_value: 443
    tls_context:
      sni: mockbin.org

