// Package types provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package types

// Defines values for InvalidParametersSource.
const (
	Body   InvalidParametersSource = "body"
	Header InvalidParametersSource = "header"
	Path   InvalidParametersSource = "path"
	Query  InvalidParametersSource = "query"
)

// Defines values for NotFoundErrorStatus.
const (
	N404 NotFoundErrorStatus = 404
)

// Error Standard error. Follows the [AIP #193 - Errors](https://kong-aip.netlify.app/aip/193/) specification.
type Error struct {
	// Detail A human readable explanation specific to this occurrence of the problem.
	// This field may contain request/entity data to help the user understand what went wrong.
	// Enclose variable values in square brackets.
	// _Should_ be provided as "Sentence case" for direct use in a UI
	Detail string `json:"detail"`

	// Instance Used to return the correlation ID back to the user, in the format `<app>:trace:<correlation_id>`.
	Instance string `json:"instance"`

	// InvalidParameters All 400 errors **MUST** return an `invalid_parameters` key in the response.
	// Used to indicate which fields have invalid values when validated.
	InvalidParameters *[]InvalidParameters `json:"invalid_parameters,omitempty"`

	// Status The HTTP status code.
	Status int `json:"status"`

	// Title A short, human-readable summary of the problem.
	// It **should not** change between occurrences of a problem, except for localization.
	// Should be provided as "Sentence case" for potential direct use in a UI
	Title string `json:"title"`

	// Type A unique identifier for this error. When dereferenced it must provide human-readable documentation for the problem.
	Type string `json:"type"`
}

// InvalidParameters defines model for InvalidParameters.
type InvalidParameters struct {
	// Choices Optional field to provide a list of valid choices for the field that caused the error.
	Choices *[]string `json:"choices,omitempty"`

	// Field The name of the field that caused the error.
	Field string `json:"field"`

	// Reason A short, human-readable description of the problem.
	// _Should_ be provided as "Sentence case" for direct use in a UI.
	Reason string `json:"reason"`

	// Rule May be provided as a hint to the user to help understand the type of failure.
	// Additional guidance may be provided in additional fields, i.e. `choices`.
	Rule *string `json:"rule,omitempty"`

	// Source The location of the field that caused the error.
	Source InvalidParametersSource `json:"source"`
}

// InvalidParametersSource The location of the field that caused the error.
type InvalidParametersSource string

// NotFoundError defines model for NotFoundError.
type NotFoundError struct {
	Detail string `json:"detail"`

	// Instance Used to return the correlation ID back to the user, in the format `<app>:trace:<correlation_id>`.
	Instance string `json:"instance"`

	// InvalidParameters All 400 errors **MUST** return an `invalid_parameters` key in the response.
	// Used to indicate which fields have invalid values when validated.
	InvalidParameters *[]InvalidParameters `json:"invalid_parameters,omitempty"`

	// Status The HTTP status code for NotFoundError MUST be 404.
	Status NotFoundErrorStatus `json:"status"`
	Title  string              `json:"title"`
	Type   string              `json:"type"`
}

// NotFoundErrorStatus The HTTP status code for NotFoundError MUST be 404.
type NotFoundErrorStatus int

// BadRequest Standard error. Follows the [AIP #193 - Errors](https://kong-aip.netlify.app/aip/193/) specification.
type BadRequest = Error

// Internal Standard error. Follows the [AIP #193 - Errors](https://kong-aip.netlify.app/aip/193/) specification.
type Internal = Error

// NotFound defines model for NotFound.
type NotFound = NotFoundError
