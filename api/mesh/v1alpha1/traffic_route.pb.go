// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: mesh/v1alpha1/traffic_route.proto

package v1alpha1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// TrafficRoute defines routing rules for L4 traffic.
type TrafficRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of selectors to match dataplanes that are sources of traffic.
	Sources []*Selector `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
	// List of selectors to match services that are destinations of traffic.
	//
	// Notice the difference between sources and destinations.
	// While the source of traffic is always a dataplane within a mesh,
	// the destination is a service that could be either within or outside
	// of a mesh.
	Destinations []*Selector `protobuf:"bytes,2,rep,name=destinations,proto3" json:"destinations,omitempty"`
	// Configuration for the route
	Conf *TrafficRoute_Conf `protobuf:"bytes,3,opt,name=conf,proto3" json:"conf,omitempty"`
}

func (x *TrafficRoute) Reset() {
	*x = TrafficRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mesh_v1alpha1_traffic_route_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficRoute) ProtoMessage() {}

func (x *TrafficRoute) ProtoReflect() protoreflect.Message {
	mi := &file_mesh_v1alpha1_traffic_route_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficRoute.ProtoReflect.Descriptor instead.
func (*TrafficRoute) Descriptor() ([]byte, []int) {
	return file_mesh_v1alpha1_traffic_route_proto_rawDescGZIP(), []int{0}
}

func (x *TrafficRoute) GetSources() []*Selector {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *TrafficRoute) GetDestinations() []*Selector {
	if x != nil {
		return x.Destinations
	}
	return nil
}

func (x *TrafficRoute) GetConf() *TrafficRoute_Conf {
	if x != nil {
		return x.Conf
	}
	return nil
}

// Split defines a destination with a weight assigned to it.
type TrafficRoute_Split struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Weight assigned to that destination.
	Weight uint32 `protobuf:"varint,1,opt,name=weight,proto3" json:"weight,omitempty"`
	// Selector to match individual endpoints that comprise that destination.
	//
	// Notice that an endpoint can be either inside or outside the mesh.
	// In the former case an endpoint corresponds to a dataplane,
	// in the latter case an endpoint is a black box.
	Destination map[string]string `protobuf:"bytes,2,rep,name=destination,proto3" json:"destination,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TrafficRoute_Split) Reset() {
	*x = TrafficRoute_Split{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mesh_v1alpha1_traffic_route_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficRoute_Split) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficRoute_Split) ProtoMessage() {}

func (x *TrafficRoute_Split) ProtoReflect() protoreflect.Message {
	mi := &file_mesh_v1alpha1_traffic_route_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficRoute_Split.ProtoReflect.Descriptor instead.
func (*TrafficRoute_Split) Descriptor() ([]byte, []int) {
	return file_mesh_v1alpha1_traffic_route_proto_rawDescGZIP(), []int{0, 0}
}

func (x *TrafficRoute_Split) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *TrafficRoute_Split) GetDestination() map[string]string {
	if x != nil {
		return x.Destination
	}
	return nil
}

// Conf defines the destination configuration
type TrafficRoute_Conf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of destinations with weights assigned to them.
	Split []*TrafficRoute_Split `protobuf:"bytes,1,rep,name=split,proto3" json:"split,omitempty"`
}

func (x *TrafficRoute_Conf) Reset() {
	*x = TrafficRoute_Conf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mesh_v1alpha1_traffic_route_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficRoute_Conf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficRoute_Conf) ProtoMessage() {}

func (x *TrafficRoute_Conf) ProtoReflect() protoreflect.Message {
	mi := &file_mesh_v1alpha1_traffic_route_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficRoute_Conf.ProtoReflect.Descriptor instead.
func (*TrafficRoute_Conf) Descriptor() ([]byte, []int) {
	return file_mesh_v1alpha1_traffic_route_proto_rawDescGZIP(), []int{0, 1}
}

func (x *TrafficRoute_Conf) GetSplit() []*TrafficRoute_Split {
	if x != nil {
		return x.Split
	}
	return nil
}

var File_mesh_v1alpha1_traffic_route_proto protoreflect.FileDescriptor

var file_mesh_v1alpha1_traffic_route_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f,
	0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x12, 0x6b, 0x75, 0x6d, 0x61, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1c, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d,
	0x04, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12,
	0x40, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6b, 0x75, 0x6d, 0x61, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x12, 0x4a, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6b, 0x75, 0x6d, 0x61, 0x2e, 0x6d,
	0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52,
	0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x43, 0x0a,
	0x04, 0x63, 0x6f, 0x6e, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6b, 0x75,
	0x6d, 0x61, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x63, 0x6f,
	0x6e, 0x66, 0x1a, 0xd9, 0x01, 0x0a, 0x05, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x12, 0x1f, 0x0a, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x2a, 0x02, 0x28, 0x00, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x6f, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x37, 0x2e, 0x6b, 0x75, 0x6d, 0x61, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x14, 0xfa, 0x42, 0x11,
	0x9a, 0x01, 0x0e, 0x08, 0x01, 0x22, 0x04, 0x72, 0x02, 0x10, 0x01, 0x2a, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x3e,
	0x0a, 0x10, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4e,
	0x0a, 0x04, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x46, 0x0a, 0x05, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6b, 0x75, 0x6d, 0x61, 0x2e, 0x6d, 0x65, 0x73,
	0x68, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x05, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x42, 0x2a,
	0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x75, 0x6d,
	0x61, 0x68, 0x71, 0x2f, 0x6b, 0x75, 0x6d, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x65, 0x73,
	0x68, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_mesh_v1alpha1_traffic_route_proto_rawDescOnce sync.Once
	file_mesh_v1alpha1_traffic_route_proto_rawDescData = file_mesh_v1alpha1_traffic_route_proto_rawDesc
)

func file_mesh_v1alpha1_traffic_route_proto_rawDescGZIP() []byte {
	file_mesh_v1alpha1_traffic_route_proto_rawDescOnce.Do(func() {
		file_mesh_v1alpha1_traffic_route_proto_rawDescData = protoimpl.X.CompressGZIP(file_mesh_v1alpha1_traffic_route_proto_rawDescData)
	})
	return file_mesh_v1alpha1_traffic_route_proto_rawDescData
}

var file_mesh_v1alpha1_traffic_route_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_mesh_v1alpha1_traffic_route_proto_goTypes = []interface{}{
	(*TrafficRoute)(nil),       // 0: kuma.mesh.v1alpha1.TrafficRoute
	(*TrafficRoute_Split)(nil), // 1: kuma.mesh.v1alpha1.TrafficRoute.Split
	(*TrafficRoute_Conf)(nil),  // 2: kuma.mesh.v1alpha1.TrafficRoute.Conf
	nil,                        // 3: kuma.mesh.v1alpha1.TrafficRoute.Split.DestinationEntry
	(*Selector)(nil),           // 4: kuma.mesh.v1alpha1.Selector
}
var file_mesh_v1alpha1_traffic_route_proto_depIdxs = []int32{
	4, // 0: kuma.mesh.v1alpha1.TrafficRoute.sources:type_name -> kuma.mesh.v1alpha1.Selector
	4, // 1: kuma.mesh.v1alpha1.TrafficRoute.destinations:type_name -> kuma.mesh.v1alpha1.Selector
	2, // 2: kuma.mesh.v1alpha1.TrafficRoute.conf:type_name -> kuma.mesh.v1alpha1.TrafficRoute.Conf
	3, // 3: kuma.mesh.v1alpha1.TrafficRoute.Split.destination:type_name -> kuma.mesh.v1alpha1.TrafficRoute.Split.DestinationEntry
	1, // 4: kuma.mesh.v1alpha1.TrafficRoute.Conf.split:type_name -> kuma.mesh.v1alpha1.TrafficRoute.Split
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_mesh_v1alpha1_traffic_route_proto_init() }
func file_mesh_v1alpha1_traffic_route_proto_init() {
	if File_mesh_v1alpha1_traffic_route_proto != nil {
		return
	}
	file_mesh_v1alpha1_selector_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_mesh_v1alpha1_traffic_route_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mesh_v1alpha1_traffic_route_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficRoute_Split); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mesh_v1alpha1_traffic_route_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficRoute_Conf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mesh_v1alpha1_traffic_route_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mesh_v1alpha1_traffic_route_proto_goTypes,
		DependencyIndexes: file_mesh_v1alpha1_traffic_route_proto_depIdxs,
		MessageInfos:      file_mesh_v1alpha1_traffic_route_proto_msgTypes,
	}.Build()
	File_mesh_v1alpha1_traffic_route_proto = out.File
	file_mesh_v1alpha1_traffic_route_proto_rawDesc = nil
	file_mesh_v1alpha1_traffic_route_proto_goTypes = nil
	file_mesh_v1alpha1_traffic_route_proto_depIdxs = nil
}
