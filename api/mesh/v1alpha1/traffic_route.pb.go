// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mesh/v1alpha1/traffic_route.proto

package v1alpha1

import (
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// TrafficRoute defines routing rules for L4 traffic.
type TrafficRoute struct {
	// List of selectors to match dataplanes that are sources of traffic.
	Sources []*Selector `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
	// List of selectors to match services that are destinations of traffic.
	//
	// Notice the difference between sources and destinations.
	// While the source of traffic is always a dataplane within a mesh,
	// the destination is a service that could be either within or outside
	// of a mesh.
	Destinations []*Selector `protobuf:"bytes,2,rep,name=destinations,proto3" json:"destinations,omitempty"`
	// Configuration for the route
	Conf                 *TrafficRoute_Conf `protobuf:"bytes,3,opt,name=conf,proto3" json:"conf,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TrafficRoute) Reset()         { *m = TrafficRoute{} }
func (m *TrafficRoute) String() string { return proto.CompactTextString(m) }
func (*TrafficRoute) ProtoMessage()    {}
func (*TrafficRoute) Descriptor() ([]byte, []int) {
	return fileDescriptor_059271a05615c95f, []int{0}
}

func (m *TrafficRoute) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrafficRoute.Unmarshal(m, b)
}
func (m *TrafficRoute) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrafficRoute.Marshal(b, m, deterministic)
}
func (m *TrafficRoute) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrafficRoute.Merge(m, src)
}
func (m *TrafficRoute) XXX_Size() int {
	return xxx_messageInfo_TrafficRoute.Size(m)
}
func (m *TrafficRoute) XXX_DiscardUnknown() {
	xxx_messageInfo_TrafficRoute.DiscardUnknown(m)
}

var xxx_messageInfo_TrafficRoute proto.InternalMessageInfo

func (m *TrafficRoute) GetSources() []*Selector {
	if m != nil {
		return m.Sources
	}
	return nil
}

func (m *TrafficRoute) GetDestinations() []*Selector {
	if m != nil {
		return m.Destinations
	}
	return nil
}

func (m *TrafficRoute) GetConf() *TrafficRoute_Conf {
	if m != nil {
		return m.Conf
	}
	return nil
}

// Split defines a destination with a weight assigned to it.
type TrafficRoute_Split struct {
	// Weight assigned to that destination.
	Weight uint32 `protobuf:"varint,1,opt,name=weight,proto3" json:"weight,omitempty"`
	// Selector to match individual endpoints that comprise that destination.
	//
	// Notice that an endpoint can be either inside or outside the mesh.
	// In the former case an endpoint corresponds to a dataplane,
	// in the latter case an endpoint is a black box.
	Destination          map[string]string `protobuf:"bytes,2,rep,name=destination,proto3" json:"destination,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TrafficRoute_Split) Reset()         { *m = TrafficRoute_Split{} }
func (m *TrafficRoute_Split) String() string { return proto.CompactTextString(m) }
func (*TrafficRoute_Split) ProtoMessage()    {}
func (*TrafficRoute_Split) Descriptor() ([]byte, []int) {
	return fileDescriptor_059271a05615c95f, []int{0, 0}
}

func (m *TrafficRoute_Split) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrafficRoute_Split.Unmarshal(m, b)
}
func (m *TrafficRoute_Split) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrafficRoute_Split.Marshal(b, m, deterministic)
}
func (m *TrafficRoute_Split) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrafficRoute_Split.Merge(m, src)
}
func (m *TrafficRoute_Split) XXX_Size() int {
	return xxx_messageInfo_TrafficRoute_Split.Size(m)
}
func (m *TrafficRoute_Split) XXX_DiscardUnknown() {
	xxx_messageInfo_TrafficRoute_Split.DiscardUnknown(m)
}

var xxx_messageInfo_TrafficRoute_Split proto.InternalMessageInfo

func (m *TrafficRoute_Split) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *TrafficRoute_Split) GetDestination() map[string]string {
	if m != nil {
		return m.Destination
	}
	return nil
}

// Conf defines the destination configuration
type TrafficRoute_Conf struct {
	// List of destinations with weights assigned to them.
	Split                []*TrafficRoute_Split `protobuf:"bytes,1,rep,name=split,proto3" json:"split,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TrafficRoute_Conf) Reset()         { *m = TrafficRoute_Conf{} }
func (m *TrafficRoute_Conf) String() string { return proto.CompactTextString(m) }
func (*TrafficRoute_Conf) ProtoMessage()    {}
func (*TrafficRoute_Conf) Descriptor() ([]byte, []int) {
	return fileDescriptor_059271a05615c95f, []int{0, 1}
}

func (m *TrafficRoute_Conf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrafficRoute_Conf.Unmarshal(m, b)
}
func (m *TrafficRoute_Conf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrafficRoute_Conf.Marshal(b, m, deterministic)
}
func (m *TrafficRoute_Conf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrafficRoute_Conf.Merge(m, src)
}
func (m *TrafficRoute_Conf) XXX_Size() int {
	return xxx_messageInfo_TrafficRoute_Conf.Size(m)
}
func (m *TrafficRoute_Conf) XXX_DiscardUnknown() {
	xxx_messageInfo_TrafficRoute_Conf.DiscardUnknown(m)
}

var xxx_messageInfo_TrafficRoute_Conf proto.InternalMessageInfo

func (m *TrafficRoute_Conf) GetSplit() []*TrafficRoute_Split {
	if m != nil {
		return m.Split
	}
	return nil
}

func init() {
	proto.RegisterType((*TrafficRoute)(nil), "kuma.mesh.v1alpha1.TrafficRoute")
	proto.RegisterType((*TrafficRoute_Split)(nil), "kuma.mesh.v1alpha1.TrafficRoute.Split")
	proto.RegisterMapType((map[string]string)(nil), "kuma.mesh.v1alpha1.TrafficRoute.Split.DestinationEntry")
	proto.RegisterType((*TrafficRoute_Conf)(nil), "kuma.mesh.v1alpha1.TrafficRoute.Conf")
}

func init() { proto.RegisterFile("mesh/v1alpha1/traffic_route.proto", fileDescriptor_059271a05615c95f) }

var fileDescriptor_059271a05615c95f = []byte{
	// 361 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x3f, 0x4b, 0xc3, 0x40,
	0x18, 0xc6, 0xbd, 0x34, 0x69, 0xe3, 0xdb, 0x2a, 0xf1, 0x28, 0x18, 0x42, 0xc1, 0x5a, 0x50, 0x42,
	0x87, 0x94, 0xd6, 0x41, 0x71, 0x10, 0x49, 0xd5, 0xc1, 0xc1, 0x21, 0x75, 0x72, 0x91, 0x33, 0xbd,
	0xd8, 0xd0, 0x34, 0x57, 0x92, 0x4b, 0xa5, 0x5f, 0x41, 0x70, 0x71, 0xf4, 0x9b, 0xf9, 0x55, 0x3a,
	0x49, 0x2e, 0x09, 0xa6, 0x2a, 0xa8, 0x4b, 0x78, 0xf3, 0xde, 0xfb, 0x7b, 0x9e, 0xe7, 0xfe, 0xc0,
	0xfe, 0x8c, 0xc6, 0x93, 0xde, 0xa2, 0x4f, 0x82, 0xf9, 0x84, 0xf4, 0x7b, 0x3c, 0x22, 0x9e, 0xe7,
	0xbb, 0xf7, 0x11, 0x4b, 0x38, 0xb5, 0xe6, 0x11, 0xe3, 0x0c, 0xe3, 0x69, 0x32, 0x23, 0x56, 0x3a,
	0x67, 0x15, 0x73, 0x46, 0x6b, 0x1d, 0x8b, 0x69, 0x40, 0x5d, 0xce, 0xa2, 0x8c, 0x30, 0x76, 0x17,
	0x24, 0xf0, 0xc7, 0x84, 0xd3, 0x5e, 0x51, 0x64, 0x0b, 0x9d, 0x17, 0x19, 0x1a, 0xb7, 0x99, 0x85,
	0x93, 0x3a, 0xe0, 0x73, 0xa8, 0xc5, 0x2c, 0x89, 0x5c, 0x1a, 0xeb, 0xa8, 0x5d, 0x31, 0xeb, 0x83,
	0x96, 0xf5, 0xdd, 0xcd, 0x1a, 0xe5, 0xf2, 0xb6, 0xba, 0xb2, 0x95, 0x57, 0x24, 0xa9, 0xc8, 0x29,
	0x30, 0x7c, 0x0d, 0x8d, 0x31, 0x8d, 0xb9, 0x1f, 0x12, 0xee, 0xb3, 0x30, 0xd6, 0xa5, 0x7f, 0xc9,
	0xac, 0xb1, 0x78, 0x08, 0xb2, 0xcb, 0x42, 0x4f, 0xaf, 0xb4, 0x91, 0x59, 0x1f, 0x1c, 0xfc, 0xa4,
	0x51, 0x4e, 0x6f, 0x0d, 0x59, 0xe8, 0x09, 0xb1, 0x67, 0x24, 0x69, 0xc8, 0x11, 0xb0, 0xf1, 0x8e,
	0x40, 0x19, 0xcd, 0x03, 0x9f, 0xe3, 0x3d, 0xa8, 0x3e, 0x51, 0xff, 0x71, 0xc2, 0x75, 0xd4, 0x46,
	0xe6, 0x96, 0x5d, 0x5b, 0xd9, 0x72, 0x57, 0x32, 0x37, 0x9c, 0xbc, 0x8d, 0x19, 0xd4, 0x4b, 0xfe,
	0x79, 0xf4, 0xe3, 0x5f, 0x6d, 0x85, 0xba, 0x75, 0xf1, 0x49, 0x5e, 0x86, 0x3c, 0x5a, 0xda, 0xcd,
	0x95, 0xbd, 0xf3, 0x86, 0xb6, 0x55, 0xd4, 0x91, 0x23, 0x49, 0x43, 0x5d, 0xf1, 0x75, 0xca, 0x0e,
	0xc6, 0x19, 0x68, 0x5f, 0x31, 0xac, 0x41, 0x65, 0x4a, 0x97, 0x22, 0xe2, 0xa6, 0x93, 0x96, 0xb8,
	0x09, 0xca, 0x82, 0x04, 0x09, 0xd5, 0x25, 0xd1, 0xcb, 0x7e, 0x4e, 0xa5, 0x13, 0x64, 0xdc, 0x80,
	0x9c, 0xee, 0x19, 0x5f, 0x81, 0x12, 0xa7, 0x21, 0xf2, 0x4b, 0x3b, 0xfc, 0x5b, 0xe4, 0xd2, 0xb9,
	0x67, 0xb8, 0x0d, 0x77, 0x6a, 0x31, 0xff, 0x50, 0x15, 0x4f, 0xe4, 0xe8, 0x23, 0x00, 0x00, 0xff,
	0xff, 0x16, 0xb4, 0x4e, 0x7f, 0x92, 0x02, 0x00, 0x00,
}
