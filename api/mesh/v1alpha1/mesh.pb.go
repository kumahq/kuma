// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mesh/v1alpha1/mesh.proto

package v1alpha1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	_struct "github.com/golang/protobuf/ptypes/struct"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Mesh defines configuration of a single mesh.
type Mesh struct {
	// mTLS settings.
	// +optional
	Mtls *Mesh_Mtls `protobuf:"bytes,1,opt,name=mtls,proto3" json:"mtls,omitempty"`
	// Tracing settings.
	// +optional
	Tracing *Tracing `protobuf:"bytes,2,opt,name=tracing,proto3" json:"tracing,omitempty"`
	// Logging settings.
	// +optional
	Logging *Logging `protobuf:"bytes,3,opt,name=logging,proto3" json:"logging,omitempty"`
	// Configuration for metrics collected and exposed by dataplanes.
	//
	// Settings defined here become defaults for every dataplane in a given Mesh.
	// Additionally, it is also possible to further customize this configuration
	// for each dataplane individually using Dataplane resource.
	// +optional
	Metrics              *Metrics `protobuf:"bytes,4,opt,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Mesh) Reset()         { *m = Mesh{} }
func (m *Mesh) String() string { return proto.CompactTextString(m) }
func (*Mesh) ProtoMessage()    {}
func (*Mesh) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae9b3cd8c92bbf6a, []int{0}
}

func (m *Mesh) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mesh.Unmarshal(m, b)
}
func (m *Mesh) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mesh.Marshal(b, m, deterministic)
}
func (m *Mesh) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mesh.Merge(m, src)
}
func (m *Mesh) XXX_Size() int {
	return xxx_messageInfo_Mesh.Size(m)
}
func (m *Mesh) XXX_DiscardUnknown() {
	xxx_messageInfo_Mesh.DiscardUnknown(m)
}

var xxx_messageInfo_Mesh proto.InternalMessageInfo

func (m *Mesh) GetMtls() *Mesh_Mtls {
	if m != nil {
		return m.Mtls
	}
	return nil
}

func (m *Mesh) GetTracing() *Tracing {
	if m != nil {
		return m.Tracing
	}
	return nil
}

func (m *Mesh) GetLogging() *Logging {
	if m != nil {
		return m.Logging
	}
	return nil
}

func (m *Mesh) GetMetrics() *Metrics {
	if m != nil {
		return m.Metrics
	}
	return nil
}

// mTLS settings of a Mesh.
type Mesh_Mtls struct {
	// Name of the enabled backend
	EnabledBackend string `protobuf:"bytes,1,opt,name=enabledBackend,proto3" json:"enabledBackend,omitempty"`
	// List of available Certificate Authority backends
	Backends             []*CertificateAuthorityBackend `protobuf:"bytes,2,rep,name=backends,proto3" json:"backends,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *Mesh_Mtls) Reset()         { *m = Mesh_Mtls{} }
func (m *Mesh_Mtls) String() string { return proto.CompactTextString(m) }
func (*Mesh_Mtls) ProtoMessage()    {}
func (*Mesh_Mtls) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae9b3cd8c92bbf6a, []int{0, 0}
}

func (m *Mesh_Mtls) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mesh_Mtls.Unmarshal(m, b)
}
func (m *Mesh_Mtls) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mesh_Mtls.Marshal(b, m, deterministic)
}
func (m *Mesh_Mtls) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mesh_Mtls.Merge(m, src)
}
func (m *Mesh_Mtls) XXX_Size() int {
	return xxx_messageInfo_Mesh_Mtls.Size(m)
}
func (m *Mesh_Mtls) XXX_DiscardUnknown() {
	xxx_messageInfo_Mesh_Mtls.DiscardUnknown(m)
}

var xxx_messageInfo_Mesh_Mtls proto.InternalMessageInfo

func (m *Mesh_Mtls) GetEnabledBackend() string {
	if m != nil {
		return m.EnabledBackend
	}
	return ""
}

func (m *Mesh_Mtls) GetBackends() []*CertificateAuthorityBackend {
	if m != nil {
		return m.Backends
	}
	return nil
}

// CertificateAuthorityBackend defines Certificate Authority backend
type CertificateAuthorityBackend struct {
	// Name of the backend
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Type of the backend. Has to be one of the loaded plugins (Kuma ships with
	// builtin and provided)
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// Dataplane certificate settings
	DpCert *CertificateAuthorityBackend_DpCert `protobuf:"bytes,3,opt,name=dpCert,proto3" json:"dpCert,omitempty"`
	// Configuration of the backend
	Conf                 *_struct.Struct `protobuf:"bytes,4,opt,name=conf,proto3" json:"conf,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CertificateAuthorityBackend) Reset()         { *m = CertificateAuthorityBackend{} }
func (m *CertificateAuthorityBackend) String() string { return proto.CompactTextString(m) }
func (*CertificateAuthorityBackend) ProtoMessage()    {}
func (*CertificateAuthorityBackend) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae9b3cd8c92bbf6a, []int{1}
}

func (m *CertificateAuthorityBackend) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertificateAuthorityBackend.Unmarshal(m, b)
}
func (m *CertificateAuthorityBackend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertificateAuthorityBackend.Marshal(b, m, deterministic)
}
func (m *CertificateAuthorityBackend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertificateAuthorityBackend.Merge(m, src)
}
func (m *CertificateAuthorityBackend) XXX_Size() int {
	return xxx_messageInfo_CertificateAuthorityBackend.Size(m)
}
func (m *CertificateAuthorityBackend) XXX_DiscardUnknown() {
	xxx_messageInfo_CertificateAuthorityBackend.DiscardUnknown(m)
}

var xxx_messageInfo_CertificateAuthorityBackend proto.InternalMessageInfo

func (m *CertificateAuthorityBackend) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CertificateAuthorityBackend) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CertificateAuthorityBackend) GetDpCert() *CertificateAuthorityBackend_DpCert {
	if m != nil {
		return m.DpCert
	}
	return nil
}

func (m *CertificateAuthorityBackend) GetConf() *_struct.Struct {
	if m != nil {
		return m.Conf
	}
	return nil
}

// DpCert defines settings for certificates generated for Dataplanes
type CertificateAuthorityBackend_DpCert struct {
	// Rotation settings
	Rotation             *CertificateAuthorityBackend_DpCert_Rotation `protobuf:"bytes,1,opt,name=rotation,proto3" json:"rotation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *CertificateAuthorityBackend_DpCert) Reset()         { *m = CertificateAuthorityBackend_DpCert{} }
func (m *CertificateAuthorityBackend_DpCert) String() string { return proto.CompactTextString(m) }
func (*CertificateAuthorityBackend_DpCert) ProtoMessage()    {}
func (*CertificateAuthorityBackend_DpCert) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae9b3cd8c92bbf6a, []int{1, 0}
}

func (m *CertificateAuthorityBackend_DpCert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertificateAuthorityBackend_DpCert.Unmarshal(m, b)
}
func (m *CertificateAuthorityBackend_DpCert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertificateAuthorityBackend_DpCert.Marshal(b, m, deterministic)
}
func (m *CertificateAuthorityBackend_DpCert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertificateAuthorityBackend_DpCert.Merge(m, src)
}
func (m *CertificateAuthorityBackend_DpCert) XXX_Size() int {
	return xxx_messageInfo_CertificateAuthorityBackend_DpCert.Size(m)
}
func (m *CertificateAuthorityBackend_DpCert) XXX_DiscardUnknown() {
	xxx_messageInfo_CertificateAuthorityBackend_DpCert.DiscardUnknown(m)
}

var xxx_messageInfo_CertificateAuthorityBackend_DpCert proto.InternalMessageInfo

func (m *CertificateAuthorityBackend_DpCert) GetRotation() *CertificateAuthorityBackend_DpCert_Rotation {
	if m != nil {
		return m.Rotation
	}
	return nil
}

// Rotation defines rotation settings for Dataplane certificate
type CertificateAuthorityBackend_DpCert_Rotation struct {
	// Time after which generated certificate for Dataplane will expire
	Expiration           *duration.Duration `protobuf:"bytes,1,opt,name=expiration,proto3" json:"expiration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CertificateAuthorityBackend_DpCert_Rotation) Reset() {
	*m = CertificateAuthorityBackend_DpCert_Rotation{}
}
func (m *CertificateAuthorityBackend_DpCert_Rotation) String() string {
	return proto.CompactTextString(m)
}
func (*CertificateAuthorityBackend_DpCert_Rotation) ProtoMessage() {}
func (*CertificateAuthorityBackend_DpCert_Rotation) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae9b3cd8c92bbf6a, []int{1, 0, 0}
}

func (m *CertificateAuthorityBackend_DpCert_Rotation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertificateAuthorityBackend_DpCert_Rotation.Unmarshal(m, b)
}
func (m *CertificateAuthorityBackend_DpCert_Rotation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertificateAuthorityBackend_DpCert_Rotation.Marshal(b, m, deterministic)
}
func (m *CertificateAuthorityBackend_DpCert_Rotation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertificateAuthorityBackend_DpCert_Rotation.Merge(m, src)
}
func (m *CertificateAuthorityBackend_DpCert_Rotation) XXX_Size() int {
	return xxx_messageInfo_CertificateAuthorityBackend_DpCert_Rotation.Size(m)
}
func (m *CertificateAuthorityBackend_DpCert_Rotation) XXX_DiscardUnknown() {
	xxx_messageInfo_CertificateAuthorityBackend_DpCert_Rotation.DiscardUnknown(m)
}

var xxx_messageInfo_CertificateAuthorityBackend_DpCert_Rotation proto.InternalMessageInfo

func (m *CertificateAuthorityBackend_DpCert_Rotation) GetExpiration() *duration.Duration {
	if m != nil {
		return m.Expiration
	}
	return nil
}

// Tracing defines tracing configuration of the mesh.
type Tracing struct {
	// Name of the default backend
	DefaultBackend string `protobuf:"bytes,1,opt,name=defaultBackend,proto3" json:"defaultBackend,omitempty"`
	// List of available tracing backends
	Backends             []*TracingBackend `protobuf:"bytes,2,rep,name=backends,proto3" json:"backends,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Tracing) Reset()         { *m = Tracing{} }
func (m *Tracing) String() string { return proto.CompactTextString(m) }
func (*Tracing) ProtoMessage()    {}
func (*Tracing) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae9b3cd8c92bbf6a, []int{2}
}

func (m *Tracing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tracing.Unmarshal(m, b)
}
func (m *Tracing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tracing.Marshal(b, m, deterministic)
}
func (m *Tracing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tracing.Merge(m, src)
}
func (m *Tracing) XXX_Size() int {
	return xxx_messageInfo_Tracing.Size(m)
}
func (m *Tracing) XXX_DiscardUnknown() {
	xxx_messageInfo_Tracing.DiscardUnknown(m)
}

var xxx_messageInfo_Tracing proto.InternalMessageInfo

func (m *Tracing) GetDefaultBackend() string {
	if m != nil {
		return m.DefaultBackend
	}
	return ""
}

func (m *Tracing) GetBackends() []*TracingBackend {
	if m != nil {
		return m.Backends
	}
	return nil
}

// TracingBackend defines tracing backend available to mesh. Backends can be
// used in TrafficTrace rules.
type TracingBackend struct {
	// Name of the backend, can be then used in Mesh.tracing.defaultBackend or in
	// TrafficTrace
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Percentage of traces that will be sent to the backend (range 0.0 - 100.0).
	// Empty value defaults to 100.0%
	Sampling *wrappers.DoubleValue `protobuf:"bytes,2,opt,name=sampling,proto3" json:"sampling,omitempty"`
	// Type of the backend (Kuma ships with 'zipkin')
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// Configuration of the backend
	Conf                 *_struct.Struct `protobuf:"bytes,4,opt,name=conf,proto3" json:"conf,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TracingBackend) Reset()         { *m = TracingBackend{} }
func (m *TracingBackend) String() string { return proto.CompactTextString(m) }
func (*TracingBackend) ProtoMessage()    {}
func (*TracingBackend) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae9b3cd8c92bbf6a, []int{3}
}

func (m *TracingBackend) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TracingBackend.Unmarshal(m, b)
}
func (m *TracingBackend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TracingBackend.Marshal(b, m, deterministic)
}
func (m *TracingBackend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TracingBackend.Merge(m, src)
}
func (m *TracingBackend) XXX_Size() int {
	return xxx_messageInfo_TracingBackend.Size(m)
}
func (m *TracingBackend) XXX_DiscardUnknown() {
	xxx_messageInfo_TracingBackend.DiscardUnknown(m)
}

var xxx_messageInfo_TracingBackend proto.InternalMessageInfo

func (m *TracingBackend) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TracingBackend) GetSampling() *wrappers.DoubleValue {
	if m != nil {
		return m.Sampling
	}
	return nil
}

func (m *TracingBackend) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *TracingBackend) GetConf() *_struct.Struct {
	if m != nil {
		return m.Conf
	}
	return nil
}

type ZipkinTracingBackendConfig struct {
	// Address of Zipkin collector.
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// Generate 128bit traces. Default: false
	TraceId128Bit bool `protobuf:"varint,2,opt,name=traceId128bit,proto3" json:"traceId128bit,omitempty"`
	// Version of the API. values: httpJson, httpJsonV1, httpProto. Default:
	// httpJson see
	// https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/trace/v3/trace.proto#envoy-v3-api-enum-config-trace-v3-zipkinconfig-collectorendpointversion
	ApiVersion           string   `protobuf:"bytes,3,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZipkinTracingBackendConfig) Reset()         { *m = ZipkinTracingBackendConfig{} }
func (m *ZipkinTracingBackendConfig) String() string { return proto.CompactTextString(m) }
func (*ZipkinTracingBackendConfig) ProtoMessage()    {}
func (*ZipkinTracingBackendConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae9b3cd8c92bbf6a, []int{4}
}

func (m *ZipkinTracingBackendConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZipkinTracingBackendConfig.Unmarshal(m, b)
}
func (m *ZipkinTracingBackendConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZipkinTracingBackendConfig.Marshal(b, m, deterministic)
}
func (m *ZipkinTracingBackendConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZipkinTracingBackendConfig.Merge(m, src)
}
func (m *ZipkinTracingBackendConfig) XXX_Size() int {
	return xxx_messageInfo_ZipkinTracingBackendConfig.Size(m)
}
func (m *ZipkinTracingBackendConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ZipkinTracingBackendConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ZipkinTracingBackendConfig proto.InternalMessageInfo

func (m *ZipkinTracingBackendConfig) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ZipkinTracingBackendConfig) GetTraceId128Bit() bool {
	if m != nil {
		return m.TraceId128Bit
	}
	return false
}

func (m *ZipkinTracingBackendConfig) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

type Logging struct {
	// Name of the default backend
	DefaultBackend string `protobuf:"bytes,1,opt,name=defaultBackend,proto3" json:"defaultBackend,omitempty"`
	// List of available logging backends
	Backends             []*LoggingBackend `protobuf:"bytes,2,rep,name=backends,proto3" json:"backends,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Logging) Reset()         { *m = Logging{} }
func (m *Logging) String() string { return proto.CompactTextString(m) }
func (*Logging) ProtoMessage()    {}
func (*Logging) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae9b3cd8c92bbf6a, []int{5}
}

func (m *Logging) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Logging.Unmarshal(m, b)
}
func (m *Logging) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Logging.Marshal(b, m, deterministic)
}
func (m *Logging) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Logging.Merge(m, src)
}
func (m *Logging) XXX_Size() int {
	return xxx_messageInfo_Logging.Size(m)
}
func (m *Logging) XXX_DiscardUnknown() {
	xxx_messageInfo_Logging.DiscardUnknown(m)
}

var xxx_messageInfo_Logging proto.InternalMessageInfo

func (m *Logging) GetDefaultBackend() string {
	if m != nil {
		return m.DefaultBackend
	}
	return ""
}

func (m *Logging) GetBackends() []*LoggingBackend {
	if m != nil {
		return m.Backends
	}
	return nil
}

// LoggingBackend defines logging backend available to mesh. Backends can be
// used in TrafficLog rules.
type LoggingBackend struct {
	// Name of the backend, can be then used in Mesh.logging.defaultBackend or in
	// TrafficLogging
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Format of access logs. Placehodlers available on
	// https://www.envoyproxy.io/docs/envoy/latest/configuration/observability/access_log
	Format string `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	// Type of the backend (Kuma ships with 'tcp' and 'file')
	Type string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// Configuration of the backend
	Conf                 *_struct.Struct `protobuf:"bytes,4,opt,name=conf,proto3" json:"conf,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LoggingBackend) Reset()         { *m = LoggingBackend{} }
func (m *LoggingBackend) String() string { return proto.CompactTextString(m) }
func (*LoggingBackend) ProtoMessage()    {}
func (*LoggingBackend) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae9b3cd8c92bbf6a, []int{6}
}

func (m *LoggingBackend) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoggingBackend.Unmarshal(m, b)
}
func (m *LoggingBackend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoggingBackend.Marshal(b, m, deterministic)
}
func (m *LoggingBackend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoggingBackend.Merge(m, src)
}
func (m *LoggingBackend) XXX_Size() int {
	return xxx_messageInfo_LoggingBackend.Size(m)
}
func (m *LoggingBackend) XXX_DiscardUnknown() {
	xxx_messageInfo_LoggingBackend.DiscardUnknown(m)
}

var xxx_messageInfo_LoggingBackend proto.InternalMessageInfo

func (m *LoggingBackend) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LoggingBackend) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *LoggingBackend) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *LoggingBackend) GetConf() *_struct.Struct {
	if m != nil {
		return m.Conf
	}
	return nil
}

// FileLoggingBackendConfig defines configuration for file based access logs
type FileLoggingBackendConfig struct {
	// Path to a file that logs will be written to
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileLoggingBackendConfig) Reset()         { *m = FileLoggingBackendConfig{} }
func (m *FileLoggingBackendConfig) String() string { return proto.CompactTextString(m) }
func (*FileLoggingBackendConfig) ProtoMessage()    {}
func (*FileLoggingBackendConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae9b3cd8c92bbf6a, []int{7}
}

func (m *FileLoggingBackendConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileLoggingBackendConfig.Unmarshal(m, b)
}
func (m *FileLoggingBackendConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileLoggingBackendConfig.Marshal(b, m, deterministic)
}
func (m *FileLoggingBackendConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileLoggingBackendConfig.Merge(m, src)
}
func (m *FileLoggingBackendConfig) XXX_Size() int {
	return xxx_messageInfo_FileLoggingBackendConfig.Size(m)
}
func (m *FileLoggingBackendConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_FileLoggingBackendConfig.DiscardUnknown(m)
}

var xxx_messageInfo_FileLoggingBackendConfig proto.InternalMessageInfo

func (m *FileLoggingBackendConfig) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

// TcpLoggingBackendConfig defines configuration for TCP based access logs
type TcpLoggingBackendConfig struct {
	// Address to TCP service that will receive logs
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TcpLoggingBackendConfig) Reset()         { *m = TcpLoggingBackendConfig{} }
func (m *TcpLoggingBackendConfig) String() string { return proto.CompactTextString(m) }
func (*TcpLoggingBackendConfig) ProtoMessage()    {}
func (*TcpLoggingBackendConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae9b3cd8c92bbf6a, []int{8}
}

func (m *TcpLoggingBackendConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TcpLoggingBackendConfig.Unmarshal(m, b)
}
func (m *TcpLoggingBackendConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TcpLoggingBackendConfig.Marshal(b, m, deterministic)
}
func (m *TcpLoggingBackendConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TcpLoggingBackendConfig.Merge(m, src)
}
func (m *TcpLoggingBackendConfig) XXX_Size() int {
	return xxx_messageInfo_TcpLoggingBackendConfig.Size(m)
}
func (m *TcpLoggingBackendConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TcpLoggingBackendConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TcpLoggingBackendConfig proto.InternalMessageInfo

func (m *TcpLoggingBackendConfig) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func init() {
	proto.RegisterType((*Mesh)(nil), "kuma.mesh.v1alpha1.Mesh")
	proto.RegisterType((*Mesh_Mtls)(nil), "kuma.mesh.v1alpha1.Mesh.Mtls")
	proto.RegisterType((*CertificateAuthorityBackend)(nil), "kuma.mesh.v1alpha1.CertificateAuthorityBackend")
	proto.RegisterType((*CertificateAuthorityBackend_DpCert)(nil), "kuma.mesh.v1alpha1.CertificateAuthorityBackend.DpCert")
	proto.RegisterType((*CertificateAuthorityBackend_DpCert_Rotation)(nil), "kuma.mesh.v1alpha1.CertificateAuthorityBackend.DpCert.Rotation")
	proto.RegisterType((*Tracing)(nil), "kuma.mesh.v1alpha1.Tracing")
	proto.RegisterType((*TracingBackend)(nil), "kuma.mesh.v1alpha1.TracingBackend")
	proto.RegisterType((*ZipkinTracingBackendConfig)(nil), "kuma.mesh.v1alpha1.ZipkinTracingBackendConfig")
	proto.RegisterType((*Logging)(nil), "kuma.mesh.v1alpha1.Logging")
	proto.RegisterType((*LoggingBackend)(nil), "kuma.mesh.v1alpha1.LoggingBackend")
	proto.RegisterType((*FileLoggingBackendConfig)(nil), "kuma.mesh.v1alpha1.FileLoggingBackendConfig")
	proto.RegisterType((*TcpLoggingBackendConfig)(nil), "kuma.mesh.v1alpha1.TcpLoggingBackendConfig")
}

func init() { proto.RegisterFile("mesh/v1alpha1/mesh.proto", fileDescriptor_ae9b3cd8c92bbf6a) }

var fileDescriptor_ae9b3cd8c92bbf6a = []byte{
	// 607 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0xd1, 0x6e, 0xd3, 0x3c,
	0x14, 0x56, 0xdb, 0xa8, 0xeb, 0xce, 0xf4, 0x4f, 0xbf, 0x7c, 0xc1, 0x42, 0x37, 0xa6, 0xa9, 0x42,
	0x68, 0x12, 0x52, 0xaa, 0x6e, 0x02, 0x8d, 0x1b, 0x10, 0xdb, 0x40, 0x42, 0x30, 0x2e, 0xcc, 0xb4,
	0x8b, 0x71, 0xe5, 0x24, 0x4e, 0x6a, 0xd5, 0x89, 0x8d, 0xe3, 0x00, 0x13, 0xe2, 0x59, 0x78, 0x01,
	0xde, 0x88, 0xa7, 0xe0, 0x0d, 0x90, 0x1d, 0xa7, 0x34, 0x4d, 0x37, 0x69, 0xc0, 0xdd, 0xc9, 0x39,
	0xdf, 0x77, 0xf2, 0xf9, 0x7c, 0xe7, 0x80, 0x9f, 0xd1, 0x62, 0x3a, 0xfe, 0x38, 0x21, 0x5c, 0x4e,
	0xc9, 0x64, 0x6c, 0xbe, 0x02, 0xa9, 0x84, 0x16, 0x08, 0xcd, 0xca, 0x8c, 0x04, 0x36, 0x51, 0x97,
	0x87, 0xbb, 0xa9, 0x10, 0x29, 0xa7, 0x63, 0x8b, 0x08, 0xcb, 0x64, 0x1c, 0x97, 0x8a, 0x68, 0x26,
	0xf2, 0x8a, 0x33, 0xdc, 0x5e, 0xee, 0xa6, 0x15, 0x8b, 0x0a, 0x57, 0x6c, 0x91, 0x3f, 0x29, 0x22,
	0x25, 0x55, 0x75, 0x7d, 0x67, 0xb9, 0x5e, 0x68, 0x55, 0x46, 0xba, 0xaa, 0x8e, 0x7e, 0x74, 0xc1,
	0x3b, 0xa3, 0xc5, 0x14, 0x4d, 0xc0, 0xcb, 0x34, 0x2f, 0xfc, 0xce, 0x5e, 0x67, 0x7f, 0xe3, 0xe0,
	0x5e, 0xd0, 0x96, 0x19, 0x18, 0x5c, 0x70, 0xa6, 0x79, 0x81, 0x2d, 0x14, 0x3d, 0x82, 0x35, 0xad,
	0x48, 0xc4, 0xf2, 0xd4, 0xef, 0x5a, 0xd6, 0xf6, 0x2a, 0xd6, 0x79, 0x05, 0xc1, 0x35, 0xd6, 0xd0,
	0xb8, 0x48, 0x53, 0x43, 0xeb, 0x5d, 0x4f, 0x7b, 0x53, 0x41, 0x70, 0x8d, 0x35, 0x34, 0xf7, 0x70,
	0xdf, 0xbb, 0x9e, 0x76, 0x56, 0x41, 0x70, 0x8d, 0x1d, 0x7e, 0x01, 0xcf, 0x48, 0x46, 0x0f, 0x60,
	0x93, 0xe6, 0x24, 0xe4, 0x34, 0x3e, 0x26, 0xd1, 0x8c, 0xe6, 0xb1, 0x7d, 0xe9, 0x3a, 0x5e, 0xca,
	0xa2, 0xd7, 0x30, 0x08, 0xab, 0xb0, 0xf0, 0xbb, 0x7b, 0xbd, 0xfd, 0x8d, 0x83, 0xf1, 0xaa, 0xff,
	0x9c, 0x50, 0xa5, 0x59, 0xc2, 0x22, 0xa2, 0xe9, 0xf3, 0x52, 0x4f, 0x85, 0x62, 0xfa, 0xca, 0xb5,
	0xc0, 0xf3, 0x06, 0xa3, 0x9f, 0x5d, 0xd8, 0xbe, 0x01, 0x89, 0x10, 0x78, 0x39, 0xc9, 0xa8, 0x93,
	0x62, 0x63, 0x93, 0xd3, 0x57, 0x92, 0xda, 0x91, 0xae, 0x63, 0x1b, 0xa3, 0xb7, 0xd0, 0x8f, 0xa5,
	0x69, 0xe4, 0x26, 0xf6, 0xf8, 0x96, 0x92, 0x82, 0x53, 0xcb, 0xc6, 0xae, 0x0b, 0x7a, 0x08, 0x5e,
	0x24, 0xf2, 0xc4, 0x0d, 0x72, 0x2b, 0xa8, 0x56, 0x24, 0xa8, 0x57, 0x24, 0x78, 0x67, 0x57, 0x04,
	0x5b, 0xd0, 0xf0, 0x7b, 0x07, 0xfa, 0x15, 0x1f, 0xbd, 0x87, 0x81, 0x12, 0xda, 0xae, 0xa6, 0x5b,
	0x94, 0x67, 0x7f, 0xa6, 0x24, 0xc0, 0xae, 0x0d, 0x9e, 0x37, 0x1c, 0xbe, 0x80, 0x41, 0x9d, 0x45,
	0x4f, 0x00, 0xe8, 0x67, 0xc9, 0xd4, 0xe2, 0xaf, 0xee, 0xb6, 0x64, 0x9e, 0xba, 0x33, 0xc1, 0x0b,
	0xe0, 0xd1, 0x07, 0x58, 0x73, 0x2b, 0x67, 0x3c, 0x8f, 0x69, 0x42, 0x4a, 0xae, 0x97, 0x3c, 0x6f,
	0x66, 0xd1, 0xd3, 0x96, 0xe7, 0xa3, 0x1b, 0x36, 0xb9, 0x6d, 0xf3, 0xb7, 0x0e, 0x6c, 0x36, 0x8b,
	0x2b, 0x9d, 0x3d, 0x82, 0x41, 0x41, 0x32, 0xc9, 0x7f, 0x1f, 0xcc, 0x4e, 0xfb, 0x49, 0xa2, 0x0c,
	0x39, 0xbd, 0x20, 0xbc, 0xa4, 0x78, 0x8e, 0x9e, 0xef, 0x44, 0x6f, 0x61, 0x27, 0x6e, 0xe3, 0xe1,
	0x48, 0xc3, 0xf0, 0x92, 0xc9, 0x19, 0xcb, 0x9b, 0x32, 0x4f, 0x44, 0x9e, 0xb0, 0x14, 0xfd, 0x0f,
	0xbd, 0x52, 0x71, 0xa7, 0xd5, 0x84, 0xe8, 0x3e, 0xfc, 0x67, 0xce, 0x95, 0xbe, 0x8a, 0x27, 0x07,
	0x47, 0x21, 0xd3, 0x56, 0xef, 0x00, 0x37, 0x93, 0x68, 0x17, 0x80, 0x48, 0x76, 0x41, 0x55, 0x61,
	0x5c, 0xaa, 0xc4, 0x2d, 0x64, 0x8c, 0x15, 0xee, 0x8c, 0xff, 0xb5, 0x15, 0xae, 0x6d, 0xdb, 0x8a,
	0xaf, 0xb0, 0xd9, 0xac, 0xad, 0x74, 0xe2, 0x0e, 0xf4, 0x13, 0xa1, 0x32, 0xa2, 0xdd, 0x95, 0xb9,
	0xaf, 0xbf, 0x9f, 0x73, 0x00, 0xfe, 0x4b, 0xc6, 0x69, 0x53, 0x82, 0x9b, 0x32, 0x02, 0x4f, 0x12,
	0x3d, 0xad, 0x85, 0x98, 0x78, 0x74, 0x08, 0x5b, 0xe7, 0x91, 0x5c, 0x09, 0xf7, 0x61, 0x8d, 0xc4,
	0xb1, 0xa2, 0x45, 0xe1, 0x18, 0xf5, 0xe7, 0x31, 0x5c, 0x0e, 0xea, 0x41, 0x84, 0x7d, 0xab, 0xe3,
	0xf0, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa2, 0xfc, 0xf0, 0x76, 0x71, 0x06, 0x00, 0x00,
}
