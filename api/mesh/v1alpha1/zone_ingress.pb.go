// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.20.0
// source: api/mesh/v1alpha1/zone_ingress.proto

package v1alpha1

import (
	_ "github.com/kumahq/kuma/api/mesh"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ZoneIngress allows us to configure dataplane in the Ingress mode. In this
// mode, dataplane has only inbound interfaces. Every inbound interface matches
// with services that reside in that cluster.
type ZoneIngress struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Zone field contains Zone name where ingress is serving, field will be
	// automatically set by Global Kuma CP
	Zone string `protobuf:"bytes,1,opt,name=zone,proto3" json:"zone,omitempty"`
	// Networking defines the address and port of the Ingress to listen on.
	// Additionally publicly advertised address and port could be specified.
	Networking *ZoneIngress_Networking `protobuf:"bytes,2,opt,name=networking,proto3" json:"networking,omitempty"`
	// AvailableService contains tags that represent unique subset of
	// endpoints
	AvailableServices []*ZoneIngress_AvailableService `protobuf:"bytes,3,rep,name=availableServices,proto3" json:"availableServices,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ZoneIngress) Reset() {
	*x = ZoneIngress{}
	mi := &file_api_mesh_v1alpha1_zone_ingress_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoneIngress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneIngress) ProtoMessage() {}

func (x *ZoneIngress) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_zone_ingress_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneIngress.ProtoReflect.Descriptor instead.
func (*ZoneIngress) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_zone_ingress_proto_rawDescGZIP(), []int{0}
}

func (x *ZoneIngress) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *ZoneIngress) GetNetworking() *ZoneIngress_Networking {
	if x != nil {
		return x.Networking
	}
	return nil
}

func (x *ZoneIngress) GetAvailableServices() []*ZoneIngress_AvailableService {
	if x != nil {
		return x.AvailableServices
	}
	return nil
}

type ZoneIngress_Networking struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Address on which inbound listener will be exposed
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// AdvertisedAddress defines IP or DNS name on which ZoneIngress is
	// accessible to other Kuma clusters.
	AdvertisedAddress string `protobuf:"bytes,2,opt,name=advertisedAddress,proto3" json:"advertisedAddress,omitempty"`
	// Port of the inbound interface that will forward requests to the service.
	Port uint32 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	// AdvertisedPort defines port on which ZoneIngress is accessible to other
	// Kuma clusters.
	AdvertisedPort uint32 `protobuf:"varint,4,opt,name=advertisedPort,proto3" json:"advertisedPort,omitempty"`
	// Admin contains configuration related to Envoy Admin API
	Admin         *EnvoyAdmin `protobuf:"bytes,5,opt,name=admin,proto3" json:"admin,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ZoneIngress_Networking) Reset() {
	*x = ZoneIngress_Networking{}
	mi := &file_api_mesh_v1alpha1_zone_ingress_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoneIngress_Networking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneIngress_Networking) ProtoMessage() {}

func (x *ZoneIngress_Networking) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_zone_ingress_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneIngress_Networking.ProtoReflect.Descriptor instead.
func (*ZoneIngress_Networking) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_zone_ingress_proto_rawDescGZIP(), []int{0, 0}
}

func (x *ZoneIngress_Networking) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ZoneIngress_Networking) GetAdvertisedAddress() string {
	if x != nil {
		return x.AdvertisedAddress
	}
	return ""
}

func (x *ZoneIngress_Networking) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ZoneIngress_Networking) GetAdvertisedPort() uint32 {
	if x != nil {
		return x.AdvertisedPort
	}
	return 0
}

func (x *ZoneIngress_Networking) GetAdmin() *EnvoyAdmin {
	if x != nil {
		return x.Admin
	}
	return nil
}

type ZoneIngress_AvailableService struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// tags of the service
	Tags map[string]string `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// number of instances available for given tags
	Instances uint32 `protobuf:"varint,2,opt,name=instances,proto3" json:"instances,omitempty"`
	// mesh of the instances available for given tags
	Mesh string `protobuf:"bytes,3,opt,name=mesh,proto3" json:"mesh,omitempty"`
	// instance of external service available from the zone
	ExternalService bool `protobuf:"varint,4,opt,name=externalService,proto3" json:"externalService,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ZoneIngress_AvailableService) Reset() {
	*x = ZoneIngress_AvailableService{}
	mi := &file_api_mesh_v1alpha1_zone_ingress_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ZoneIngress_AvailableService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZoneIngress_AvailableService) ProtoMessage() {}

func (x *ZoneIngress_AvailableService) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_zone_ingress_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZoneIngress_AvailableService.ProtoReflect.Descriptor instead.
func (*ZoneIngress_AvailableService) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_zone_ingress_proto_rawDescGZIP(), []int{0, 1}
}

func (x *ZoneIngress_AvailableService) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ZoneIngress_AvailableService) GetInstances() uint32 {
	if x != nil {
		return x.Instances
	}
	return 0
}

func (x *ZoneIngress_AvailableService) GetMesh() string {
	if x != nil {
		return x.Mesh
	}
	return ""
}

func (x *ZoneIngress_AvailableService) GetExternalService() bool {
	if x != nil {
		return x.ExternalService
	}
	return false
}

var File_api_mesh_v1alpha1_zone_ingress_proto protoreflect.FileDescriptor

const file_api_mesh_v1alpha1_zone_ingress_proto_rawDesc = "" +
	"\n" +
	"$api/mesh/v1alpha1/zone_ingress.proto\x12\x12kuma.mesh.v1alpha1\x1a\x16api/mesh/options.proto\x1a#api/mesh/v1alpha1/envoy_admin.proto\"\x8b\a\n" +
	"\vZoneIngress\x12\x12\n" +
	"\x04zone\x18\x01 \x01(\tR\x04zone\x12J\n" +
	"\n" +
	"networking\x18\x02 \x01(\v2*.kuma.mesh.v1alpha1.ZoneIngress.NetworkingR\n" +
	"networking\x12^\n" +
	"\x11availableServices\x18\x03 \x03(\v20.kuma.mesh.v1alpha1.ZoneIngress.AvailableServiceR\x11availableServices\x1a\xc6\x01\n" +
	"\n" +
	"Networking\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12,\n" +
	"\x11advertisedAddress\x18\x02 \x01(\tR\x11advertisedAddress\x12\x12\n" +
	"\x04port\x18\x03 \x01(\rR\x04port\x12&\n" +
	"\x0eadvertisedPort\x18\x04 \x01(\rR\x0eadvertisedPort\x124\n" +
	"\x05admin\x18\x05 \x01(\v2\x1e.kuma.mesh.v1alpha1.EnvoyAdminR\x05admin\x1a\xf7\x01\n" +
	"\x10AvailableService\x12N\n" +
	"\x04tags\x18\x01 \x03(\v2:.kuma.mesh.v1alpha1.ZoneIngress.AvailableService.TagsEntryR\x04tags\x12\x1c\n" +
	"\tinstances\x18\x02 \x01(\rR\tinstances\x12\x12\n" +
	"\x04mesh\x18\x03 \x01(\tR\x04mesh\x12(\n" +
	"\x0fexternalService\x18\x04 \x01(\bR\x0fexternalService\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01:\xf8\x01\xaa\x8c\x89\xa6\x01\xf1\x01\n" +
	"\x13ZoneIngressResource\x12\vZoneIngress\x18\x01\"\x04mesh::\n" +
	"\vzoneingress\x12\rzoneingresses*\fzone-ingress2\x0ezone-ingressesR4model.ZoneToGlobalFlag | model.SyncedAcrossZonesFlagX\x01\x8a\x01Edescription=\"Zone name\",JSONPath=`.spec.zone`,name=\"zone\",type=string\x90\x01\x01\x9a\x01\x02zi\xa0\x01\x01B*Z(github.com/kumahq/kuma/api/mesh/v1alpha1b\x06proto3"

var (
	file_api_mesh_v1alpha1_zone_ingress_proto_rawDescOnce sync.Once
	file_api_mesh_v1alpha1_zone_ingress_proto_rawDescData []byte
)

func file_api_mesh_v1alpha1_zone_ingress_proto_rawDescGZIP() []byte {
	file_api_mesh_v1alpha1_zone_ingress_proto_rawDescOnce.Do(func() {
		file_api_mesh_v1alpha1_zone_ingress_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_mesh_v1alpha1_zone_ingress_proto_rawDesc), len(file_api_mesh_v1alpha1_zone_ingress_proto_rawDesc)))
	})
	return file_api_mesh_v1alpha1_zone_ingress_proto_rawDescData
}

var file_api_mesh_v1alpha1_zone_ingress_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_mesh_v1alpha1_zone_ingress_proto_goTypes = []any{
	(*ZoneIngress)(nil),                  // 0: kuma.mesh.v1alpha1.ZoneIngress
	(*ZoneIngress_Networking)(nil),       // 1: kuma.mesh.v1alpha1.ZoneIngress.Networking
	(*ZoneIngress_AvailableService)(nil), // 2: kuma.mesh.v1alpha1.ZoneIngress.AvailableService
	nil,                                  // 3: kuma.mesh.v1alpha1.ZoneIngress.AvailableService.TagsEntry
	(*EnvoyAdmin)(nil),                   // 4: kuma.mesh.v1alpha1.EnvoyAdmin
}
var file_api_mesh_v1alpha1_zone_ingress_proto_depIdxs = []int32{
	1, // 0: kuma.mesh.v1alpha1.ZoneIngress.networking:type_name -> kuma.mesh.v1alpha1.ZoneIngress.Networking
	2, // 1: kuma.mesh.v1alpha1.ZoneIngress.availableServices:type_name -> kuma.mesh.v1alpha1.ZoneIngress.AvailableService
	4, // 2: kuma.mesh.v1alpha1.ZoneIngress.Networking.admin:type_name -> kuma.mesh.v1alpha1.EnvoyAdmin
	3, // 3: kuma.mesh.v1alpha1.ZoneIngress.AvailableService.tags:type_name -> kuma.mesh.v1alpha1.ZoneIngress.AvailableService.TagsEntry
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_api_mesh_v1alpha1_zone_ingress_proto_init() }
func file_api_mesh_v1alpha1_zone_ingress_proto_init() {
	if File_api_mesh_v1alpha1_zone_ingress_proto != nil {
		return
	}
	file_api_mesh_v1alpha1_envoy_admin_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_mesh_v1alpha1_zone_ingress_proto_rawDesc), len(file_api_mesh_v1alpha1_zone_ingress_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_mesh_v1alpha1_zone_ingress_proto_goTypes,
		DependencyIndexes: file_api_mesh_v1alpha1_zone_ingress_proto_depIdxs,
		MessageInfos:      file_api_mesh_v1alpha1_zone_ingress_proto_msgTypes,
	}.Build()
	File_api_mesh_v1alpha1_zone_ingress_proto = out.File
	file_api_mesh_v1alpha1_zone_ingress_proto_goTypes = nil
	file_api_mesh_v1alpha1_zone_ingress_proto_depIdxs = nil
}
