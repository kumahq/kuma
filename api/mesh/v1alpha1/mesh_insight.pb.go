// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.1
// source: api/mesh/v1alpha1/mesh_insight.proto

package v1alpha1

import (
	_ "github.com/kumahq/kuma/api/mesh"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MeshInsight defines the observed state of a Mesh.
type MeshInsight struct {
	state      protoimpl.MessageState             `protogen:"open.v1"`
	Dataplanes *MeshInsight_DataplaneStat         `protobuf:"bytes,2,opt,name=dataplanes,proto3" json:"dataplanes,omitempty"`
	Policies   map[string]*MeshInsight_PolicyStat `protobuf:"bytes,3,rep,name=policies,proto3" json:"policies,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	DpVersions *MeshInsight_DpVersions            `protobuf:"bytes,4,opt,name=dpVersions,proto3" json:"dpVersions,omitempty"`
	// mTLS statistics
	MTLS             *MeshInsight_MTLS                    `protobuf:"bytes,5,opt,name=mTLS,proto3" json:"mTLS,omitempty"`
	Services         *MeshInsight_ServiceStat             `protobuf:"bytes,6,opt,name=services,proto3" json:"services,omitempty"`
	DataplanesByType *MeshInsight_DataplanesByType        `protobuf:"bytes,7,opt,name=dataplanesByType,proto3" json:"dataplanesByType,omitempty"`
	Resources        map[string]*MeshInsight_ResourceStat `protobuf:"bytes,8,rep,name=resources,proto3" json:"resources,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MeshInsight) Reset() {
	*x = MeshInsight{}
	mi := &file_api_mesh_v1alpha1_mesh_insight_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeshInsight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeshInsight) ProtoMessage() {}

func (x *MeshInsight) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_mesh_insight_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeshInsight.ProtoReflect.Descriptor instead.
func (*MeshInsight) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_mesh_insight_proto_rawDescGZIP(), []int{0}
}

func (x *MeshInsight) GetDataplanes() *MeshInsight_DataplaneStat {
	if x != nil {
		return x.Dataplanes
	}
	return nil
}

func (x *MeshInsight) GetPolicies() map[string]*MeshInsight_PolicyStat {
	if x != nil {
		return x.Policies
	}
	return nil
}

func (x *MeshInsight) GetDpVersions() *MeshInsight_DpVersions {
	if x != nil {
		return x.DpVersions
	}
	return nil
}

func (x *MeshInsight) GetMTLS() *MeshInsight_MTLS {
	if x != nil {
		return x.MTLS
	}
	return nil
}

func (x *MeshInsight) GetServices() *MeshInsight_ServiceStat {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *MeshInsight) GetDataplanesByType() *MeshInsight_DataplanesByType {
	if x != nil {
		return x.DataplanesByType
	}
	return nil
}

func (x *MeshInsight) GetResources() map[string]*MeshInsight_ResourceStat {
	if x != nil {
		return x.Resources
	}
	return nil
}

// DataplaneStat defines statistic specifically for Dataplane
type MeshInsight_DataplaneStat struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Total             uint32                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Online            uint32                 `protobuf:"varint,2,opt,name=online,proto3" json:"online,omitempty"`
	Offline           uint32                 `protobuf:"varint,3,opt,name=offline,proto3" json:"offline,omitempty"`
	PartiallyDegraded uint32                 `protobuf:"varint,4,opt,name=partially_degraded,json=partiallyDegraded,proto3" json:"partially_degraded,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MeshInsight_DataplaneStat) Reset() {
	*x = MeshInsight_DataplaneStat{}
	mi := &file_api_mesh_v1alpha1_mesh_insight_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeshInsight_DataplaneStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeshInsight_DataplaneStat) ProtoMessage() {}

func (x *MeshInsight_DataplaneStat) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_mesh_insight_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeshInsight_DataplaneStat.ProtoReflect.Descriptor instead.
func (*MeshInsight_DataplaneStat) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_mesh_insight_proto_rawDescGZIP(), []int{0, 0}
}

func (x *MeshInsight_DataplaneStat) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MeshInsight_DataplaneStat) GetOnline() uint32 {
	if x != nil {
		return x.Online
	}
	return 0
}

func (x *MeshInsight_DataplaneStat) GetOffline() uint32 {
	if x != nil {
		return x.Offline
	}
	return 0
}

func (x *MeshInsight_DataplaneStat) GetPartiallyDegraded() uint32 {
	if x != nil {
		return x.PartiallyDegraded
	}
	return 0
}

// PolicyStat defines statistic for all policies in general
// Deprecated: use resources
type MeshInsight_PolicyStat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         uint32                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeshInsight_PolicyStat) Reset() {
	*x = MeshInsight_PolicyStat{}
	mi := &file_api_mesh_v1alpha1_mesh_insight_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeshInsight_PolicyStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeshInsight_PolicyStat) ProtoMessage() {}

func (x *MeshInsight_PolicyStat) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_mesh_insight_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeshInsight_PolicyStat.ProtoReflect.Descriptor instead.
func (*MeshInsight_PolicyStat) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_mesh_insight_proto_rawDescGZIP(), []int{0, 1}
}

func (x *MeshInsight_PolicyStat) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// DpVersions defines statistics grouped by dataplane versions
type MeshInsight_DpVersions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Dataplane stats grouped by KumaDP version
	KumaDp map[string]*MeshInsight_DataplaneStat `protobuf:"bytes,1,rep,name=kumaDp,proto3" json:"kumaDp,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Dataplane stats grouped by Envoy version
	Envoy         map[string]*MeshInsight_DataplaneStat `protobuf:"bytes,2,rep,name=envoy,proto3" json:"envoy,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeshInsight_DpVersions) Reset() {
	*x = MeshInsight_DpVersions{}
	mi := &file_api_mesh_v1alpha1_mesh_insight_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeshInsight_DpVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeshInsight_DpVersions) ProtoMessage() {}

func (x *MeshInsight_DpVersions) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_mesh_insight_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeshInsight_DpVersions.ProtoReflect.Descriptor instead.
func (*MeshInsight_DpVersions) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_mesh_insight_proto_rawDescGZIP(), []int{0, 3}
}

func (x *MeshInsight_DpVersions) GetKumaDp() map[string]*MeshInsight_DataplaneStat {
	if x != nil {
		return x.KumaDp
	}
	return nil
}

func (x *MeshInsight_DpVersions) GetEnvoy() map[string]*MeshInsight_DataplaneStat {
	if x != nil {
		return x.Envoy
	}
	return nil
}

type MeshInsight_MTLS struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Dataplanes grouped by issued backends.
	IssuedBackends map[string]*MeshInsight_DataplaneStat `protobuf:"bytes,1,rep,name=issuedBackends,proto3" json:"issuedBackends,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Dataplanes grouped by supported backends.
	SupportedBackends map[string]*MeshInsight_DataplaneStat `protobuf:"bytes,2,rep,name=supportedBackends,proto3" json:"supportedBackends,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MeshInsight_MTLS) Reset() {
	*x = MeshInsight_MTLS{}
	mi := &file_api_mesh_v1alpha1_mesh_insight_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeshInsight_MTLS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeshInsight_MTLS) ProtoMessage() {}

func (x *MeshInsight_MTLS) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_mesh_insight_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeshInsight_MTLS.ProtoReflect.Descriptor instead.
func (*MeshInsight_MTLS) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_mesh_insight_proto_rawDescGZIP(), []int{0, 4}
}

func (x *MeshInsight_MTLS) GetIssuedBackends() map[string]*MeshInsight_DataplaneStat {
	if x != nil {
		return x.IssuedBackends
	}
	return nil
}

func (x *MeshInsight_MTLS) GetSupportedBackends() map[string]*MeshInsight_DataplaneStat {
	if x != nil {
		return x.SupportedBackends
	}
	return nil
}

// ServiceStat defines statistics of mesh services
type MeshInsight_ServiceStat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         uint32                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Internal      uint32                 `protobuf:"varint,2,opt,name=internal,proto3" json:"internal,omitempty"`
	External      uint32                 `protobuf:"varint,3,opt,name=external,proto3" json:"external,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeshInsight_ServiceStat) Reset() {
	*x = MeshInsight_ServiceStat{}
	mi := &file_api_mesh_v1alpha1_mesh_insight_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeshInsight_ServiceStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeshInsight_ServiceStat) ProtoMessage() {}

func (x *MeshInsight_ServiceStat) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_mesh_insight_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeshInsight_ServiceStat.ProtoReflect.Descriptor instead.
func (*MeshInsight_ServiceStat) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_mesh_insight_proto_rawDescGZIP(), []int{0, 5}
}

func (x *MeshInsight_ServiceStat) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MeshInsight_ServiceStat) GetInternal() uint32 {
	if x != nil {
		return x.Internal
	}
	return 0
}

func (x *MeshInsight_ServiceStat) GetExternal() uint32 {
	if x != nil {
		return x.External
	}
	return 0
}

// DataplanesByType defines statistics splitted by dataplane types
type MeshInsight_DataplanesByType struct {
	state            protoimpl.MessageState     `protogen:"open.v1"`
	Standard         *MeshInsight_DataplaneStat `protobuf:"bytes,1,opt,name=standard,proto3" json:"standard,omitempty"`
	Gateway          *MeshInsight_DataplaneStat `protobuf:"bytes,2,opt,name=gateway,proto3" json:"gateway,omitempty"`
	GatewayBuiltin   *MeshInsight_DataplaneStat `protobuf:"bytes,3,opt,name=gatewayBuiltin,proto3" json:"gatewayBuiltin,omitempty"`
	GatewayDelegated *MeshInsight_DataplaneStat `protobuf:"bytes,4,opt,name=gatewayDelegated,proto3" json:"gatewayDelegated,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MeshInsight_DataplanesByType) Reset() {
	*x = MeshInsight_DataplanesByType{}
	mi := &file_api_mesh_v1alpha1_mesh_insight_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeshInsight_DataplanesByType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeshInsight_DataplanesByType) ProtoMessage() {}

func (x *MeshInsight_DataplanesByType) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_mesh_insight_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeshInsight_DataplanesByType.ProtoReflect.Descriptor instead.
func (*MeshInsight_DataplanesByType) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_mesh_insight_proto_rawDescGZIP(), []int{0, 6}
}

func (x *MeshInsight_DataplanesByType) GetStandard() *MeshInsight_DataplaneStat {
	if x != nil {
		return x.Standard
	}
	return nil
}

func (x *MeshInsight_DataplanesByType) GetGateway() *MeshInsight_DataplaneStat {
	if x != nil {
		return x.Gateway
	}
	return nil
}

func (x *MeshInsight_DataplanesByType) GetGatewayBuiltin() *MeshInsight_DataplaneStat {
	if x != nil {
		return x.GatewayBuiltin
	}
	return nil
}

func (x *MeshInsight_DataplanesByType) GetGatewayDelegated() *MeshInsight_DataplaneStat {
	if x != nil {
		return x.GatewayDelegated
	}
	return nil
}

type MeshInsight_ResourceStat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         uint32                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeshInsight_ResourceStat) Reset() {
	*x = MeshInsight_ResourceStat{}
	mi := &file_api_mesh_v1alpha1_mesh_insight_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeshInsight_ResourceStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeshInsight_ResourceStat) ProtoMessage() {}

func (x *MeshInsight_ResourceStat) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_mesh_insight_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeshInsight_ResourceStat.ProtoReflect.Descriptor instead.
func (*MeshInsight_ResourceStat) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_mesh_insight_proto_rawDescGZIP(), []int{0, 7}
}

func (x *MeshInsight_ResourceStat) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_api_mesh_v1alpha1_mesh_insight_proto protoreflect.FileDescriptor

const file_api_mesh_v1alpha1_mesh_insight_proto_rawDesc = "" +
	"\n" +
	"$api/mesh/v1alpha1/mesh_insight.proto\x12\x12kuma.mesh.v1alpha1\x1a\x16api/mesh/options.proto\"\xa4\x12\n" +
	"\vMeshInsight\x12M\n" +
	"\n" +
	"dataplanes\x18\x02 \x01(\v2-.kuma.mesh.v1alpha1.MeshInsight.DataplaneStatR\n" +
	"dataplanes\x12I\n" +
	"\bpolicies\x18\x03 \x03(\v2-.kuma.mesh.v1alpha1.MeshInsight.PoliciesEntryR\bpolicies\x12J\n" +
	"\n" +
	"dpVersions\x18\x04 \x01(\v2*.kuma.mesh.v1alpha1.MeshInsight.DpVersionsR\n" +
	"dpVersions\x128\n" +
	"\x04mTLS\x18\x05 \x01(\v2$.kuma.mesh.v1alpha1.MeshInsight.MTLSR\x04mTLS\x12G\n" +
	"\bservices\x18\x06 \x01(\v2+.kuma.mesh.v1alpha1.MeshInsight.ServiceStatR\bservices\x12\\\n" +
	"\x10dataplanesByType\x18\a \x01(\v20.kuma.mesh.v1alpha1.MeshInsight.DataplanesByTypeR\x10dataplanesByType\x12L\n" +
	"\tresources\x18\b \x03(\v2..kuma.mesh.v1alpha1.MeshInsight.ResourcesEntryR\tresources\x1a\x86\x01\n" +
	"\rDataplaneStat\x12\x14\n" +
	"\x05total\x18\x01 \x01(\rR\x05total\x12\x16\n" +
	"\x06online\x18\x02 \x01(\rR\x06online\x12\x18\n" +
	"\aoffline\x18\x03 \x01(\rR\aoffline\x12-\n" +
	"\x12partially_degraded\x18\x04 \x01(\rR\x11partiallyDegraded\x1a\"\n" +
	"\n" +
	"PolicyStat\x12\x14\n" +
	"\x05total\x18\x01 \x01(\rR\x05total\x1ag\n" +
	"\rPoliciesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12@\n" +
	"\x05value\x18\x02 \x01(\v2*.kuma.mesh.v1alpha1.MeshInsight.PolicyStatR\x05value:\x028\x01\x1a\xfc\x02\n" +
	"\n" +
	"DpVersions\x12N\n" +
	"\x06kumaDp\x18\x01 \x03(\v26.kuma.mesh.v1alpha1.MeshInsight.DpVersions.KumaDpEntryR\x06kumaDp\x12K\n" +
	"\x05envoy\x18\x02 \x03(\v25.kuma.mesh.v1alpha1.MeshInsight.DpVersions.EnvoyEntryR\x05envoy\x1ah\n" +
	"\vKumaDpEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12C\n" +
	"\x05value\x18\x02 \x01(\v2-.kuma.mesh.v1alpha1.MeshInsight.DataplaneStatR\x05value:\x028\x01\x1ag\n" +
	"\n" +
	"EnvoyEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12C\n" +
	"\x05value\x18\x02 \x01(\v2-.kuma.mesh.v1alpha1.MeshInsight.DataplaneStatR\x05value:\x028\x01\x1a\xba\x03\n" +
	"\x04MTLS\x12`\n" +
	"\x0eissuedBackends\x18\x01 \x03(\v28.kuma.mesh.v1alpha1.MeshInsight.MTLS.IssuedBackendsEntryR\x0eissuedBackends\x12i\n" +
	"\x11supportedBackends\x18\x02 \x03(\v2;.kuma.mesh.v1alpha1.MeshInsight.MTLS.SupportedBackendsEntryR\x11supportedBackends\x1ap\n" +
	"\x13IssuedBackendsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12C\n" +
	"\x05value\x18\x02 \x01(\v2-.kuma.mesh.v1alpha1.MeshInsight.DataplaneStatR\x05value:\x028\x01\x1as\n" +
	"\x16SupportedBackendsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12C\n" +
	"\x05value\x18\x02 \x01(\v2-.kuma.mesh.v1alpha1.MeshInsight.DataplaneStatR\x05value:\x028\x01\x1a[\n" +
	"\vServiceStat\x12\x14\n" +
	"\x05total\x18\x01 \x01(\rR\x05total\x12\x1a\n" +
	"\binternal\x18\x02 \x01(\rR\binternal\x12\x1a\n" +
	"\bexternal\x18\x03 \x01(\rR\bexternal\x1a\xd8\x02\n" +
	"\x10DataplanesByType\x12I\n" +
	"\bstandard\x18\x01 \x01(\v2-.kuma.mesh.v1alpha1.MeshInsight.DataplaneStatR\bstandard\x12G\n" +
	"\agateway\x18\x02 \x01(\v2-.kuma.mesh.v1alpha1.MeshInsight.DataplaneStatR\agateway\x12U\n" +
	"\x0egatewayBuiltin\x18\x03 \x01(\v2-.kuma.mesh.v1alpha1.MeshInsight.DataplaneStatR\x0egatewayBuiltin\x12Y\n" +
	"\x10gatewayDelegated\x18\x04 \x01(\v2-.kuma.mesh.v1alpha1.MeshInsight.DataplaneStatR\x10gatewayDelegated\x1a$\n" +
	"\fResourceStat\x12\x14\n" +
	"\x05total\x18\x01 \x01(\rR\x05total\x1aj\n" +
	"\x0eResourcesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12B\n" +
	"\x05value\x18\x02 \x01(\v2,.kuma.mesh.v1alpha1.MeshInsight.ResourceStatR\x05value:\x028\x01:^\xaa\x8c\x89\xa6\x01X\n" +
	"\x13MeshInsightResource\x12\vMeshInsight\x18\x01\"\x04mesh:\x10\n" +
	"\fmesh-insight\x18\x01R\x1amodel.ProvidedByGlobalFlagJ\x04\b\x01\x10\x02B*Z(github.com/kumahq/kuma/api/mesh/v1alpha1b\x06proto3"

var (
	file_api_mesh_v1alpha1_mesh_insight_proto_rawDescOnce sync.Once
	file_api_mesh_v1alpha1_mesh_insight_proto_rawDescData []byte
)

func file_api_mesh_v1alpha1_mesh_insight_proto_rawDescGZIP() []byte {
	file_api_mesh_v1alpha1_mesh_insight_proto_rawDescOnce.Do(func() {
		file_api_mesh_v1alpha1_mesh_insight_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_mesh_v1alpha1_mesh_insight_proto_rawDesc), len(file_api_mesh_v1alpha1_mesh_insight_proto_rawDesc)))
	})
	return file_api_mesh_v1alpha1_mesh_insight_proto_rawDescData
}

var file_api_mesh_v1alpha1_mesh_insight_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_mesh_v1alpha1_mesh_insight_proto_goTypes = []any{
	(*MeshInsight)(nil),                  // 0: kuma.mesh.v1alpha1.MeshInsight
	(*MeshInsight_DataplaneStat)(nil),    // 1: kuma.mesh.v1alpha1.MeshInsight.DataplaneStat
	(*MeshInsight_PolicyStat)(nil),       // 2: kuma.mesh.v1alpha1.MeshInsight.PolicyStat
	nil,                                  // 3: kuma.mesh.v1alpha1.MeshInsight.PoliciesEntry
	(*MeshInsight_DpVersions)(nil),       // 4: kuma.mesh.v1alpha1.MeshInsight.DpVersions
	(*MeshInsight_MTLS)(nil),             // 5: kuma.mesh.v1alpha1.MeshInsight.MTLS
	(*MeshInsight_ServiceStat)(nil),      // 6: kuma.mesh.v1alpha1.MeshInsight.ServiceStat
	(*MeshInsight_DataplanesByType)(nil), // 7: kuma.mesh.v1alpha1.MeshInsight.DataplanesByType
	(*MeshInsight_ResourceStat)(nil),     // 8: kuma.mesh.v1alpha1.MeshInsight.ResourceStat
	nil,                                  // 9: kuma.mesh.v1alpha1.MeshInsight.ResourcesEntry
	nil,                                  // 10: kuma.mesh.v1alpha1.MeshInsight.DpVersions.KumaDpEntry
	nil,                                  // 11: kuma.mesh.v1alpha1.MeshInsight.DpVersions.EnvoyEntry
	nil,                                  // 12: kuma.mesh.v1alpha1.MeshInsight.MTLS.IssuedBackendsEntry
	nil,                                  // 13: kuma.mesh.v1alpha1.MeshInsight.MTLS.SupportedBackendsEntry
}
var file_api_mesh_v1alpha1_mesh_insight_proto_depIdxs = []int32{
	1,  // 0: kuma.mesh.v1alpha1.MeshInsight.dataplanes:type_name -> kuma.mesh.v1alpha1.MeshInsight.DataplaneStat
	3,  // 1: kuma.mesh.v1alpha1.MeshInsight.policies:type_name -> kuma.mesh.v1alpha1.MeshInsight.PoliciesEntry
	4,  // 2: kuma.mesh.v1alpha1.MeshInsight.dpVersions:type_name -> kuma.mesh.v1alpha1.MeshInsight.DpVersions
	5,  // 3: kuma.mesh.v1alpha1.MeshInsight.mTLS:type_name -> kuma.mesh.v1alpha1.MeshInsight.MTLS
	6,  // 4: kuma.mesh.v1alpha1.MeshInsight.services:type_name -> kuma.mesh.v1alpha1.MeshInsight.ServiceStat
	7,  // 5: kuma.mesh.v1alpha1.MeshInsight.dataplanesByType:type_name -> kuma.mesh.v1alpha1.MeshInsight.DataplanesByType
	9,  // 6: kuma.mesh.v1alpha1.MeshInsight.resources:type_name -> kuma.mesh.v1alpha1.MeshInsight.ResourcesEntry
	2,  // 7: kuma.mesh.v1alpha1.MeshInsight.PoliciesEntry.value:type_name -> kuma.mesh.v1alpha1.MeshInsight.PolicyStat
	10, // 8: kuma.mesh.v1alpha1.MeshInsight.DpVersions.kumaDp:type_name -> kuma.mesh.v1alpha1.MeshInsight.DpVersions.KumaDpEntry
	11, // 9: kuma.mesh.v1alpha1.MeshInsight.DpVersions.envoy:type_name -> kuma.mesh.v1alpha1.MeshInsight.DpVersions.EnvoyEntry
	12, // 10: kuma.mesh.v1alpha1.MeshInsight.MTLS.issuedBackends:type_name -> kuma.mesh.v1alpha1.MeshInsight.MTLS.IssuedBackendsEntry
	13, // 11: kuma.mesh.v1alpha1.MeshInsight.MTLS.supportedBackends:type_name -> kuma.mesh.v1alpha1.MeshInsight.MTLS.SupportedBackendsEntry
	1,  // 12: kuma.mesh.v1alpha1.MeshInsight.DataplanesByType.standard:type_name -> kuma.mesh.v1alpha1.MeshInsight.DataplaneStat
	1,  // 13: kuma.mesh.v1alpha1.MeshInsight.DataplanesByType.gateway:type_name -> kuma.mesh.v1alpha1.MeshInsight.DataplaneStat
	1,  // 14: kuma.mesh.v1alpha1.MeshInsight.DataplanesByType.gatewayBuiltin:type_name -> kuma.mesh.v1alpha1.MeshInsight.DataplaneStat
	1,  // 15: kuma.mesh.v1alpha1.MeshInsight.DataplanesByType.gatewayDelegated:type_name -> kuma.mesh.v1alpha1.MeshInsight.DataplaneStat
	8,  // 16: kuma.mesh.v1alpha1.MeshInsight.ResourcesEntry.value:type_name -> kuma.mesh.v1alpha1.MeshInsight.ResourceStat
	1,  // 17: kuma.mesh.v1alpha1.MeshInsight.DpVersions.KumaDpEntry.value:type_name -> kuma.mesh.v1alpha1.MeshInsight.DataplaneStat
	1,  // 18: kuma.mesh.v1alpha1.MeshInsight.DpVersions.EnvoyEntry.value:type_name -> kuma.mesh.v1alpha1.MeshInsight.DataplaneStat
	1,  // 19: kuma.mesh.v1alpha1.MeshInsight.MTLS.IssuedBackendsEntry.value:type_name -> kuma.mesh.v1alpha1.MeshInsight.DataplaneStat
	1,  // 20: kuma.mesh.v1alpha1.MeshInsight.MTLS.SupportedBackendsEntry.value:type_name -> kuma.mesh.v1alpha1.MeshInsight.DataplaneStat
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_api_mesh_v1alpha1_mesh_insight_proto_init() }
func file_api_mesh_v1alpha1_mesh_insight_proto_init() {
	if File_api_mesh_v1alpha1_mesh_insight_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_mesh_v1alpha1_mesh_insight_proto_rawDesc), len(file_api_mesh_v1alpha1_mesh_insight_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_mesh_v1alpha1_mesh_insight_proto_goTypes,
		DependencyIndexes: file_api_mesh_v1alpha1_mesh_insight_proto_depIdxs,
		MessageInfos:      file_api_mesh_v1alpha1_mesh_insight_proto_msgTypes,
	}.Build()
	File_api_mesh_v1alpha1_mesh_insight_proto = out.File
	file_api_mesh_v1alpha1_mesh_insight_proto_goTypes = nil
	file_api_mesh_v1alpha1_mesh_insight_proto_depIdxs = nil
}
