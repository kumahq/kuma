// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: api/mesh/v1alpha1/dataplane_insight.proto

package v1alpha1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/kumahq/kuma/api/mesh"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DataplaneInsight defines the observed state of a Dataplane.
type DataplaneInsight struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of ADS subscriptions created by a given Dataplane.
	Subscriptions []*DiscoverySubscription `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	// Insights about mTLS for Dataplane.
	MTLS          *DataplaneInsight_MTLS `protobuf:"bytes,2,opt,name=mTLS,proto3" json:"mTLS,omitempty"`
	Metadata      *structpb.Struct       `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataplaneInsight) Reset() {
	*x = DataplaneInsight{}
	mi := &file_api_mesh_v1alpha1_dataplane_insight_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataplaneInsight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataplaneInsight) ProtoMessage() {}

func (x *DataplaneInsight) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_dataplane_insight_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataplaneInsight.ProtoReflect.Descriptor instead.
func (*DataplaneInsight) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_dataplane_insight_proto_rawDescGZIP(), []int{0}
}

func (x *DataplaneInsight) GetSubscriptions() []*DiscoverySubscription {
	if x != nil {
		return x.Subscriptions
	}
	return nil
}

func (x *DataplaneInsight) GetMTLS() *DataplaneInsight_MTLS {
	if x != nil {
		return x.MTLS
	}
	return nil
}

func (x *DataplaneInsight) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// DiscoverySubscription describes a single ADS subscription
// created by a Dataplane to the Control Plane.
// Ideally, there should be only one such subscription per Dataplane lifecycle.
// Presence of multiple subscriptions might indicate one of the following
// events:
// - transient loss of network connection between Dataplane and Control Plane
// - Dataplane restart (i.e. hot restart or crash)
// - Control Plane restart (i.e. rolling update or crash)
// - etc
type DiscoverySubscription struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique id per ADS subscription.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Control Plane instance that handled given subscription.
	ControlPlaneInstanceId string `protobuf:"bytes,2,opt,name=control_plane_instance_id,json=controlPlaneInstanceId,proto3" json:"control_plane_instance_id,omitempty"`
	// Time when a given Dataplane connected to the Control Plane.
	ConnectTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=connect_time,json=connectTime,proto3" json:"connect_time,omitempty"`
	// Time when a given Dataplane disconnected from the Control Plane.
	DisconnectTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=disconnect_time,json=disconnectTime,proto3" json:"disconnect_time,omitempty"`
	// Status of the ADS subscription.
	Status *DiscoverySubscriptionStatus `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	// Version of Envoy and Kuma dataplane
	Version *Version `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	// Generation is an integer number which is periodically increased by the
	// status sink
	Generation    uint32 `protobuf:"varint,7,opt,name=generation,proto3" json:"generation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscoverySubscription) Reset() {
	*x = DiscoverySubscription{}
	mi := &file_api_mesh_v1alpha1_dataplane_insight_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoverySubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverySubscription) ProtoMessage() {}

func (x *DiscoverySubscription) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_dataplane_insight_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverySubscription.ProtoReflect.Descriptor instead.
func (*DiscoverySubscription) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_dataplane_insight_proto_rawDescGZIP(), []int{1}
}

func (x *DiscoverySubscription) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DiscoverySubscription) GetControlPlaneInstanceId() string {
	if x != nil {
		return x.ControlPlaneInstanceId
	}
	return ""
}

func (x *DiscoverySubscription) GetConnectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ConnectTime
	}
	return nil
}

func (x *DiscoverySubscription) GetDisconnectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DisconnectTime
	}
	return nil
}

func (x *DiscoverySubscription) GetStatus() *DiscoverySubscriptionStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *DiscoverySubscription) GetVersion() *Version {
	if x != nil {
		return x.Version
	}
	return nil
}

func (x *DiscoverySubscription) GetGeneration() uint32 {
	if x != nil {
		return x.Generation
	}
	return 0
}

// DiscoverySubscriptionStatus defines status of an ADS subscription.
type DiscoverySubscriptionStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Time when status of a given ADS subscription was most recently updated.
	LastUpdateTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=last_update_time,json=lastUpdateTime,proto3" json:"last_update_time,omitempty"`
	// Total defines an aggregate over individual xDS stats.
	Total *DiscoveryServiceStats `protobuf:"bytes,2,opt,name=total,proto3" json:"total,omitempty"`
	// CDS defines all CDS stats.
	Cds *DiscoveryServiceStats `protobuf:"bytes,3,opt,name=cds,proto3" json:"cds,omitempty"`
	// EDS defines all EDS stats.
	Eds *DiscoveryServiceStats `protobuf:"bytes,4,opt,name=eds,proto3" json:"eds,omitempty"`
	// LDS defines all LDS stats.
	Lds *DiscoveryServiceStats `protobuf:"bytes,5,opt,name=lds,proto3" json:"lds,omitempty"`
	// RDS defines all RDS stats.
	Rds           *DiscoveryServiceStats `protobuf:"bytes,6,opt,name=rds,proto3" json:"rds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscoverySubscriptionStatus) Reset() {
	*x = DiscoverySubscriptionStatus{}
	mi := &file_api_mesh_v1alpha1_dataplane_insight_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoverySubscriptionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverySubscriptionStatus) ProtoMessage() {}

func (x *DiscoverySubscriptionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_dataplane_insight_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverySubscriptionStatus.ProtoReflect.Descriptor instead.
func (*DiscoverySubscriptionStatus) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_dataplane_insight_proto_rawDescGZIP(), []int{2}
}

func (x *DiscoverySubscriptionStatus) GetLastUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdateTime
	}
	return nil
}

func (x *DiscoverySubscriptionStatus) GetTotal() *DiscoveryServiceStats {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *DiscoverySubscriptionStatus) GetCds() *DiscoveryServiceStats {
	if x != nil {
		return x.Cds
	}
	return nil
}

func (x *DiscoverySubscriptionStatus) GetEds() *DiscoveryServiceStats {
	if x != nil {
		return x.Eds
	}
	return nil
}

func (x *DiscoverySubscriptionStatus) GetLds() *DiscoveryServiceStats {
	if x != nil {
		return x.Lds
	}
	return nil
}

func (x *DiscoverySubscriptionStatus) GetRds() *DiscoveryServiceStats {
	if x != nil {
		return x.Rds
	}
	return nil
}

// DiscoveryServiceStats defines all stats over a single xDS service.
type DiscoveryServiceStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Number of xDS responses sent to the Dataplane.
	ResponsesSent uint64 `protobuf:"varint,1,opt,name=responses_sent,json=responsesSent,proto3" json:"responses_sent,omitempty"`
	// Number of xDS responses ACKed by the Dataplane.
	ResponsesAcknowledged uint64 `protobuf:"varint,2,opt,name=responses_acknowledged,json=responsesAcknowledged,proto3" json:"responses_acknowledged,omitempty"`
	// Number of xDS responses NACKed by the Dataplane.
	ResponsesRejected uint64 `protobuf:"varint,3,opt,name=responses_rejected,json=responsesRejected,proto3" json:"responses_rejected,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DiscoveryServiceStats) Reset() {
	*x = DiscoveryServiceStats{}
	mi := &file_api_mesh_v1alpha1_dataplane_insight_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoveryServiceStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryServiceStats) ProtoMessage() {}

func (x *DiscoveryServiceStats) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_dataplane_insight_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryServiceStats.ProtoReflect.Descriptor instead.
func (*DiscoveryServiceStats) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_dataplane_insight_proto_rawDescGZIP(), []int{3}
}

func (x *DiscoveryServiceStats) GetResponsesSent() uint64 {
	if x != nil {
		return x.ResponsesSent
	}
	return 0
}

func (x *DiscoveryServiceStats) GetResponsesAcknowledged() uint64 {
	if x != nil {
		return x.ResponsesAcknowledged
	}
	return 0
}

func (x *DiscoveryServiceStats) GetResponsesRejected() uint64 {
	if x != nil {
		return x.ResponsesRejected
	}
	return 0
}

// Version defines version of Kuma Dataplane and Envoy
type Version struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Version of Kuma Dataplane
	KumaDp *KumaDpVersion `protobuf:"bytes,1,opt,name=kumaDp,proto3" json:"kumaDp,omitempty"`
	// Version of Envoy
	Envoy *EnvoyVersion `protobuf:"bytes,2,opt,name=envoy,proto3" json:"envoy,omitempty"`
	// Versions of other dependencies, i.e. CoreDNS
	Dependencies  map[string]string `protobuf:"bytes,3,rep,name=dependencies,proto3" json:"dependencies,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Version) Reset() {
	*x = Version{}
	mi := &file_api_mesh_v1alpha1_dataplane_insight_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Version) ProtoMessage() {}

func (x *Version) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_dataplane_insight_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Version.ProtoReflect.Descriptor instead.
func (*Version) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_dataplane_insight_proto_rawDescGZIP(), []int{4}
}

func (x *Version) GetKumaDp() *KumaDpVersion {
	if x != nil {
		return x.KumaDp
	}
	return nil
}

func (x *Version) GetEnvoy() *EnvoyVersion {
	if x != nil {
		return x.Envoy
	}
	return nil
}

func (x *Version) GetDependencies() map[string]string {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

// KumaDpVersion describes details of Kuma Dataplane version
type KumaDpVersion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Version number of Kuma Dataplane
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Git tag of Kuma Dataplane version
	GitTag string `protobuf:"bytes,2,opt,name=gitTag,proto3" json:"gitTag,omitempty"`
	// Git commit of Kuma Dataplane version
	GitCommit string `protobuf:"bytes,3,opt,name=gitCommit,proto3" json:"gitCommit,omitempty"`
	// Build date of Kuma Dataplane version
	BuildDate string `protobuf:"bytes,4,opt,name=buildDate,proto3" json:"buildDate,omitempty"`
	// True iff Kuma DP version is compatible with Kuma CP version
	KumaCpCompatible bool `protobuf:"varint,5,opt,name=kumaCpCompatible,proto3" json:"kumaCpCompatible,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *KumaDpVersion) Reset() {
	*x = KumaDpVersion{}
	mi := &file_api_mesh_v1alpha1_dataplane_insight_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KumaDpVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KumaDpVersion) ProtoMessage() {}

func (x *KumaDpVersion) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_dataplane_insight_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KumaDpVersion.ProtoReflect.Descriptor instead.
func (*KumaDpVersion) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_dataplane_insight_proto_rawDescGZIP(), []int{5}
}

func (x *KumaDpVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *KumaDpVersion) GetGitTag() string {
	if x != nil {
		return x.GitTag
	}
	return ""
}

func (x *KumaDpVersion) GetGitCommit() string {
	if x != nil {
		return x.GitCommit
	}
	return ""
}

func (x *KumaDpVersion) GetBuildDate() string {
	if x != nil {
		return x.BuildDate
	}
	return ""
}

func (x *KumaDpVersion) GetKumaCpCompatible() bool {
	if x != nil {
		return x.KumaCpCompatible
	}
	return false
}

// EnvoyVersion describes details of Envoy version
type EnvoyVersion struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Version number of Envoy
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Full build tag of Envoy version
	Build string `protobuf:"bytes,2,opt,name=build,proto3" json:"build,omitempty"`
	// True iff Envoy version is compatible with Kuma DP version
	KumaDpCompatible bool `protobuf:"varint,3,opt,name=kumaDpCompatible,proto3" json:"kumaDpCompatible,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *EnvoyVersion) Reset() {
	*x = EnvoyVersion{}
	mi := &file_api_mesh_v1alpha1_dataplane_insight_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnvoyVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvoyVersion) ProtoMessage() {}

func (x *EnvoyVersion) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_dataplane_insight_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvoyVersion.ProtoReflect.Descriptor instead.
func (*EnvoyVersion) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_dataplane_insight_proto_rawDescGZIP(), []int{6}
}

func (x *EnvoyVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *EnvoyVersion) GetBuild() string {
	if x != nil {
		return x.Build
	}
	return ""
}

func (x *EnvoyVersion) GetKumaDpCompatible() bool {
	if x != nil {
		return x.KumaDpCompatible
	}
	return false
}

// MTLS defines insights for mTLS
type DataplaneInsight_MTLS struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Expiration time of the last certificate that was generated for a
	// Dataplane.
	CertificateExpirationTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=certificate_expiration_time,json=certificateExpirationTime,proto3" json:"certificate_expiration_time,omitempty"`
	// Time on which the last certificate was generated.
	LastCertificateRegeneration *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=last_certificate_regeneration,json=lastCertificateRegeneration,proto3" json:"last_certificate_regeneration,omitempty"`
	// Number of certificate regenerations for a Dataplane.
	CertificateRegenerations uint32 `protobuf:"varint,3,opt,name=certificate_regenerations,json=certificateRegenerations,proto3" json:"certificate_regenerations,omitempty"`
	// Backend that was used to generate current certificate
	IssuedBackend string `protobuf:"bytes,4,opt,name=issuedBackend,proto3" json:"issuedBackend,omitempty"`
	// Supported backends (CA).
	SupportedBackends []string `protobuf:"bytes,5,rep,name=supportedBackends,proto3" json:"supportedBackends,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DataplaneInsight_MTLS) Reset() {
	*x = DataplaneInsight_MTLS{}
	mi := &file_api_mesh_v1alpha1_dataplane_insight_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataplaneInsight_MTLS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataplaneInsight_MTLS) ProtoMessage() {}

func (x *DataplaneInsight_MTLS) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_dataplane_insight_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataplaneInsight_MTLS.ProtoReflect.Descriptor instead.
func (*DataplaneInsight_MTLS) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_dataplane_insight_proto_rawDescGZIP(), []int{0, 0}
}

func (x *DataplaneInsight_MTLS) GetCertificateExpirationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CertificateExpirationTime
	}
	return nil
}

func (x *DataplaneInsight_MTLS) GetLastCertificateRegeneration() *timestamppb.Timestamp {
	if x != nil {
		return x.LastCertificateRegeneration
	}
	return nil
}

func (x *DataplaneInsight_MTLS) GetCertificateRegenerations() uint32 {
	if x != nil {
		return x.CertificateRegenerations
	}
	return 0
}

func (x *DataplaneInsight_MTLS) GetIssuedBackend() string {
	if x != nil {
		return x.IssuedBackend
	}
	return ""
}

func (x *DataplaneInsight_MTLS) GetSupportedBackends() []string {
	if x != nil {
		return x.SupportedBackends
	}
	return nil
}

var File_api_mesh_v1alpha1_dataplane_insight_proto protoreflect.FileDescriptor

const file_api_mesh_v1alpha1_dataplane_insight_proto_rawDesc = "" +
	"\n" +
	")api/mesh/v1alpha1/dataplane_insight.proto\x12\x12kuma.mesh.v1alpha1\x1a\x16api/mesh/options.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17validate/validate.proto\"\x98\x05\n" +
	"\x10DataplaneInsight\x12O\n" +
	"\rsubscriptions\x18\x01 \x03(\v2).kuma.mesh.v1alpha1.DiscoverySubscriptionR\rsubscriptions\x12=\n" +
	"\x04mTLS\x18\x02 \x01(\v2).kuma.mesh.v1alpha1.DataplaneInsight.MTLSR\x04mTLS\x123\n" +
	"\bmetadata\x18\x03 \x01(\v2\x17.google.protobuf.StructR\bmetadata\x1a\xd3\x02\n" +
	"\x04MTLS\x12Z\n" +
	"\x1bcertificate_expiration_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x19certificateExpirationTime\x12^\n" +
	"\x1dlast_certificate_regeneration\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\x1blastCertificateRegeneration\x12;\n" +
	"\x19certificate_regenerations\x18\x03 \x01(\rR\x18certificateRegenerations\x12$\n" +
	"\rissuedBackend\x18\x04 \x01(\tR\rissuedBackend\x12,\n" +
	"\x11supportedBackends\x18\x05 \x03(\tR\x11supportedBackends:i\xaa\x8c\x89\xa6\x01c\n" +
	"\x18DataplaneInsightResource\x12\x10DataplaneInsight\"\x04mesh:\x15\n" +
	"\x11dataplane-insight\x18\x01R\x16model.ZoneToGlobalFlagX\x01\"\xac\x03\n" +
	"\x15DiscoverySubscription\x12\x17\n" +
	"\x02id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x02id\x12B\n" +
	"\x19control_plane_instance_id\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x16controlPlaneInstanceId\x12G\n" +
	"\fconnect_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampB\b\xfaB\x05\xb2\x01\x02\b\x01R\vconnectTime\x12C\n" +
	"\x0fdisconnect_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x0edisconnectTime\x12Q\n" +
	"\x06status\x18\x05 \x01(\v2/.kuma.mesh.v1alpha1.DiscoverySubscriptionStatusB\b\xfaB\x05\x8a\x01\x02\x10\x01R\x06status\x125\n" +
	"\aversion\x18\x06 \x01(\v2\x1b.kuma.mesh.v1alpha1.VersionR\aversion\x12\x1e\n" +
	"\n" +
	"generation\x18\a \x01(\rR\n" +
	"generation\"\x98\x03\n" +
	"\x1bDiscoverySubscriptionStatus\x12D\n" +
	"\x10last_update_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x0elastUpdateTime\x12?\n" +
	"\x05total\x18\x02 \x01(\v2).kuma.mesh.v1alpha1.DiscoveryServiceStatsR\x05total\x12;\n" +
	"\x03cds\x18\x03 \x01(\v2).kuma.mesh.v1alpha1.DiscoveryServiceStatsR\x03cds\x12;\n" +
	"\x03eds\x18\x04 \x01(\v2).kuma.mesh.v1alpha1.DiscoveryServiceStatsR\x03eds\x12;\n" +
	"\x03lds\x18\x05 \x01(\v2).kuma.mesh.v1alpha1.DiscoveryServiceStatsR\x03lds\x12;\n" +
	"\x03rds\x18\x06 \x01(\v2).kuma.mesh.v1alpha1.DiscoveryServiceStatsR\x03rds\"\xa4\x01\n" +
	"\x15DiscoveryServiceStats\x12%\n" +
	"\x0eresponses_sent\x18\x01 \x01(\x04R\rresponsesSent\x125\n" +
	"\x16responses_acknowledged\x18\x02 \x01(\x04R\x15responsesAcknowledged\x12-\n" +
	"\x12responses_rejected\x18\x03 \x01(\x04R\x11responsesRejected\"\x90\x02\n" +
	"\aVersion\x129\n" +
	"\x06kumaDp\x18\x01 \x01(\v2!.kuma.mesh.v1alpha1.KumaDpVersionR\x06kumaDp\x126\n" +
	"\x05envoy\x18\x02 \x01(\v2 .kuma.mesh.v1alpha1.EnvoyVersionR\x05envoy\x12Q\n" +
	"\fdependencies\x18\x03 \x03(\v2-.kuma.mesh.v1alpha1.Version.DependenciesEntryR\fdependencies\x1a?\n" +
	"\x11DependenciesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa9\x01\n" +
	"\rKumaDpVersion\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x16\n" +
	"\x06gitTag\x18\x02 \x01(\tR\x06gitTag\x12\x1c\n" +
	"\tgitCommit\x18\x03 \x01(\tR\tgitCommit\x12\x1c\n" +
	"\tbuildDate\x18\x04 \x01(\tR\tbuildDate\x12*\n" +
	"\x10kumaCpCompatible\x18\x05 \x01(\bR\x10kumaCpCompatible\"j\n" +
	"\fEnvoyVersion\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x14\n" +
	"\x05build\x18\x02 \x01(\tR\x05build\x12*\n" +
	"\x10kumaDpCompatible\x18\x03 \x01(\bR\x10kumaDpCompatibleB*Z(github.com/kumahq/kuma/api/mesh/v1alpha1b\x06proto3"

var (
	file_api_mesh_v1alpha1_dataplane_insight_proto_rawDescOnce sync.Once
	file_api_mesh_v1alpha1_dataplane_insight_proto_rawDescData []byte
)

func file_api_mesh_v1alpha1_dataplane_insight_proto_rawDescGZIP() []byte {
	file_api_mesh_v1alpha1_dataplane_insight_proto_rawDescOnce.Do(func() {
		file_api_mesh_v1alpha1_dataplane_insight_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_mesh_v1alpha1_dataplane_insight_proto_rawDesc), len(file_api_mesh_v1alpha1_dataplane_insight_proto_rawDesc)))
	})
	return file_api_mesh_v1alpha1_dataplane_insight_proto_rawDescData
}

var file_api_mesh_v1alpha1_dataplane_insight_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_mesh_v1alpha1_dataplane_insight_proto_goTypes = []any{
	(*DataplaneInsight)(nil),            // 0: kuma.mesh.v1alpha1.DataplaneInsight
	(*DiscoverySubscription)(nil),       // 1: kuma.mesh.v1alpha1.DiscoverySubscription
	(*DiscoverySubscriptionStatus)(nil), // 2: kuma.mesh.v1alpha1.DiscoverySubscriptionStatus
	(*DiscoveryServiceStats)(nil),       // 3: kuma.mesh.v1alpha1.DiscoveryServiceStats
	(*Version)(nil),                     // 4: kuma.mesh.v1alpha1.Version
	(*KumaDpVersion)(nil),               // 5: kuma.mesh.v1alpha1.KumaDpVersion
	(*EnvoyVersion)(nil),                // 6: kuma.mesh.v1alpha1.EnvoyVersion
	(*DataplaneInsight_MTLS)(nil),       // 7: kuma.mesh.v1alpha1.DataplaneInsight.MTLS
	nil,                                 // 8: kuma.mesh.v1alpha1.Version.DependenciesEntry
	(*structpb.Struct)(nil),             // 9: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil),       // 10: google.protobuf.Timestamp
}
var file_api_mesh_v1alpha1_dataplane_insight_proto_depIdxs = []int32{
	1,  // 0: kuma.mesh.v1alpha1.DataplaneInsight.subscriptions:type_name -> kuma.mesh.v1alpha1.DiscoverySubscription
	7,  // 1: kuma.mesh.v1alpha1.DataplaneInsight.mTLS:type_name -> kuma.mesh.v1alpha1.DataplaneInsight.MTLS
	9,  // 2: kuma.mesh.v1alpha1.DataplaneInsight.metadata:type_name -> google.protobuf.Struct
	10, // 3: kuma.mesh.v1alpha1.DiscoverySubscription.connect_time:type_name -> google.protobuf.Timestamp
	10, // 4: kuma.mesh.v1alpha1.DiscoverySubscription.disconnect_time:type_name -> google.protobuf.Timestamp
	2,  // 5: kuma.mesh.v1alpha1.DiscoverySubscription.status:type_name -> kuma.mesh.v1alpha1.DiscoverySubscriptionStatus
	4,  // 6: kuma.mesh.v1alpha1.DiscoverySubscription.version:type_name -> kuma.mesh.v1alpha1.Version
	10, // 7: kuma.mesh.v1alpha1.DiscoverySubscriptionStatus.last_update_time:type_name -> google.protobuf.Timestamp
	3,  // 8: kuma.mesh.v1alpha1.DiscoverySubscriptionStatus.total:type_name -> kuma.mesh.v1alpha1.DiscoveryServiceStats
	3,  // 9: kuma.mesh.v1alpha1.DiscoverySubscriptionStatus.cds:type_name -> kuma.mesh.v1alpha1.DiscoveryServiceStats
	3,  // 10: kuma.mesh.v1alpha1.DiscoverySubscriptionStatus.eds:type_name -> kuma.mesh.v1alpha1.DiscoveryServiceStats
	3,  // 11: kuma.mesh.v1alpha1.DiscoverySubscriptionStatus.lds:type_name -> kuma.mesh.v1alpha1.DiscoveryServiceStats
	3,  // 12: kuma.mesh.v1alpha1.DiscoverySubscriptionStatus.rds:type_name -> kuma.mesh.v1alpha1.DiscoveryServiceStats
	5,  // 13: kuma.mesh.v1alpha1.Version.kumaDp:type_name -> kuma.mesh.v1alpha1.KumaDpVersion
	6,  // 14: kuma.mesh.v1alpha1.Version.envoy:type_name -> kuma.mesh.v1alpha1.EnvoyVersion
	8,  // 15: kuma.mesh.v1alpha1.Version.dependencies:type_name -> kuma.mesh.v1alpha1.Version.DependenciesEntry
	10, // 16: kuma.mesh.v1alpha1.DataplaneInsight.MTLS.certificate_expiration_time:type_name -> google.protobuf.Timestamp
	10, // 17: kuma.mesh.v1alpha1.DataplaneInsight.MTLS.last_certificate_regeneration:type_name -> google.protobuf.Timestamp
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_api_mesh_v1alpha1_dataplane_insight_proto_init() }
func file_api_mesh_v1alpha1_dataplane_insight_proto_init() {
	if File_api_mesh_v1alpha1_dataplane_insight_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_mesh_v1alpha1_dataplane_insight_proto_rawDesc), len(file_api_mesh_v1alpha1_dataplane_insight_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_mesh_v1alpha1_dataplane_insight_proto_goTypes,
		DependencyIndexes: file_api_mesh_v1alpha1_dataplane_insight_proto_depIdxs,
		MessageInfos:      file_api_mesh_v1alpha1_dataplane_insight_proto_msgTypes,
	}.Build()
	File_api_mesh_v1alpha1_dataplane_insight_proto = out.File
	file_api_mesh_v1alpha1_dataplane_insight_proto_goTypes = nil
	file_api_mesh_v1alpha1_dataplane_insight_proto_depIdxs = nil
}
