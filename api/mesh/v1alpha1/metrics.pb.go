// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mesh/v1alpha1/metrics.proto

package v1alpha1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Metrics defines configuration for metrics that should be collected and
// exposed by dataplanes.
type Metrics struct {
	// Prometheus-specific configuration for metrics that should be collected and
	// exposed by dataplanes.
	Prometheus           *Metrics_Prometheus `protobuf:"bytes,1,opt,name=prometheus,proto3" json:"prometheus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Metrics) Reset()         { *m = Metrics{} }
func (m *Metrics) String() string { return proto.CompactTextString(m) }
func (*Metrics) ProtoMessage()    {}
func (*Metrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd8c7f420ce268c, []int{0}
}

func (m *Metrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metrics.Unmarshal(m, b)
}
func (m *Metrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metrics.Marshal(b, m, deterministic)
}
func (m *Metrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metrics.Merge(m, src)
}
func (m *Metrics) XXX_Size() int {
	return xxx_messageInfo_Metrics.Size(m)
}
func (m *Metrics) XXX_DiscardUnknown() {
	xxx_messageInfo_Metrics.DiscardUnknown(m)
}

var xxx_messageInfo_Metrics proto.InternalMessageInfo

func (m *Metrics) GetPrometheus() *Metrics_Prometheus {
	if m != nil {
		return m.Prometheus
	}
	return nil
}

// Prometheus defines Prometheus-specific configuration for metrics that
// should be collected and exposed by dataplanes.
type Metrics_Prometheus struct {
	// Port on which a dataplane should expose HTTP endpoint with Prometheus
	// metrics.
	Port uint32 `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	// Path on which a dataplane should expose HTTP endpoint with Prometheus
	// metrics.
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metrics_Prometheus) Reset()         { *m = Metrics_Prometheus{} }
func (m *Metrics_Prometheus) String() string { return proto.CompactTextString(m) }
func (*Metrics_Prometheus) ProtoMessage()    {}
func (*Metrics_Prometheus) Descriptor() ([]byte, []int) {
	return fileDescriptor_7dd8c7f420ce268c, []int{0, 0}
}

func (m *Metrics_Prometheus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metrics_Prometheus.Unmarshal(m, b)
}
func (m *Metrics_Prometheus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metrics_Prometheus.Marshal(b, m, deterministic)
}
func (m *Metrics_Prometheus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metrics_Prometheus.Merge(m, src)
}
func (m *Metrics_Prometheus) XXX_Size() int {
	return xxx_messageInfo_Metrics_Prometheus.Size(m)
}
func (m *Metrics_Prometheus) XXX_DiscardUnknown() {
	xxx_messageInfo_Metrics_Prometheus.DiscardUnknown(m)
}

var xxx_messageInfo_Metrics_Prometheus proto.InternalMessageInfo

func (m *Metrics_Prometheus) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Metrics_Prometheus) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func init() {
	proto.RegisterType((*Metrics)(nil), "kuma.mesh.v1alpha1.Metrics")
	proto.RegisterType((*Metrics_Prometheus)(nil), "kuma.mesh.v1alpha1.Metrics.Prometheus")
}

func init() { proto.RegisterFile("mesh/v1alpha1/metrics.proto", fileDescriptor_7dd8c7f420ce268c) }

var fileDescriptor_7dd8c7f420ce268c = []byte{
	// 153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xce, 0x4d, 0x2d, 0xce,
	0xd0, 0x2f, 0x33, 0x4c, 0xcc, 0x29, 0xc8, 0x48, 0x34, 0xd4, 0xcf, 0x4d, 0x2d, 0x29, 0xca, 0x4c,
	0x2e, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0xca, 0x2e, 0xcd, 0x4d, 0xd4, 0x03, 0xa9,
	0xd0, 0x83, 0xa9, 0x50, 0x6a, 0x67, 0xe4, 0x62, 0xf7, 0x85, 0xa8, 0x12, 0x72, 0xe3, 0xe2, 0x2a,
	0x28, 0xca, 0xcf, 0x4d, 0x2d, 0xc9, 0x48, 0x2d, 0x2d, 0x96, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x36,
	0x52, 0xd3, 0xc3, 0xd4, 0xa4, 0x07, 0xd5, 0xa0, 0x17, 0x00, 0x57, 0x1d, 0x84, 0xa4, 0x53, 0xca,
	0x84, 0x8b, 0x0b, 0x21, 0x23, 0x24, 0xc4, 0xc5, 0x52, 0x90, 0x5f, 0x54, 0x02, 0x36, 0x8f, 0x37,
	0x08, 0xcc, 0x06, 0x8b, 0x25, 0x96, 0x64, 0x48, 0x30, 0x29, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9,
	0x4e, 0x5c, 0x51, 0x1c, 0x30, 0x0b, 0x92, 0xd8, 0xc0, 0x0e, 0x36, 0x06, 0x04, 0x00, 0x00, 0xff,
	0xff, 0xbf, 0xe9, 0xed, 0xe9, 0xcf, 0x00, 0x00, 0x00,
}
