// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.20.0
// source: api/mesh/v1alpha1/rate_limit.proto

package v1alpha1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/kumahq/kuma/api/mesh"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RateLimit struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of selectors to match dataplanes that rate limit will be applied for
	Sources []*Selector `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
	// List of selectors to match services that need to be rate limited.
	Destinations []*Selector `protobuf:"bytes,2,rep,name=destinations,proto3" json:"destinations,omitempty"`
	// Configuration for RateLimit
	// +required
	Conf          *RateLimit_Conf `protobuf:"bytes,3,opt,name=conf,proto3" json:"conf,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RateLimit) Reset() {
	*x = RateLimit{}
	mi := &file_api_mesh_v1alpha1_rate_limit_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimit) ProtoMessage() {}

func (x *RateLimit) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_rate_limit_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimit.ProtoReflect.Descriptor instead.
func (*RateLimit) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_rate_limit_proto_rawDescGZIP(), []int{0}
}

func (x *RateLimit) GetSources() []*Selector {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *RateLimit) GetDestinations() []*Selector {
	if x != nil {
		return x.Destinations
	}
	return nil
}

func (x *RateLimit) GetConf() *RateLimit_Conf {
	if x != nil {
		return x.Conf
	}
	return nil
}

type RateLimit_Conf struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The HTTP RateLimit configuration
	// +optional
	Http          *RateLimit_Conf_Http `protobuf:"bytes,1,opt,name=http,proto3" json:"http,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RateLimit_Conf) Reset() {
	*x = RateLimit_Conf{}
	mi := &file_api_mesh_v1alpha1_rate_limit_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimit_Conf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimit_Conf) ProtoMessage() {}

func (x *RateLimit_Conf) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_rate_limit_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimit_Conf.ProtoReflect.Descriptor instead.
func (*RateLimit_Conf) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_rate_limit_proto_rawDescGZIP(), []int{0, 0}
}

func (x *RateLimit_Conf) GetHttp() *RateLimit_Conf_Http {
	if x != nil {
		return x.Http
	}
	return nil
}

type RateLimit_Conf_Http struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The number of HTTP requests this RateLimiter allows
	// +required
	Requests uint32 `protobuf:"varint,1,opt,name=requests,proto3" json:"requests,omitempty"`
	// The the interval for which `requests` will be accounted.
	// +required
	Interval *durationpb.Duration `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	// Describes the actions to take on RatelLimiter event
	// +optional
	OnRateLimit   *RateLimit_Conf_Http_OnRateLimit `protobuf:"bytes,3,opt,name=onRateLimit,proto3" json:"onRateLimit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RateLimit_Conf_Http) Reset() {
	*x = RateLimit_Conf_Http{}
	mi := &file_api_mesh_v1alpha1_rate_limit_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimit_Conf_Http) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimit_Conf_Http) ProtoMessage() {}

func (x *RateLimit_Conf_Http) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_rate_limit_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimit_Conf_Http.ProtoReflect.Descriptor instead.
func (*RateLimit_Conf_Http) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_rate_limit_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *RateLimit_Conf_Http) GetRequests() uint32 {
	if x != nil {
		return x.Requests
	}
	return 0
}

func (x *RateLimit_Conf_Http) GetInterval() *durationpb.Duration {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *RateLimit_Conf_Http) GetOnRateLimit() *RateLimit_Conf_Http_OnRateLimit {
	if x != nil {
		return x.OnRateLimit
	}
	return nil
}

type RateLimit_Conf_Http_OnRateLimit struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The HTTP status code to be set on a RateLimit event
	// +optional
	Status *wrapperspb.UInt32Value `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// The Headers to be added to the HTTP response on a RateLimit event
	// +optional
	Headers       []*RateLimit_Conf_Http_OnRateLimit_HeaderValue `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RateLimit_Conf_Http_OnRateLimit) Reset() {
	*x = RateLimit_Conf_Http_OnRateLimit{}
	mi := &file_api_mesh_v1alpha1_rate_limit_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimit_Conf_Http_OnRateLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimit_Conf_Http_OnRateLimit) ProtoMessage() {}

func (x *RateLimit_Conf_Http_OnRateLimit) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_rate_limit_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimit_Conf_Http_OnRateLimit.ProtoReflect.Descriptor instead.
func (*RateLimit_Conf_Http_OnRateLimit) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_rate_limit_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

func (x *RateLimit_Conf_Http_OnRateLimit) GetStatus() *wrapperspb.UInt32Value {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *RateLimit_Conf_Http_OnRateLimit) GetHeaders() []*RateLimit_Conf_Http_OnRateLimit_HeaderValue {
	if x != nil {
		return x.Headers
	}
	return nil
}

type RateLimit_Conf_Http_OnRateLimit_HeaderValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Header name
	// +optional
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Header value
	// +optional
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Should the header be appended
	// +optional
	Append        *wrapperspb.BoolValue `protobuf:"bytes,3,opt,name=append,proto3" json:"append,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RateLimit_Conf_Http_OnRateLimit_HeaderValue) Reset() {
	*x = RateLimit_Conf_Http_OnRateLimit_HeaderValue{}
	mi := &file_api_mesh_v1alpha1_rate_limit_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimit_Conf_Http_OnRateLimit_HeaderValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimit_Conf_Http_OnRateLimit_HeaderValue) ProtoMessage() {}

func (x *RateLimit_Conf_Http_OnRateLimit_HeaderValue) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_v1alpha1_rate_limit_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimit_Conf_Http_OnRateLimit_HeaderValue.ProtoReflect.Descriptor instead.
func (*RateLimit_Conf_Http_OnRateLimit_HeaderValue) Descriptor() ([]byte, []int) {
	return file_api_mesh_v1alpha1_rate_limit_proto_rawDescGZIP(), []int{0, 0, 0, 0, 0}
}

func (x *RateLimit_Conf_Http_OnRateLimit_HeaderValue) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RateLimit_Conf_Http_OnRateLimit_HeaderValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RateLimit_Conf_Http_OnRateLimit_HeaderValue) GetAppend() *wrapperspb.BoolValue {
	if x != nil {
		return x.Append
	}
	return nil
}

var File_api_mesh_v1alpha1_rate_limit_proto protoreflect.FileDescriptor

const file_api_mesh_v1alpha1_rate_limit_proto_rawDesc = "" +
	"\n" +
	"\"api/mesh/v1alpha1/rate_limit.proto\x12\x12kuma.mesh.v1alpha1\x1a\x16api/mesh/options.proto\x1a api/mesh/v1alpha1/selector.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x17validate/validate.proto\"\xab\x06\n" +
	"\tRateLimit\x12@\n" +
	"\asources\x18\x01 \x03(\v2\x1c.kuma.mesh.v1alpha1.SelectorB\b\xfaB\x05\x92\x01\x02\b\x01R\asources\x12J\n" +
	"\fdestinations\x18\x02 \x03(\v2\x1c.kuma.mesh.v1alpha1.SelectorB\b\xfaB\x05\x92\x01\x02\b\x01R\fdestinations\x126\n" +
	"\x04conf\x18\x03 \x01(\v2\".kuma.mesh.v1alpha1.RateLimit.ConfR\x04conf\x1a\x82\x04\n" +
	"\x04Conf\x12;\n" +
	"\x04http\x18\x01 \x01(\v2'.kuma.mesh.v1alpha1.RateLimit.Conf.HttpR\x04http\x1a\xbc\x03\n" +
	"\x04Http\x12\x1a\n" +
	"\brequests\x18\x01 \x01(\rR\brequests\x125\n" +
	"\binterval\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\binterval\x12U\n" +
	"\vonRateLimit\x18\x03 \x01(\v23.kuma.mesh.v1alpha1.RateLimit.Conf.Http.OnRateLimitR\vonRateLimit\x1a\x89\x02\n" +
	"\vOnRateLimit\x124\n" +
	"\x06status\x18\x01 \x01(\v2\x1c.google.protobuf.UInt32ValueR\x06status\x12Y\n" +
	"\aheaders\x18\x03 \x03(\v2?.kuma.mesh.v1alpha1.RateLimit.Conf.Http.OnRateLimit.HeaderValueR\aheaders\x1ai\n" +
	"\vHeaderValue\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\x122\n" +
	"\x06append\x18\x03 \x01(\v2\x1a.google.protobuf.BoolValueR\x06append:S\xaa\x8c\x89\xa6\x01M\n" +
	"\x11RateLimitResource\x12\tRateLimit\"\x04mesh:\f\n" +
	"\n" +
	"rate-limitR\x17model.GlobalToZonesFlagh\x01B*Z(github.com/kumahq/kuma/api/mesh/v1alpha1b\x06proto3"

var (
	file_api_mesh_v1alpha1_rate_limit_proto_rawDescOnce sync.Once
	file_api_mesh_v1alpha1_rate_limit_proto_rawDescData []byte
)

func file_api_mesh_v1alpha1_rate_limit_proto_rawDescGZIP() []byte {
	file_api_mesh_v1alpha1_rate_limit_proto_rawDescOnce.Do(func() {
		file_api_mesh_v1alpha1_rate_limit_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_mesh_v1alpha1_rate_limit_proto_rawDesc), len(file_api_mesh_v1alpha1_rate_limit_proto_rawDesc)))
	})
	return file_api_mesh_v1alpha1_rate_limit_proto_rawDescData
}

var file_api_mesh_v1alpha1_rate_limit_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_mesh_v1alpha1_rate_limit_proto_goTypes = []any{
	(*RateLimit)(nil),                                   // 0: kuma.mesh.v1alpha1.RateLimit
	(*RateLimit_Conf)(nil),                              // 1: kuma.mesh.v1alpha1.RateLimit.Conf
	(*RateLimit_Conf_Http)(nil),                         // 2: kuma.mesh.v1alpha1.RateLimit.Conf.Http
	(*RateLimit_Conf_Http_OnRateLimit)(nil),             // 3: kuma.mesh.v1alpha1.RateLimit.Conf.Http.OnRateLimit
	(*RateLimit_Conf_Http_OnRateLimit_HeaderValue)(nil), // 4: kuma.mesh.v1alpha1.RateLimit.Conf.Http.OnRateLimit.HeaderValue
	(*Selector)(nil),                                    // 5: kuma.mesh.v1alpha1.Selector
	(*durationpb.Duration)(nil),                         // 6: google.protobuf.Duration
	(*wrapperspb.UInt32Value)(nil),                      // 7: google.protobuf.UInt32Value
	(*wrapperspb.BoolValue)(nil),                        // 8: google.protobuf.BoolValue
}
var file_api_mesh_v1alpha1_rate_limit_proto_depIdxs = []int32{
	5, // 0: kuma.mesh.v1alpha1.RateLimit.sources:type_name -> kuma.mesh.v1alpha1.Selector
	5, // 1: kuma.mesh.v1alpha1.RateLimit.destinations:type_name -> kuma.mesh.v1alpha1.Selector
	1, // 2: kuma.mesh.v1alpha1.RateLimit.conf:type_name -> kuma.mesh.v1alpha1.RateLimit.Conf
	2, // 3: kuma.mesh.v1alpha1.RateLimit.Conf.http:type_name -> kuma.mesh.v1alpha1.RateLimit.Conf.Http
	6, // 4: kuma.mesh.v1alpha1.RateLimit.Conf.Http.interval:type_name -> google.protobuf.Duration
	3, // 5: kuma.mesh.v1alpha1.RateLimit.Conf.Http.onRateLimit:type_name -> kuma.mesh.v1alpha1.RateLimit.Conf.Http.OnRateLimit
	7, // 6: kuma.mesh.v1alpha1.RateLimit.Conf.Http.OnRateLimit.status:type_name -> google.protobuf.UInt32Value
	4, // 7: kuma.mesh.v1alpha1.RateLimit.Conf.Http.OnRateLimit.headers:type_name -> kuma.mesh.v1alpha1.RateLimit.Conf.Http.OnRateLimit.HeaderValue
	8, // 8: kuma.mesh.v1alpha1.RateLimit.Conf.Http.OnRateLimit.HeaderValue.append:type_name -> google.protobuf.BoolValue
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_api_mesh_v1alpha1_rate_limit_proto_init() }
func file_api_mesh_v1alpha1_rate_limit_proto_init() {
	if File_api_mesh_v1alpha1_rate_limit_proto != nil {
		return
	}
	file_api_mesh_v1alpha1_selector_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_mesh_v1alpha1_rate_limit_proto_rawDesc), len(file_api_mesh_v1alpha1_rate_limit_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_mesh_v1alpha1_rate_limit_proto_goTypes,
		DependencyIndexes: file_api_mesh_v1alpha1_rate_limit_proto_depIdxs,
		MessageInfos:      file_api_mesh_v1alpha1_rate_limit_proto_msgTypes,
	}.Build()
	File_api_mesh_v1alpha1_rate_limit_proto = out.File
	file_api_mesh_v1alpha1_rate_limit_proto_goTypes = nil
	file_api_mesh_v1alpha1_rate_limit_proto_depIdxs = nil
}
