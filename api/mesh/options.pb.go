// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.20.0
// source: api/mesh/options.proto

package mesh

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KumaResourceOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the Kuma resource struct.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Name and value of the modelResourceType constant.
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// True if this resource has global scope. Otherwise it will be mesh scope.
	Global bool `protobuf:"varint,3,opt,name=global,proto3" json:"global,omitempty"`
	// Name of the resource's Go package.
	Package string `protobuf:"bytes,4,opt,name=package,proto3" json:"package,omitempty"`
	// Whether to skip type registration for this resource.
	SkipRegistration bool `protobuf:"varint,6,opt,name=skip_registration,json=skipRegistration,proto3" json:"skip_registration,omitempty"`
	// Some options for the webservice
	Ws *KumaWsOptions `protobuf:"bytes,7,opt,name=ws,proto3" json:"ws,omitempty"`
	// A set of kds flag to set the behaviour of the resource with KDS.
	Kds string `protobuf:"bytes,10,opt,name=kds,proto3" json:"kds,omitempty"`
	// Whether scope is "Namespace"; Otherwise to "Cluster".
	ScopeNamespace bool `protobuf:"varint,11,opt,name=scope_namespace,json=scopeNamespace,proto3" json:"scope_namespace,omitempty"`
	// Whether to skip generation of native API helper functions.
	SkipKubernetesWrappers bool `protobuf:"varint,12,opt,name=skip_kubernetes_wrappers,json=skipKubernetesWrappers,proto3" json:"skip_kubernetes_wrappers,omitempty"`
	// Whether to generate Inspect API endpoint
	AllowToInspect bool `protobuf:"varint,13,opt,name=allow_to_inspect,json=allowToInspect,proto3" json:"allow_to_inspect,omitempty"`
	// If resource has more than one version, then the flag defines which version
	// is used in the storage. All other versions must be convertible to it.
	StorageVersion bool `protobuf:"varint,14,opt,name=storage_version,json=storageVersion,proto3" json:"storage_version,omitempty"`
	// The name of the policy showed as plural to be displayed in the UI and maybe
	// CLI
	PluralDisplayName string `protobuf:"bytes,15,opt,name=plural_display_name,json=pluralDisplayName,proto3" json:"plural_display_name,omitempty"`
	// Is Experimental indicates if a policy is in experimental state (might not
	// be production ready).
	IsExperimental bool `protobuf:"varint,16,opt,name=is_experimental,json=isExperimental,proto3" json:"is_experimental,omitempty"`
	// Columns to set using `+kubebuilder::printcolumns`
	AdditionalPrinterColumns []string `protobuf:"bytes,17,rep,name=additional_printer_columns,json=additionalPrinterColumns,proto3" json:"additional_printer_columns,omitempty"`
	// Whether the resource has a matching insight type
	HasInsights bool `protobuf:"varint,18,opt,name=has_insights,json=hasInsights,proto3" json:"has_insights,omitempty"`
	// Short name for xds or service reference.
	ShortName string `protobuf:"bytes,19,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	// Indicates if this resource is a proxy.
	IsProxy       bool `protobuf:"varint,20,opt,name=is_proxy,json=isProxy,proto3" json:"is_proxy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KumaResourceOptions) Reset() {
	*x = KumaResourceOptions{}
	mi := &file_api_mesh_options_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KumaResourceOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KumaResourceOptions) ProtoMessage() {}

func (x *KumaResourceOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_options_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KumaResourceOptions.ProtoReflect.Descriptor instead.
func (*KumaResourceOptions) Descriptor() ([]byte, []int) {
	return file_api_mesh_options_proto_rawDescGZIP(), []int{0}
}

func (x *KumaResourceOptions) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KumaResourceOptions) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *KumaResourceOptions) GetGlobal() bool {
	if x != nil {
		return x.Global
	}
	return false
}

func (x *KumaResourceOptions) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *KumaResourceOptions) GetSkipRegistration() bool {
	if x != nil {
		return x.SkipRegistration
	}
	return false
}

func (x *KumaResourceOptions) GetWs() *KumaWsOptions {
	if x != nil {
		return x.Ws
	}
	return nil
}

func (x *KumaResourceOptions) GetKds() string {
	if x != nil {
		return x.Kds
	}
	return ""
}

func (x *KumaResourceOptions) GetScopeNamespace() bool {
	if x != nil {
		return x.ScopeNamespace
	}
	return false
}

func (x *KumaResourceOptions) GetSkipKubernetesWrappers() bool {
	if x != nil {
		return x.SkipKubernetesWrappers
	}
	return false
}

func (x *KumaResourceOptions) GetAllowToInspect() bool {
	if x != nil {
		return x.AllowToInspect
	}
	return false
}

func (x *KumaResourceOptions) GetStorageVersion() bool {
	if x != nil {
		return x.StorageVersion
	}
	return false
}

func (x *KumaResourceOptions) GetPluralDisplayName() string {
	if x != nil {
		return x.PluralDisplayName
	}
	return ""
}

func (x *KumaResourceOptions) GetIsExperimental() bool {
	if x != nil {
		return x.IsExperimental
	}
	return false
}

func (x *KumaResourceOptions) GetAdditionalPrinterColumns() []string {
	if x != nil {
		return x.AdditionalPrinterColumns
	}
	return nil
}

func (x *KumaResourceOptions) GetHasInsights() bool {
	if x != nil {
		return x.HasInsights
	}
	return false
}

func (x *KumaResourceOptions) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *KumaResourceOptions) GetIsProxy() bool {
	if x != nil {
		return x.IsProxy
	}
	return false
}

type KumaWsOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name is the name of the policy for resource name usage in path.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Plural is only to be set if the plural of the resource is irregular (not
	// just adding a 's' at the end).
	Plural string `protobuf:"bytes,2,opt,name=plural,proto3" json:"plural,omitempty"`
	// ReadOnly if the resource is read only.
	ReadOnly bool `protobuf:"varint,3,opt,name=read_only,json=readOnly,proto3" json:"read_only,omitempty"`
	// AdminOnly whether this entity requires admin auth to access these
	// endpoints.
	AdminOnly bool `protobuf:"varint,4,opt,name=admin_only,json=adminOnly,proto3" json:"admin_only,omitempty"`
	// Alias name is the alternative name of the policy for resource name usage in
	// path.
	AliasName string `protobuf:"bytes,5,opt,name=alias_name,json=aliasName,proto3" json:"alias_name,omitempty"`
	// Alias plural is only to be set if the plural of the resource is irregular
	// (not just adding a 's' at the end).
	AliasPlural   string `protobuf:"bytes,6,opt,name=alias_plural,json=aliasPlural,proto3" json:"alias_plural,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KumaWsOptions) Reset() {
	*x = KumaWsOptions{}
	mi := &file_api_mesh_options_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KumaWsOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KumaWsOptions) ProtoMessage() {}

func (x *KumaWsOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_options_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KumaWsOptions.ProtoReflect.Descriptor instead.
func (*KumaWsOptions) Descriptor() ([]byte, []int) {
	return file_api_mesh_options_proto_rawDescGZIP(), []int{1}
}

func (x *KumaWsOptions) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KumaWsOptions) GetPlural() string {
	if x != nil {
		return x.Plural
	}
	return ""
}

func (x *KumaWsOptions) GetReadOnly() bool {
	if x != nil {
		return x.ReadOnly
	}
	return false
}

func (x *KumaWsOptions) GetAdminOnly() bool {
	if x != nil {
		return x.AdminOnly
	}
	return false
}

func (x *KumaWsOptions) GetAliasName() string {
	if x != nil {
		return x.AliasName
	}
	return ""
}

func (x *KumaWsOptions) GetAliasPlural() string {
	if x != nil {
		return x.AliasPlural
	}
	return ""
}

type KumaPolicyOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether to skip type registration for this resource.
	SkipRegistration bool `protobuf:"varint,1,opt,name=skip_registration,json=skipRegistration,proto3" json:"skip_registration,omitempty"`
	// An optional alternative plural form if this is unset default to a standard
	// derivation of the name
	Plural        string `protobuf:"bytes,2,opt,name=plural,proto3" json:"plural,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KumaPolicyOptions) Reset() {
	*x = KumaPolicyOptions{}
	mi := &file_api_mesh_options_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KumaPolicyOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KumaPolicyOptions) ProtoMessage() {}

func (x *KumaPolicyOptions) ProtoReflect() protoreflect.Message {
	mi := &file_api_mesh_options_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KumaPolicyOptions.ProtoReflect.Descriptor instead.
func (*KumaPolicyOptions) Descriptor() ([]byte, []int) {
	return file_api_mesh_options_proto_rawDescGZIP(), []int{2}
}

func (x *KumaPolicyOptions) GetSkipRegistration() bool {
	if x != nil {
		return x.SkipRegistration
	}
	return false
}

func (x *KumaPolicyOptions) GetPlural() string {
	if x != nil {
		return x.Plural
	}
	return ""
}

var file_api_mesh_options_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*KumaResourceOptions)(nil),
		Field:         43534533,
		Name:          "kuma.mesh.resource",
		Tag:           "bytes,43534533,opt,name=resource",
		Filename:      "api/mesh/options.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*KumaPolicyOptions)(nil),
		Field:         43534534,
		Name:          "kuma.mesh.policy",
		Tag:           "bytes,43534534,opt,name=policy",
		Filename:      "api/mesh/options.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional kuma.mesh.KumaResourceOptions resource = 43534533;
	E_Resource = &file_api_mesh_options_proto_extTypes[0] // 'kuma'
	// optional kuma.mesh.KumaPolicyOptions policy = 43534534;
	E_Policy = &file_api_mesh_options_proto_extTypes[1] // 'kuma'
)

var File_api_mesh_options_proto protoreflect.FileDescriptor

const file_api_mesh_options_proto_rawDesc = "" +
	"\n" +
	"\x16api/mesh/options.proto\x12\tkuma.mesh\x1a google/protobuf/descriptor.proto\"\x82\x05\n" +
	"\x13KumaResourceOptions\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x16\n" +
	"\x06global\x18\x03 \x01(\bR\x06global\x12\x18\n" +
	"\apackage\x18\x04 \x01(\tR\apackage\x12+\n" +
	"\x11skip_registration\x18\x06 \x01(\bR\x10skipRegistration\x12(\n" +
	"\x02ws\x18\a \x01(\v2\x18.kuma.mesh.KumaWsOptionsR\x02ws\x12\x10\n" +
	"\x03kds\x18\n" +
	" \x01(\tR\x03kds\x12'\n" +
	"\x0fscope_namespace\x18\v \x01(\bR\x0escopeNamespace\x128\n" +
	"\x18skip_kubernetes_wrappers\x18\f \x01(\bR\x16skipKubernetesWrappers\x12(\n" +
	"\x10allow_to_inspect\x18\r \x01(\bR\x0eallowToInspect\x12'\n" +
	"\x0fstorage_version\x18\x0e \x01(\bR\x0estorageVersion\x12.\n" +
	"\x13plural_display_name\x18\x0f \x01(\tR\x11pluralDisplayName\x12'\n" +
	"\x0fis_experimental\x18\x10 \x01(\bR\x0eisExperimental\x12<\n" +
	"\x1aadditional_printer_columns\x18\x11 \x03(\tR\x18additionalPrinterColumns\x12!\n" +
	"\fhas_insights\x18\x12 \x01(\bR\vhasInsights\x12\x1d\n" +
	"\n" +
	"short_name\x18\x13 \x01(\tR\tshortName\x12\x19\n" +
	"\bis_proxy\x18\x14 \x01(\bR\aisProxy\"\xb9\x01\n" +
	"\rKumaWsOptions\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06plural\x18\x02 \x01(\tR\x06plural\x12\x1b\n" +
	"\tread_only\x18\x03 \x01(\bR\breadOnly\x12\x1d\n" +
	"\n" +
	"admin_only\x18\x04 \x01(\bR\tadminOnly\x12\x1d\n" +
	"\n" +
	"alias_name\x18\x05 \x01(\tR\taliasName\x12!\n" +
	"\falias_plural\x18\x06 \x01(\tR\valiasPlural\"X\n" +
	"\x11KumaPolicyOptions\x12+\n" +
	"\x11skip_registration\x18\x01 \x01(\bR\x10skipRegistration\x12\x16\n" +
	"\x06plural\x18\x02 \x01(\tR\x06plural:^\n" +
	"\bresource\x12\x1f.google.protobuf.MessageOptions\x18ő\xe1\x14 \x01(\v2\x1e.kuma.mesh.KumaResourceOptionsR\bresource:X\n" +
	"\x06policy\x12\x1f.google.protobuf.MessageOptions\x18Ƒ\xe1\x14 \x01(\v2\x1c.kuma.mesh.KumaPolicyOptionsR\x06policyB!Z\x1fgithub.com/kumahq/kuma/api/meshb\x06proto3"

var (
	file_api_mesh_options_proto_rawDescOnce sync.Once
	file_api_mesh_options_proto_rawDescData []byte
)

func file_api_mesh_options_proto_rawDescGZIP() []byte {
	file_api_mesh_options_proto_rawDescOnce.Do(func() {
		file_api_mesh_options_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_mesh_options_proto_rawDesc), len(file_api_mesh_options_proto_rawDesc)))
	})
	return file_api_mesh_options_proto_rawDescData
}

var file_api_mesh_options_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_mesh_options_proto_goTypes = []any{
	(*KumaResourceOptions)(nil),         // 0: kuma.mesh.KumaResourceOptions
	(*KumaWsOptions)(nil),               // 1: kuma.mesh.KumaWsOptions
	(*KumaPolicyOptions)(nil),           // 2: kuma.mesh.KumaPolicyOptions
	(*descriptorpb.MessageOptions)(nil), // 3: google.protobuf.MessageOptions
}
var file_api_mesh_options_proto_depIdxs = []int32{
	1, // 0: kuma.mesh.KumaResourceOptions.ws:type_name -> kuma.mesh.KumaWsOptions
	3, // 1: kuma.mesh.resource:extendee -> google.protobuf.MessageOptions
	3, // 2: kuma.mesh.policy:extendee -> google.protobuf.MessageOptions
	0, // 3: kuma.mesh.resource:type_name -> kuma.mesh.KumaResourceOptions
	2, // 4: kuma.mesh.policy:type_name -> kuma.mesh.KumaPolicyOptions
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	3, // [3:5] is the sub-list for extension type_name
	1, // [1:3] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_mesh_options_proto_init() }
func file_api_mesh_options_proto_init() {
	if File_api_mesh_options_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_mesh_options_proto_rawDesc), len(file_api_mesh_options_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 2,
			NumServices:   0,
		},
		GoTypes:           file_api_mesh_options_proto_goTypes,
		DependencyIndexes: file_api_mesh_options_proto_depIdxs,
		MessageInfos:      file_api_mesh_options_proto_msgTypes,
		ExtensionInfos:    file_api_mesh_options_proto_extTypes,
	}.Build()
	File_api_mesh_options_proto = out.File
	file_api_mesh_options_proto_goTypes = nil
	file_api_mesh_options_proto_depIdxs = nil
}
