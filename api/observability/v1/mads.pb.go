// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.1
// source: api/observability/v1/mads.proto

package v1

import (
	v3 "github.com/envoyproxy/go-control-plane/envoy/service/discovery/v3"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MADS resource type.
//
// Describes a group of targets on a single service that need to be monitored.
type MonitoringAssignment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Mesh of the dataplane.
	//
	// E.g., `default`
	Mesh string `protobuf:"bytes,2,opt,name=mesh,proto3" json:"mesh,omitempty"`
	// Identifying service being monitored.
	//
	// E.g., `backend`
	Service string `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	// List of targets that need to be monitored.
	Targets []*MonitoringAssignment_Target `protobuf:"bytes,4,rep,name=targets,proto3" json:"targets,omitempty"`
	// Arbitrary Labels associated with every target in the assignment.
	//
	// E.g., `{"team": "infra"}`.
	Labels        map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonitoringAssignment) Reset() {
	*x = MonitoringAssignment{}
	mi := &file_api_observability_v1_mads_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitoringAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitoringAssignment) ProtoMessage() {}

func (x *MonitoringAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_api_observability_v1_mads_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitoringAssignment.ProtoReflect.Descriptor instead.
func (*MonitoringAssignment) Descriptor() ([]byte, []int) {
	return file_api_observability_v1_mads_proto_rawDescGZIP(), []int{0}
}

func (x *MonitoringAssignment) GetMesh() string {
	if x != nil {
		return x.Mesh
	}
	return ""
}

func (x *MonitoringAssignment) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *MonitoringAssignment) GetTargets() []*MonitoringAssignment_Target {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *MonitoringAssignment) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// Describes a single target that needs to be monitored.
type MonitoringAssignment_Target struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Dataplane name.
	//
	// E.g., `backend-01`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Scheme on which to scrape the target.
	// E.g., `http`
	Scheme string `protobuf:"bytes,2,opt,name=scheme,proto3" json:"scheme,omitempty"`
	// Address (preferably IP) for the service
	// E.g., `backend.svc` or `10.1.4.32:9090`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// Optional path to append to the address for scraping
	// E.g., `/metrics`
	MetricsPath string `protobuf:"bytes,4,opt,name=metrics_path,json=metricsPath,proto3" json:"metrics_path,omitempty"`
	// Arbitrary labels associated with that particular target.
	//
	// E.g.,
	//
	//	`{
	//	   "commit_hash" : "620506a88",
	//	 }`.
	Labels        map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonitoringAssignment_Target) Reset() {
	*x = MonitoringAssignment_Target{}
	mi := &file_api_observability_v1_mads_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitoringAssignment_Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitoringAssignment_Target) ProtoMessage() {}

func (x *MonitoringAssignment_Target) ProtoReflect() protoreflect.Message {
	mi := &file_api_observability_v1_mads_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitoringAssignment_Target.ProtoReflect.Descriptor instead.
func (*MonitoringAssignment_Target) Descriptor() ([]byte, []int) {
	return file_api_observability_v1_mads_proto_rawDescGZIP(), []int{0, 0}
}

func (x *MonitoringAssignment_Target) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MonitoringAssignment_Target) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *MonitoringAssignment_Target) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MonitoringAssignment_Target) GetMetricsPath() string {
	if x != nil {
		return x.MetricsPath
	}
	return ""
}

func (x *MonitoringAssignment_Target) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

var File_api_observability_v1_mads_proto protoreflect.FileDescriptor

const file_api_observability_v1_mads_proto_rawDesc = "" +
	"\n" +
	"\x1fapi/observability/v1/mads.proto\x12\x15kuma.observability.v1\x1a*envoy/service/discovery/v3/discovery.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x17validate/validate.proto\"\xd2\x04\n" +
	"\x14MonitoringAssignment\x12\x1b\n" +
	"\x04mesh\x18\x02 \x01(\tB\a\xfaB\x04r\x02 \x01R\x04mesh\x12!\n" +
	"\aservice\x18\x03 \x01(\tB\a\xfaB\x04r\x02 \x01R\aservice\x12L\n" +
	"\atargets\x18\x04 \x03(\v22.kuma.observability.v1.MonitoringAssignment.TargetR\atargets\x12O\n" +
	"\x06labels\x18\x05 \x03(\v27.kuma.observability.v1.MonitoringAssignment.LabelsEntryR\x06labels\x1a\x9f\x02\n" +
	"\x06Target\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xfaB\x04r\x02 \x01R\x04name\x12\x1f\n" +
	"\x06scheme\x18\x02 \x01(\tB\a\xfaB\x04r\x02 \x01R\x06scheme\x12!\n" +
	"\aaddress\x18\x03 \x01(\tB\a\xfaB\x04r\x02 \x01R\aaddress\x12!\n" +
	"\fmetrics_path\x18\x04 \x01(\tR\vmetricsPath\x12V\n" +
	"\x06labels\x18\x05 \x03(\v2>.kuma.observability.v1.MonitoringAssignment.Target.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xd2\x01\n" +
	"$MonitoringAssignmentDiscoveryService\x12\xa9\x01\n" +
	"\x1aFetchMonitoringAssignments\x12,.envoy.service.discovery.v3.DiscoveryRequest\x1a-.envoy.service.discovery.v3.DiscoveryResponse\".\x82\xd3\xe4\x93\x02(:\x01*\"#/v3/discovery:monitoringassignmentsB\x17Z\x15observability/mads/v1b\x06proto3"

var (
	file_api_observability_v1_mads_proto_rawDescOnce sync.Once
	file_api_observability_v1_mads_proto_rawDescData []byte
)

func file_api_observability_v1_mads_proto_rawDescGZIP() []byte {
	file_api_observability_v1_mads_proto_rawDescOnce.Do(func() {
		file_api_observability_v1_mads_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_observability_v1_mads_proto_rawDesc), len(file_api_observability_v1_mads_proto_rawDesc)))
	})
	return file_api_observability_v1_mads_proto_rawDescData
}

var file_api_observability_v1_mads_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_observability_v1_mads_proto_goTypes = []any{
	(*MonitoringAssignment)(nil),        // 0: kuma.observability.v1.MonitoringAssignment
	(*MonitoringAssignment_Target)(nil), // 1: kuma.observability.v1.MonitoringAssignment.Target
	nil,                                 // 2: kuma.observability.v1.MonitoringAssignment.LabelsEntry
	nil,                                 // 3: kuma.observability.v1.MonitoringAssignment.Target.LabelsEntry
	(*v3.DiscoveryRequest)(nil),         // 4: envoy.service.discovery.v3.DiscoveryRequest
	(*v3.DiscoveryResponse)(nil),        // 5: envoy.service.discovery.v3.DiscoveryResponse
}
var file_api_observability_v1_mads_proto_depIdxs = []int32{
	1, // 0: kuma.observability.v1.MonitoringAssignment.targets:type_name -> kuma.observability.v1.MonitoringAssignment.Target
	2, // 1: kuma.observability.v1.MonitoringAssignment.labels:type_name -> kuma.observability.v1.MonitoringAssignment.LabelsEntry
	3, // 2: kuma.observability.v1.MonitoringAssignment.Target.labels:type_name -> kuma.observability.v1.MonitoringAssignment.Target.LabelsEntry
	4, // 3: kuma.observability.v1.MonitoringAssignmentDiscoveryService.FetchMonitoringAssignments:input_type -> envoy.service.discovery.v3.DiscoveryRequest
	5, // 4: kuma.observability.v1.MonitoringAssignmentDiscoveryService.FetchMonitoringAssignments:output_type -> envoy.service.discovery.v3.DiscoveryResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_observability_v1_mads_proto_init() }
func file_api_observability_v1_mads_proto_init() {
	if File_api_observability_v1_mads_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_observability_v1_mads_proto_rawDesc), len(file_api_observability_v1_mads_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_observability_v1_mads_proto_goTypes,
		DependencyIndexes: file_api_observability_v1_mads_proto_depIdxs,
		MessageInfos:      file_api_observability_v1_mads_proto_msgTypes,
	}.Build()
	File_api_observability_v1_mads_proto = out.File
	file_api_observability_v1_mads_proto_goTypes = nil
	file_api_observability_v1_mads_proto_depIdxs = nil
}
