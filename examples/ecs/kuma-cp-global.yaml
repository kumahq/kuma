AWSTemplateFormatVersion: "2010-09-09"
Description: Kuma Global Control Plane on ECS
Parameters:
  VPCStackName:
    Type: String
    Default: kuma-vpc
    Description: The name of the parent Fargate networking stack that you created. Necessary
      to locate and reference resources created by that stack.
  Image:
    Type: String
    Default: "kong-docker-kuma-docker.bintray.io/kuma-cp:1.0.8"
    Description: The name of the kuma-cp docker image
  AllowedCidr:
    Type: String
    Default: '10.0.0.0/8'
    Description: The CIDR used to restrict the kuma-cp ports access

Resources:

  ###################################
  # Service Discovery configuration #
  ###################################

  DiscoveryServiceKumaCP:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Description: Discovery Service for Kuma CP
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - TTL: 60
            Type: A
          - TTL: 60
            Type: SRV
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: global-controlplane
      NamespaceId:
        Fn::ImportValue:
          !Join [ ':', [ !Ref 'VPCStackName', 'PrivateNamespace' ] ]

  KumaECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ ecs-tasks.amazonaws.com ]
            Action: [ 'sts:AssumeRole' ]
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess

  KumaECSTaskIamRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "ecs-tasks.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchFullAccess
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
        - arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess


  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref AWS::StackName
      RetentionInDays: 7 # days

  #########################
  # Kuma CP configuration #
  #########################

  KumaCpSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to Kuma CP
      VpcId:
        Fn::ImportValue:
          !Join [ ':', [ !Ref 'VPCStackName', 'VPCId' ] ]

  KumaCpApiIngressTcp:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress for kuma-cp TCP
      GroupId: !Ref KumaCpSecurityGroup
      IpProtocol: tcp
      CidrIp: !Ref AllowedCidr
      FromPort: 5681
      ToPort: 5681

  KDSIngressTcp:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress for kuma-cp TCP
      GroupId: !Ref KumaCpSecurityGroup
      IpProtocol: tcp
      CidrIp: !Ref AllowedCidr
      FromPort: 5685
      ToPort: 5685

  KumaCpIngressSSH:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress for kuma-cp SSH
      GroupId: !Ref KumaCpSecurityGroup
      IpProtocol: tcp
      CidrIp: !Ref AllowedCidr
      FromPort: 22
      ToPort: 22

  KumaCpIngressTcpFromSelf:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress for kuma-cp TCP from anywhere
      GroupId: !Ref KumaCpSecurityGroup
      CidrIp: '10.0.0.0/8'
      IpProtocol: tcp
      FromPort: 5681
      ToPort: 5685

  ServiceKumaCP:
    Type: AWS::ECS::Service
    Properties:
      LaunchType: FARGATE
      Cluster:
        Fn::ImportValue:
          !Join [ ':', [ !Ref 'VPCStackName', 'ClusterName' ] ]
      DesiredCount: 1
      TaskDefinition: !Ref 'TaskDefinitionKumaCP'
      ServiceRegistries:
        - RegistryArn: !GetAtt DiscoveryServiceKumaCP.Arn
          Port: 5681
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - Fn::ImportValue:
                !Join [ ':', [ !Ref 'VPCStackName', 'PublicSubnet' ] ]
          SecurityGroups:
            - !Ref KumaCpSecurityGroup
            - Fn::ImportValue:
                !Join [ ':', [ !Ref 'VPCStackName', 'FargateContainerSecurityGroup' ] ]

  TaskDefinitionKumaCP:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: kuma-cp-global-family
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn: !Ref KumaECSTaskIamRole
      ExecutionRoleArn: !Ref 'KumaECSTaskExecutionRole'
      Cpu: 256
      Memory: 512
      ContainerDefinitions:
        - Name: ssh-admin
          Image: sickp/alpine-sshd:latest
          PortMappings:
            - ContainerPort: 22
              Protocol: tcp
        - Name: kuma-cp-global
          Essential: true
          Image: !Ref Image
          PortMappings:
            - ContainerPort: 5680
              Protocol: tcp
            - ContainerPort: 5681
              Protocol: tcp
            - ContainerPort: 5682
              Protocol: tcp
            - ContainerPort: 5685
              Protocol: tcp
          User: root:root # needed for UDP port 53 binding
          Environment:
            - Name: KUMA_MODE
              Value: global
          Command:
            - "run"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref AWS::StackName
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: kuma-cp
