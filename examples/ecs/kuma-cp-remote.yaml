AWSTemplateFormatVersion: "2010-09-09"
Description: Kuma Remote Control Plane on ECS
Parameters:
  VPCStackName:
    Type: String
    Default: kuma-vpc
    Description: The name of the parent Fargate networking stack that you created. Necessary
      to locate and reference resources created by that stack.
  Image:
    Type: String
    Default: "kong-docker-kuma-docker.bintray.io/kuma-cp:1.0.8"
    Description: The name of the kuma-cp docker image
  Zone:
    Type: String
    Default: "zone-1"
    Description: The name of the remote zone
  KumaCPGlobal:
    Type: String
    Default: "grpcs://global-controlplane.kuma.io:5685"
  AllowedCidr:
    Type: String
    Default: '10.0.0.0/8'
    Description: The CIDR used to restrict the kuma-cp ports access
  # The certificates are generated for SAN `controlplane.kuma.io` using:
  # kumactl generate tls-certificate --type=server --cp-hostname zone-1-controlplane.kuma.io
  # change these accordingly if another DNS name is needed.
  ServerCert:
    Type: String
    Default: |
      -----BEGIN CERTIFICATE-----
      MIIDPjCCAiagAwIBAgIQHM9nGoC2Tp6bQoGZshRz9DANBgkqhkiG9w0BAQsFADAP
      MQ0wCwYDVQQDEwRrdW1hMB4XDTIxMDExOTEwMjkwN1oXDTMxMDExNzEwMjkwN1ow
      DzENMAsGA1UEAxMEa3VtYTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
      AMb2WpVH7TATUBRkwWZJqSllSY4pHWB/mL2R9UuBBu3BX2UkZzZPjwTArnWQQMWl
      UZn0IGslCdPOtlIUQpsBmf7WYJkNVX23TtFslnI0fs3mm/OJvz5mLHA0sF2sT4Di
      k4Sqq64YiHkwKr26j6HdtAe9bkjGoEK5zbigLTKqcgeiqFNKlIaD0GTh3mq2mdW8
      1E+4tCLY4UaoSC680a+keAe54+tqaB9fpZOL4k9lSxdIqilymLWi5Wi3LrW3Pudw
      r6dOsUJE/7CntY6jeANf0a+oDqT9GASqpbLSfz1lEcli94yAksIxDwp3OPw72pS/
      lsYwryj11dkJkuYNo8pHnZcCAwEAAaOBlTCBkjAOBgNVHQ8BAf8EBAMCAqQwHQYD
      VR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMBMA8GA1UdEwEB/wQFMAMBAf8wHQYD
      VR0OBBYEFFvGOnL81kdW4GvbTvcMag5sfwgTMDEGA1UdEQQqMCiCG3pvbmUtMS1j
      b250cm9scGxhbmUua3VtYS5pb4IJbG9jYWxob3N0MA0GCSqGSIb3DQEBCwUAA4IB
      AQAJB7nvQigzWcGBmeANSJ+ouPmfCQ3tG45490GbNNKQB2QqsMp3gmnLRKA9AZGn
      ifxECQz6Q69xqke23XAtIPiEiFkQb1fKmBNslH4oLYZt09vjBJKXbO1at24rnZO0
      IhUECHMRy/UbGskT3GIiIVMoK8F0F//P9WmnYnn67FZhsg34sHqyQX3FLq+SgFkU
      BEypOHlXPOhbuxEKiDYQJxWb90gAVcYFalmsodC/E/bddlTkX0kM5qqpP/f879QK
      qTQ3wKGQfxpNWA0XdUlUA14G1p/LSnqGlHwWIn2B4iovk3yLwQZZ5z/hY2c34zC0
      ANRIfT9kE9xr3oxVIRGTmjlg
      -----END CERTIFICATE-----

  ServerKey:
    Type: String
    Default: |
      -----BEGIN RSA PRIVATE KEY-----
      MIIEpQIBAAKCAQEAxvZalUftMBNQFGTBZkmpKWVJjikdYH+YvZH1S4EG7cFfZSRn
      Nk+PBMCudZBAxaVRmfQgayUJ0862UhRCmwGZ/tZgmQ1VfbdO0WyWcjR+zeab84m/
      PmYscDSwXaxPgOKThKqrrhiIeTAqvbqPod20B71uSMagQrnNuKAtMqpyB6KoU0qU
      hoPQZOHearaZ1bzUT7i0ItjhRqhILrzRr6R4B7nj62poH1+lk4viT2VLF0iqKXKY
      taLlaLcutbc+53Cvp06xQkT/sKe1jqN4A1/Rr6gOpP0YBKqlstJ/PWURyWL3jICS
      wjEPCnc4/DvalL+WxjCvKPXV2QmS5g2jykedlwIDAQABAoIBAQC7C+dk6FXIGJ/0
      TDS1oRJzZFGeYHDJw6sorQtajFajNmQkhfCyUmE2Kp7Yz2DVbvIkNio0EIIIqhEl
      YP6tEvhfZ9MwkCSLJ8XlhJx7iXacw+xhLGKqmwu0ARS9O70SgfAFjR4Rceb7Z5kG
      /VkC55bUn/YKXRFVKbCJnaxgMXU6TrxI7NPALitY2rhjRZk+/8bkpU/r/38J0Zvd
      BwupdzHu9GIlywO57C0Gbb0+E6gjiKyVPdpp4PSXH3nQRGFopFTmoA+c1j2j89+g
      CGZfqgBHVGeOlMKUdVENh//vEhh6Ukkkmnm7adoWoHG7FsAH8QolyKDYjX+69iwp
      ta/6IiYhAoGBANu8elxayjGCMoziSwqQHfs6lW+1Gkzsuz9EPBqZVEPrvs/TKp+q
      uHothk7TIqw0Ve/UDqdXbTJDRB/9im42TY/AWeZ4f1L5ywttqmG0KhmFzz2U/Po/
      NV4rSOpcnGLzLTgP2hLw9NhAQMyecvO46iHn46Citq0PnyLq83ZkMBjtAoGBAOfM
      NZDzjsJfoF8vtdD4CI+R53+5UZJvOvFrupmq2it5ed5z1oE3xhqeM/bbo7TP1OTs
      Sog2qA1+N6L43j6uBaJTIfkWkO29YyxQkq4zWlm0p874+vFOsOf8LFYkEgeNpszn
      a3Rw+Ry+gGGl9ssszXyeRMkdIZdGinfTeN8zqFQTAoGBAMFvuZPlxMsyn4eQipkA
      57PLDdRp7H49hFUcn4CW7CxisvZHIeWvJ3k+7FYl3gcUh3Z6CnBcMV+nAajbzOpa
      2YqrvTh7aTLFfW5RG0WpkcooFplSuCUgUb3Vgvn1jyI4it0ob0RvZEuevKyk6/MM
      HOi+N4+ozgGpl+DoTm0xo3m9AoGAWK4+3BriRijxoRkOtUj/dXX7nFjZBW36nfx6
      ImpEF5fc8SdeLIebCfn2pX34TqeoqoBgL2bBuo/MV1RhKpfHXgfyGmrwvZPUSlL1
      GyJYcbN08/E7iHBzq/1FNRuNrkgaRZBQAvdpxv52/WTSW37jisa+SDcV79s0BI3q
      U3Je9vMCgYEAtLm0jfrW/0VyPWLFBrFUa42Dou5R+QPgwLnU1wFMiWQpgbjLkJF4
      ewF3I/ZB/wCFQQq+Fcfi9+iG7oAENZgrlJWE4Chfea5QVGXLCzXcakLPd4opfduE
      PuZj6CCAthHK0iAtegk1qorZ1DzAF8K3BE9mcA37yzwfFMFrNieRt2Q=
      -----END RSA PRIVATE KEY-----

Resources:

  ###################################
  # Service Discovery configuration #
  ###################################

  DiscoveryServiceKumaCP:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      Description: Discovery Service for Kuma CP
      DnsConfig:
        RoutingPolicy: MULTIVALUE
        DnsRecords:
          - TTL: 60
            Type: A
          - TTL: 60
            Type: SRV
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: !Join [ "-", [ !Ref Zone, "controlplane" ] ]
      NamespaceId:
        Fn::ImportValue:
          !Join [ ':', [ !Ref 'VPCStackName', 'PrivateNamespace' ] ]

  KumaECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ ecs-tasks.amazonaws.com ]
            Action: [ 'sts:AssumeRole' ]
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess

  KumaECSTaskIamRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "ecs-tasks.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchFullAccess
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
        - arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess


  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref AWS::StackName
      RetentionInDays: 7 # days

  #########################
  # Kuma CP configuration #
  #########################

  KumaCpSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to Kuma CP
      VpcId:
        Fn::ImportValue:
          !Join [ ':', [ !Ref 'VPCStackName', 'VPCId' ] ]

  KumaCpIngressTcp:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress for kuma-cp TCP
      GroupId: !Ref KumaCpSecurityGroup
      IpProtocol: tcp
      CidrIp: !Ref AllowedCidr
      FromPort: 5676
      ToPort: 5682

  KumaCpIngressSSH:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress for kuma-cp SSH
      GroupId: !Ref KumaCpSecurityGroup
      IpProtocol: tcp
      CidrIp: !Ref AllowedCidr
      FromPort: 22
      ToPort: 22

  KumaCpIngressTcpFromSelf:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress for kuma-cp TCP from anywhere
      GroupId: !Ref KumaCpSecurityGroup
      CidrIp: '10.0.0.0/8'
      IpProtocol: tcp
      FromPort: 5676
      ToPort: 5682

  KumaCpIngressUdpFromSelf:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Ingress for kuma-cp DNS
      GroupId: !Ref KumaCpSecurityGroup
      CidrIp: '10.0.0.0/8'
      IpProtocol: udp
      FromPort: 53
      ToPort: 53

  ServiceKumaCP:
    Type: AWS::ECS::Service
    Properties:
      LaunchType: FARGATE
      Cluster:
        Fn::ImportValue:
          !Join [ ':', [ !Ref 'VPCStackName', 'ClusterName' ] ]
      DesiredCount: 1
      TaskDefinition: !Ref 'TaskDefinitionKumaCP'
      ServiceRegistries:
        - RegistryArn: !GetAtt DiscoveryServiceKumaCP.Arn
          Port: 5681
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - Fn::ImportValue:
                !Join [ ':', [ !Ref 'VPCStackName', 'PublicSubnet' ] ]
          SecurityGroups:
            - !Ref KumaCpSecurityGroup
            - Fn::ImportValue:
                !Join [ ':', [ !Ref 'VPCStackName', 'FargateContainerSecurityGroup' ] ]

  TaskDefinitionKumaCP:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: kuma-cp-remote-family
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn: !Ref KumaECSTaskIamRole
      ExecutionRoleArn: !Ref 'KumaECSTaskExecutionRole'
      Cpu: 256
      Memory: 512
      ContainerDefinitions:
        - Name: ssh-admin
          Image: sickp/alpine-sshd:latest
          PortMappings:
            - ContainerPort: 22
              Protocol: tcp
        - Name: kuma-cp-remote
          Essential: true
          Image: !Ref Image
          PortMappings:
            - ContainerPort: 5676
              Protocol: tcp
            - ContainerPort: 5678
              Protocol: tcp
            - ContainerPort: 5680
              Protocol: tcp
            - ContainerPort: 5681
              Protocol: tcp
            - ContainerPort: 5682
              Protocol: tcp
            - ContainerPort: 53
              Protocol: udp
          User: root:root # needed for UDP port 53 binding
          Environment:
            - Name: KUMA_MODE
              Value: remote
            - Name: KUMA_MULTIZONE_REMOTE_ZONE
              Value: !Ref Zone
            - Name: KUMA_MULTIZONE_REMOTE_GLOBAL_ADDRESS
              Value: !Ref KumaCPGlobal
            - Name: KUMA_GENERAL_TLS_CERT_FILE
              Value: /var/cert.pem
            - Name: KUMA_GENERAL_TLS_CERT
              Value: !Ref ServerCert
            - Name: KUMA_GENERAL_TLS_KEY_FILE
              Value: /var/key.pem
            - Name: KUMA_GENERAL_TLS_KEY
              Value: !Ref ServerKey
            - Name: KUMA_DNS_SERVER_PORT
              Value: 53
          EntryPoint: [
              "sh", "-c",
              "echo \"${KUMA_GENERAL_TLS_CERT}\" > ${KUMA_GENERAL_TLS_CERT_FILE}; echo \"${KUMA_GENERAL_TLS_KEY}\" > ${KUMA_GENERAL_TLS_KEY_FILE}; /usr/bin/kuma-cp run"
          ]
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref AWS::StackName
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: kuma-cp
