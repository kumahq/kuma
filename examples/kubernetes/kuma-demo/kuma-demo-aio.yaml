apiVersion: v1
kind: Namespace
metadata:
  name: kuma-demo
  namespace: kuma-demo
  labels:
    kuma.io/sidecar-injection: enabled
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elasticsearch
  namespace: kuma-demo
---
apiVersion: v1
kind: Service
metadata:
  namespace: kuma-demo
  name: elasticsearch
  labels:
    component: elasticsearch
spec:
  type: LoadBalancer
  selector:
    component: elasticsearch
  ports:
  - name: http
    port: 80
    targetPort: 9200
  type: ClusterIP
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: es
  namespace: kuma-demo
  labels:
    component: elasticsearch
spec:
  replicas: 1
  template:
    metadata:
      labels:
        component: elasticsearch
    spec:
      serviceAccount: elasticsearch
      initContainers:
      - name: init-sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: es
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
        image: kvn0218/kuma-elastic-kubernetes:latest
        env:
        - name: KUBERNETES_CA_CERTIFICATE_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: "CLUSTER_NAME"
          value: "myesdb"
        - name: "DISCOVERY_SERVICE"
          value: "elasticsearch"
        - name: NODE_MASTER
          value: "true"
        - name: NODE_DATA
          value: "true"
        - name: HTTP_ENABLE
          value: "true"
        - name: NETWORK_HOST
          value: "0.0.0.0"          
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - mountPath: /data
          name: storage
      volumes:
      - name: storage
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-master
  namespace: kuma-demo
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
      role: master
      tier: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        role: master
        tier: backend
    spec:
      containers:
      - name: master
        image: kvn0218/kuma-redis
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 150m
            memory: 256Mi
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: kuma-demo
  labels:
    app: redis
    role: master
    tier: backend
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
    role: master
    tier: backend
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: kuma-demo
spec:
  selector:
    app: kuma-demo-backend
  ports:
  - name: api
    port: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-demo-backend-v0
  namespace: kuma-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuma-demo-backend
      version: v0
      env: prod
  template:
    metadata:
      labels:
        app: kuma-demo-backend
        version: v0
        env: prod
    spec:
      containers:
      - image: kvn0218/kuma-demo-be:v1
        name: kuma-be
        env:
        - name: ES_HOST
          value: http://elasticsearch:80
        - name: ES_SPECIAL_OFFER
          value: "false"
        - name: REDIS_HOST
          value: redis
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-demo-backend-v1
  namespace: kuma-demo
spec:
  replicas: 0
  selector:
    matchLabels:
      app: kuma-demo-backend
      version: v1
      env: intg
  template:
    metadata:
      labels:
        app: kuma-demo-backend
        version: v1
        env: intg
    spec:
      containers:
      - image: kvn0218/kuma-demo-be:v1
        name: kuma-be
        env:
        - name: ES_HOST
          value: http://elasticsearch:80
        - name: REDIS_HOST
          value: redis
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-demo-backend-v2
  namespace: kuma-demo
spec:
  replicas: 0
  selector:
    matchLabels:
      app: kuma-demo-backend
      version: v2
      env: dev
  template:
    metadata:
      labels:
        app: kuma-demo-backend
        version: v2
        env: dev
    spec:
      containers:
      - image: kvn0218/kuma-demo-be:v1
        name: kuma-be
        env:
        - name: ES_HOST
          value: http://elasticsearch:80
        - name: ES_TOTAL_OFFER
          value: "2"
        - name: REDIS_HOST
          value: redis
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3001
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: demo-app-config
  namespace: kuma-demo
data:
  nginx.conf: |
    user  nginx;
    worker_processes  1;
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;
    events {
        worker_connections  1024;
    }
    http {
        default_type  application/octet-stream;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
        access_log  /var/log/nginx/access.log  main;
        keepalive_timeout  65;
        upstream frontend {
            server localhost:8080;
        }
        upstream backend {
            server backend:3001;
            keepalive_timeout 0s;
        }
        server {
            listen       80;
            server_name  localhost;
            location /items {
                proxy_pass http://backend;
            }
            location / {
                proxy_pass http://frontend;
            }
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: kuma-demo
spec:
  selector:
    app: kuma-demo-frontend
  ports:
  - name: http
    port: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-demo-app
  namespace: kuma-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuma-demo-frontend
      version: v8
      env: prod
  template:
    metadata:
      labels:
        app: kuma-demo-frontend
        version: v8
        env: prod
    spec:
      containers:
      - image: nginx
        name: nginx
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        volumeMounts:
        - name: demo-app-config
          mountPath: /etc/nginx/
      - name: kuma-fe
        image: kvn0218/kuma-demo-fe:kubecon
        imagePullPolicy: IfNotPresent
      volumes:
      - name: demo-app-config
        configMap:
          name: demo-app-config
