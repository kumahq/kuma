type: object
properties:
  type:
    description: 'the type of the resource'
    type: string
    enum:
      - MeshExternalService
  mesh:
    description: 'Mesh is the name of the Kuma mesh this resource belongs to. It may be omitted for cluster-scoped resources.'
    type: string
    default: default
  name:
    description: 'Name of the Kuma resource'
    type: string
  spec:
    description: Spec is the specification of the Kuma MeshExternalService resource.
    properties:
      endpoints:
        description: Endpoints defines a list of destinations to send traffic to.
        items:
          properties:
            address:
              description: Address defines an address to which a user want to send a request. Is possible to provide `domain`, `ip` and `unix` sockets.
              example: unix:///tmp/example.sock
              minLength: 1
              type: string
            port:
              description: Port of the endpoint
              maximum: 65535
              minimum: 1
              type: integer
          required:
            - address
            - port
          type: object
        type: array
      extension:
        description: Extension struct for a plugin configuration, in the presence of an extension `endpoints` and `tls` are not required anymore - it's up to the extension to validate them independently.
        properties:
          config:
            description: Config freeform configuration for the extension.
            x-kubernetes-preserve-unknown-fields: true
          type:
            description: Type of the extension.
            type: string
        required:
          - config
          - type
        type: object
      match:
        description: Match defines traffic that should be routed through the sidecar.
        properties:
          port:
            description: Port defines a port to which a user does request.
            type: integer
          protocol:
            default: tcp
            description: 'Protocol defines a protocol of the communication. Possible values: `tcp`, `grpc`, `http`, `http2`.'
            enum:
              - tcp
              - grpc
              - http
              - http2
            type: string
          type:
            default: HostnameGenerator
            description: Type of the match, only `HostnameGenerator` is available at the moment.
            enum:
              - HostnameGenerator
            type: string
        required:
          - port
        type: object
      tls:
        description: Tls provides a TLS configuration when proxy is resposible for a TLS origination
        properties:
          allowRenegotiation:
            default: false
            description: |-
              AllowRenegotiation defines if TLS sessions will allow renegotiation.
              Setting this to true is not recommended for security reasons.
            type: boolean
          enabled:
            default: false
            description: Enabled defines if proxy should originate TLS.
            type: boolean
          verification:
            description: Verification section for providing TLS verification details.
            properties:
              caCert:
                description: CaCert defines a certificate of CA.
                properties:
                  inline:
                    description: Data source is inline bytes.
                    format: byte
                    type: string
                  inlineString:
                    description: Data source is inline string`
                    type: string
                  secret:
                    description: Data source is a secret with given Secret key.
                    type: string
                type: object
              clientCert:
                description: ClientCert defines a certificate of a client.
                properties:
                  inline:
                    description: Data source is inline bytes.
                    format: byte
                    type: string
                  inlineString:
                    description: Data source is inline string`
                    type: string
                  secret:
                    description: Data source is a secret with given Secret key.
                    type: string
                type: object
              clientKey:
                description: ClientKey defines a client private key.
                properties:
                  inline:
                    description: Data source is inline bytes.
                    format: byte
                    type: string
                  inlineString:
                    description: Data source is inline string`
                    type: string
                  secret:
                    description: Data source is a secret with given Secret key.
                    type: string
                type: object
              mode:
                default: Secured
                description: Mode defines if proxy should skip verification, one of `SkipSAN`, `SkipCA`, `Secured`, `SkipALL`. Default `Secured`.
                enum:
                  - SkipSAN
                  - SkipCA
                  - Secured
                  - SkipALL
                type: string
              subjectAltNames:
                description: SubjectAltNames list of names to verify in the certificate.
                items:
                  properties:
                    type:
                      default: Secured
                      description: 'Type specifies matching type, one of `Exact`, `Prefix`. Default: `Exact`'
                      enum:
                        - Exact
                        - Prefix
                      type: string
                    value:
                      description: Value to match.
                      type: string
                  required:
                    - value
                  type: object
                type: array
            type: object
          version:
            description: Version section for providing version specification.
            properties:
              max:
                default: TLSAuto
                description: Max defines maximum supported version. One of `TLSAuto`, `TLS10`, `TLS11`, `TLS12`, `TLS13`.
                enum:
                  - TLSAuto
                  - TLS10
                  - TLS11
                  - TLS12
                  - TLS13
                type: string
              min:
                default: TLSAuto
                description: Min defines minimum supported version. One of `TLSAuto`, `TLS10`, `TLS11`, `TLS12`, `TLS13`.
                enum:
                  - TLSAuto
                  - TLS10
                  - TLS11
                  - TLS12
                  - TLS13
                type: string
            required:
              - max
              - min
            type: object
        required:
          - allowRenegotiation
          - verification
          - version
        type: object
    required:
      - match
    type: object
