resources:
- name: mesh-1:externalservice
  resource:
    '@type': type.googleapis.com/envoy.config.cluster.v3.Cluster
    altStatName: mesh-1_externalservice
    connectTimeout: 5s
    dnsLookupFamily: V4_ONLY
    loadAssignment:
      clusterName: mesh-1:externalservice
      endpoints:
      - lbEndpoints:
        - endpoint:
            address:
              socketAddress:
                address: kuma.io
                portValue: 80
          loadBalancingWeight: 1
          metadata:
            filterMetadata:
              envoy.lb:
                kuma.io/protocol: http
                mesh: mesh-1
              envoy.transport_socket_match:
                kuma.io/protocol: http
                mesh: mesh-1
    name: mesh-1:externalservice
    type: STRICT_DNS
    typedExtensionProtocolOptions:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicitHttpConfig:
          httpProtocolOptions: {}
- name: mesh-2:externalservice
  resource:
    '@type': type.googleapis.com/envoy.config.cluster.v3.Cluster
    altStatName: mesh-2_externalservice
    connectTimeout: 5s
    dnsLookupFamily: V4_ONLY
    loadAssignment:
      clusterName: mesh-2:externalservice
      endpoints:
      - lbEndpoints:
        - endpoint:
            address:
              socketAddress:
                address: kuma.io
                portValue: 80
          loadBalancingWeight: 1
          metadata:
            filterMetadata:
              envoy.lb:
                kuma.io/protocol: http
                mesh: mesh-2
              envoy.transport_socket_match:
                kuma.io/protocol: http
                mesh: mesh-2
    name: mesh-2:externalservice
    type: STRICT_DNS
    typedExtensionProtocolOptions:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        '@type': type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicitHttpConfig:
          httpProtocolOptions: {}
- name: inbound:192.168.0.1:10002
  resource:
    '@type': type.googleapis.com/envoy.config.listener.v3.Listener
    address:
      socketAddress:
        address: 192.168.0.1
        portValue: 10002
    enableReusePort: false
    filterChains:
    - filterChainMatch:
        serverNames:
        - externalservice{mesh=mesh-1}
        transportProtocol: tls
      filters:
      - name: envoy.filters.network.rbac
        typedConfig:
          '@type': type.googleapis.com/envoy.extensions.filters.network.rbac.v3.RBAC
          rules:
            policies:
              allow-all-traffic-1:
                permissions:
                - any: true
                principals:
                - any: true
          statPrefix: externalservice.
      - name: envoy.filters.network.http_connection_manager
        typedConfig:
          '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          httpFilters:
          - name: envoy.filters.http.router
            typedConfig:
              '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          routeConfig:
            name: outbound:externalservice
            validateClusters: false
            virtualHosts:
            - domains:
              - '*'
              name: externalservice
              routes:
              - match:
                  prefix: /
                route:
                  autoHostRewrite: true
                  cluster: mesh-1:externalservice
                  timeout: 0s
          statPrefix: externalservice
      name: externalservice_mesh-1
      transportSocket:
        name: envoy.transport_sockets.tls
        typedConfig:
          '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          commonTlsContext:
            combinedValidationContext:
              defaultValidationContext:
                matchTypedSubjectAltNames:
                - matcher:
                    prefix: spiffe://mesh-1/
                  sanType: URI
              validationContextSdsSecretConfig:
                name: mesh_ca:secret:mesh-1
                sdsConfig:
                  ads: {}
                  resourceApiVersion: V3
            tlsCertificateSdsSecretConfigs:
            - name: identity_cert:secret:mesh-1
              sdsConfig:
                ads: {}
                resourceApiVersion: V3
          requireClientCertificate: true
    - filterChainMatch:
        serverNames:
        - externalservice{mesh=mesh-2}
        transportProtocol: tls
      filters:
      - name: envoy.filters.network.rbac
        typedConfig:
          '@type': type.googleapis.com/envoy.extensions.filters.network.rbac.v3.RBAC
          rules:
            policies:
              allow-all-traffic-1:
                permissions:
                - any: true
                principals:
                - any: true
          statPrefix: externalservice.
      - name: envoy.filters.network.http_connection_manager
        typedConfig:
          '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          httpFilters:
          - name: envoy.filters.http.router
            typedConfig:
              '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          routeConfig:
            name: outbound:externalservice
            validateClusters: false
            virtualHosts:
            - domains:
              - '*'
              name: externalservice
              routes:
              - match:
                  prefix: /
                route:
                  autoHostRewrite: true
                  cluster: mesh-2:externalservice
                  timeout: 0s
          statPrefix: externalservice
      name: externalservice_mesh-2
      transportSocket:
        name: envoy.transport_sockets.tls
        typedConfig:
          '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          commonTlsContext:
            combinedValidationContext:
              defaultValidationContext:
                matchTypedSubjectAltNames:
                - matcher:
                    prefix: spiffe://mesh-2/
                  sanType: URI
              validationContextSdsSecretConfig:
                name: mesh_ca:secret:mesh-2
                sdsConfig:
                  ads: {}
                  resourceApiVersion: V3
            tlsCertificateSdsSecretConfigs:
            - name: identity_cert:secret:mesh-2
              sdsConfig:
                ads: {}
                resourceApiVersion: V3
          requireClientCertificate: true
    listenerFilters:
    - name: envoy.filters.listener.tls_inspector
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
    name: inbound:192.168.0.1:10002
    trafficDirection: INBOUND
- name: identity_cert:secret:mesh-1
  resource:
    '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.Secret
    name: identity_cert:secret:mesh-1
    tlsCertificate:
      certificateChain:
        inlineBytes: Q0VSVA==
      privateKey:
        inlineBytes: S0VZ
- name: identity_cert:secret:mesh-2
  resource:
    '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.Secret
    name: identity_cert:secret:mesh-2
    tlsCertificate:
      certificateChain:
        inlineBytes: Q0VSVA==
      privateKey:
        inlineBytes: S0VZ
- name: mesh_ca:secret:mesh-1
  resource:
    '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.Secret
    name: mesh_ca:secret:mesh-1
    validationContext:
      trustedCa:
        inlineBytes: Q0E=
- name: mesh_ca:secret:mesh-2
  resource:
    '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.Secret
    name: mesh_ca:secret:mesh-2
    validationContext:
      trustedCa:
        inlineBytes: Q0E=
