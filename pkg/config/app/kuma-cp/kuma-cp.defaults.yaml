# Environment Type, can be either "kubernetes" or "universal"
environment: universal # ENV: KUMA_ENVIRONMENT

# Resource Store configuration
store:
  # Type of Store used in the Control Plane. Can be either "kubernetes", "postgres" or "memory"
  type: memory # ENV: KUMA_STORE_TYPE

  # Kubernetes Store configuration (used when store.type=kubernetes)
  kubernetes:
    # Namespace where Control Plane is installed to.
    systemNamespace: kuma-system # ENV: KUMA_STORE_KUBERNETES_SYSTEM_NAMESPACE

  # Postgres Store configuration (used when store.type=postgres)
  postgres:
    # Host of the Postgres DB
    host: 127.0.0.1 # ENV: KUMA_STORE_POSTGRES_HOST
    # Port of the Postgres DB
    port: 15432 # ENV: KUMA_STORE_POSTGRES_PORT
    # User of the Postgres DB
    user: kuma # ENV: KUMA_STORE_POSTGRES_USER
    # Password of the Postgres DB
    password: kuma # ENV: KUMA_STORE_POSTGRES_PASSWORD
    # Database name of the Postgres DB
    dbName: kuma # ENV: KUMA_STORE_POSTGRES_DB_NAME
    # Connection Timeout to the DB in seconds
    connectionTimeout: 5 # ENV: KUMA_STORE_POSTGRES_CONNECTION_TIMEOUT

# Configuration of Bootstrap Server, which provides bootstrap config to Dataplanes
bootstrapServer:
  # Port of Server that provides bootstrap configuration for dataplanes
  port: 5682 # ENV: KUMA_BOOTSTRAP_SERVER_PORT
  # Parameters of bootstrap configuration
  params:
    # Address of Envoy Admin
    adminAddress: 127.0.0.1 # ENV: KUMA_BOOTSTRAP_SERVER_PARAMS_ADMIN_ADDRESS
    # Port of Envoy Admin
    adminPort: 0 # ENV: KUMA_BOOTSTRAP_SERVER_PARAMS_ADMIN_PORT
    # Path to access log file of Envoy Admin
    adminAccessLogPath: /dev/null # ENV: KUMA_BOOTSTRAP_SERVER_PARAMS_ADMIN_ACCESS_LOG_PATH
    # Host of XDS Server
    xdsHost: 127.0.0.1 # ENV: KUMA_BOOTSTRAP_SERVER_PARAMS_XDS_HOST
    # Port of XDS Server
    xdsPort: 5678 # ENV: KUMA_BOOTSTRAP_SERVER_PARAMS_XDS_PORT
    # Connection timeout to the XDS Server
    xdsConnectTimeout: 1s # ENV: KUMA_BOOTSTRAP_SERVER_PARAMS_XDS_CONNECT_TIMEOUT

# Envoy SDS server configuration
sdsServer:
  # Port of GRPC server that Envoy connects to
  grpcPort: 5677 # ENV: KUMA_SDS_SERVER_GRPC_PORT
  # TlsCertFile defines a path to a file with PEM-encoded TLS cert.
  tlsCertFile: # ENV: KUMA_SDS_SERVER_TLS_CERT_FILE
  # TlsKeyFile defines a path to a file with PEM-encoded TLS key.
  tlsKeyFile: # ENV: KUMA_SDS_SERVER_TLS_KEY_FILE

# Dataplane Token server configuration
dataplaneTokenServer:
  # Port of the server
  port: 5679 # ENV: KUMA_DATAPLANE_TOKEN_SERVER_PORT
  # Public interface on which the SSL server will be exposed
  publicInterface: # ENV: KUMA_DATAPLANE_TOKEN_SERVER_PUBLIC_INTERFACE
  # Public port. If not specified (0) then Port will be used
  publicPort: # ENV: KUMA_DATAPLANE_TOKEN_SERVER_PUBLIC_PORT
  # Path to TLS certificate file
  tlsCertFile: # ENV: KUMA_DATAPLANE_TOKEN_SERVER_TLS_CERT_FILE
  # Path to TLS key file
  tlsKeyFile: # ENV: KUMA_DATAPLANE_TOKEN_SERVER_TLS_KEY_FILE
  # Paths to authorized client certificates
  clientCertFiles: # ENV: KUMA_DATAPLANE_TOKEN_SERVER_CLIENT_CERT_FILES

# Envoy XDS server configuration
xdsServer:
  # Port of GRPC server that Envoy connects to
  grpcPort: 5678 # ENV: KUMA_XDS_SERVER_GRPC_PORT
  # Port of Diagnostic Server for checking health and readiness of the Control Plane
  diagnosticsPort: 5680 # ENV: KUMA_XDS_SERVER_DIAGNOSTICS_PORT
  # Interval for re-genarting configuration for Dataplanes connected to the Control Plane
  dataplaneConfigurationRefreshInterval: 1s # ENV: KUMA_XDS_SERVER_DATAPLANE_CONFIGURATION_REFRESH_INTERVAL
  # Interval for flushing status of Dataplanes connected to the Control Plane
  dataplaneStatusFlushInterval: 1s # ENV: KUMA_XDS_SERVER_DATAPLANE_STATUS_FLUSH_INTERVAL

# API Server configuration
apiServer:
  # Port of the API Server
  port: 5681 # ENV: KUMA_API_SERVER_PORT
  # If true, then API Server will operate in read only mode (serving GET requests)
  readOnly: false # ENV: KUMA_API_SERVER_READ_ONLY

# Environment-specific configuration
runtime:
  # Kubernetes-specific configuration
  kubernetes:
    # Admission WebHook Server configuration
    admissionServer:
      # Address the Admission WebHook Server should be listening on
      address:
      # Port the Admission WebHook Server should be listening on
      port: 5443
      # Directory with a TLS cert and private key for the Admission WebHook Server.
      # TLS certificate file must be named `tls.crt`.
      # TLS key file must be named `tls.key`.
      certDir:

# Default Kuma entities configuration
defaults:
  # Default Mesh configuration in YAML that will be applied on first usage of Kuma CP
  mesh: | # ENV: KUMA_DEFAULTS_MESH
    type: Mesh
    name: default
    mtls:
      ca: {}
      enabled: false

# Reports configuration
reports:
  # If true then usage stats will be reported
  enabled: true # ENV: KUMA_REPORTS_ENABLED