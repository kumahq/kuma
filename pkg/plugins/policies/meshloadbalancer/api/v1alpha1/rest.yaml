openapi: 3.0.1
info:
  version: v1alpha1
  title: Kuma API
  description: Kuma API

paths:
  /meshes/{mesh}/meshloadbalancers/{name}:
    get:
      summary: Returns MeshLoadBalancer entity
      tags: [ "MeshLoadBalancer" ]
      parameters:
        - in: path
          name: mesh
          schema:
            type: string
          required: true
          description: name of the mesh
        - in: path
          name: name
          schema:
            type: string
          required: true
          description: name of the MeshLoadBalancer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: 'schema.yaml'

    put:
      summary: Creates or Updates MeshLoadBalancer entity
      tags: [ "MeshLoadBalancer" ]
      parameters:
        - in: path
          name: mesh
          schema:
            type: string
          required: true
          description: name of the mesh
        - in: path
          name: name
          schema:
            type: string
          required: true
          description: name of the MeshLoadBalancer
      requestBody:
        description: MeshLoadBalancer entity
        required: true
        content:
          application/json:
            schema:
              $ref: 'schema.yaml'
      responses:
        '200':
          description: Updated
        '201':
          description: Created

    delete:
      summary: Deletes MeshLoadBalancer entity
      tags: [ "MeshLoadBalancer" ]
      parameters:
        - in: path
          name: mesh
          schema:
            type: string
          required: true
          description: name of the mesh
        - in: path
          name: name
          schema:
            type: string
          required: true
          description: name of the MeshLoadBalancer
      responses:
        '200':
          description: Successful response


  /meshes/{mesh}/meshloadbalancers:
    get:
      summary: Returns a list of MeshLoadBalancer in the mesh.
      tags: [ "MeshLoadBalancer" ]
      parameters:
        - in: path
          name: mesh
          schema:
            type: string
          required: true
          description: name of the mesh
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: 'schema.yaml'
                  next:
                    type: string
                    description: URL to the next page


  /meshloadbalancers:
    get:
      summary: Returns a list of MeshLoadBalancer from all meshes
      tags: [ "MeshLoadBalancer" ]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: 'schema.yaml'
                  next:
                    type: string
                    description: URL to the next page
