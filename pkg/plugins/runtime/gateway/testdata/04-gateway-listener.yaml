Clusters:
  Resources: {}
Endpoints:
  Resources: {}
Listeners:
  Resources:
    logging-gateway:HTTP:8080:
      address:
        socketAddress:
          address: 192.168.1.1
          portValue: 8080
      enableReusePort: true
      filterChains:
      - filters:
        - name: envoy.filters.network.http_connection_manager
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
            accessLog:
            - name: envoy.access_loggers.file
              typedConfig:
                '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                logFormat:
                  textFormatSource:
                    inlineString: |
                      [%START_TIME%] logging "%REQ(:method)% %REQ(x-envoy-original-path?:path)% %PROTOCOL%" %RESPONSE_CODE% %RESPONSE_FLAGS% %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(x-envoy-upstream-service-time)% "%REQ(x-forwarded-for)%" "%REQ(user-agent)%" "%REQ(x-b3-traceid?x-datadog-traceid)%" "%REQ(x-request-id)%" "%REQ(:authority)%" "gateway-default" "*" "192.168.1.1" "%UPSTREAM_HOST%"
                path: /tmp/access.log
            commonHttpProtocolOptions:
              headersWithUnderscoresAction: REJECT_REQUEST
              idleTimeout: 300s
            http2ProtocolOptions:
              allowConnect: true
              initialConnectionWindowSize: 1048576
              initialStreamWindowSize: 65536
              maxConcurrentStreams: 100
            httpFilters:
            - name: envoy.filters.http.local_ratelimit
              typedConfig:
                '@type': type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
                statPrefix: rate_limit
            - name: gzip-compress
              typedConfig:
                '@type': type.googleapis.com/envoy.extensions.filters.http.compressor.v3.Compressor
                compressorLibrary:
                  name: gzip
                  typedConfig:
                    '@type': type.googleapis.com/envoy.extensions.compression.gzip.compressor.v3.Gzip
                responseDirectionConfig:
                  disableOnEtagHeader: true
            - name: envoy.filters.http.router
              typedConfig:
                '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
            mergeSlashes: true
            normalizePath: true
            pathWithEscapedSlashesAction: UNESCAPE_AND_REDIRECT
            rds:
              configSource:
                ads: {}
                resourceApiVersion: V3
              routeConfigName: logging-gateway:HTTP:8080
            requestHeadersTimeout: 0.500s
            serverName: Kuma Gateway
            statPrefix: gateway-default
            streamIdleTimeout: 5s
            stripAnyHostPort: true
            useRemoteAddress: true
      listenerFilters:
      - name: envoy.filters.listener.tls_inspector
        typedConfig:
          '@type': type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
      name: logging-gateway:HTTP:8080
      perConnectionBufferLimitBytes: 32768
      trafficDirection: INBOUND
Routes:
  Resources:
    logging-gateway:HTTP:8080:
      name: logging-gateway:HTTP:8080
      requestHeadersToRemove:
      - x-kuma-tags
      validateClusters: false
      virtualHosts:
      - domains:
        - '*'
        name: '*'
        routes:
        - directResponse:
            body:
              inlineString: |
                This is a Kuma MeshGateway. No routes match this MeshGateway!
            status: 404
          match:
            prefix: /
Runtimes:
  Resources:
    gateway.listeners:
      layer: {}
      name: gateway.listeners
Secrets:
  Resources: {}
