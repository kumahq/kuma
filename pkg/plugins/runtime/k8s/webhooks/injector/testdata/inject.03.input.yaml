kind: Pod
apiVersion: v1
metadata:
  generateName: coredns-fb8b8dccf-
  creationTimestamp:
  labels:
    k8s-app: kube-dns
    pod-template-hash: fb8b8dccf
  ownerReferences:
  - apiVersion: apps/v1
    kind: ReplicaSet
    name: coredns-fb8b8dccf
    uid: 844452a6-aec8-11e9-9753-0242ac110002
    controller: true
    blockOwnerDeletion: true
spec:
  volumes:
  - name: config-volume
    configMap:
      name: coredns
      items:
      - key: Corefile
        path: Corefile
      defaultMode: 420
  - name: coredns-token-9gmrh
    secret:
      secretName: coredns-token-9gmrh
  containers:
  - name: coredns
    image: k8s.gcr.io/coredns:1.3.1
    args:
    - "-conf"
    - "/etc/coredns/Corefile"
    ports:
    - name: dns
      containerPort: 53
      protocol: UDP
    - name: dns-tcp
      containerPort: 53
      protocol: TCP
    - name: metrics
      containerPort: 9153
      protocol: TCP
    resources:
      limits:
        memory: 170Mi
      requests:
        cpu: 100m
        memory: 70Mi
    volumeMounts:
    - name: config-volume
      readOnly: true
      mountPath: "/etc/coredns"
    - name: coredns-token-9gmrh
      readOnly: true
      mountPath: "/var/run/secrets/kubernetes.io/serviceaccount"
    livenessProbe:
      httpGet:
        path: "/health"
        port: 8080
        scheme: HTTP
      initialDelaySeconds: 60
      timeoutSeconds: 5
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 5
    readinessProbe:
      httpGet:
        path: "/health"
        port: 8080
        scheme: HTTP
      timeoutSeconds: 1
      periodSeconds: 10
      successThreshold: 1
      failureThreshold: 3
    terminationMessagePath: "/dev/termination-log"
    terminationMessagePolicy: File
    imagePullPolicy: IfNotPresent
    securityContext:
      capabilities:
        add:
        - NET_BIND_SERVICE
        drop:
        - all
      readOnlyRootFilesystem: true
      allowPrivilegeEscalation: false
      procMount: Default
  restartPolicy: Always
  terminationGracePeriodSeconds: 30
  dnsPolicy: Default
  nodeSelector:
    beta.kubernetes.io/os: linux
  serviceAccountName: coredns
  serviceAccount: coredns
  securityContext: {}
  schedulerName: default-scheduler
  tolerations:
  - key: CriticalAddonsOnly
    operator: Exists
  - key: node-role.kubernetes.io/master
    effect: NoSchedule
  - key: node.kubernetes.io/not-ready
    operator: Exists
    effect: NoExecute
    tolerationSeconds: 300
  - key: node.kubernetes.io/unreachable
    operator: Exists
    effect: NoExecute
    tolerationSeconds: 300
  priorityClassName: system-cluster-critical
  priority: 2000000000
  enableServiceLinks: true
status: {}
