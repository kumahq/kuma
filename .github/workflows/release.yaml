name: "release"
run-name: Release${{ inputs.check && ' and check' || '' }} ${{ inputs.release }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false
on:
  release: {}
  schedule:
    - cron: 0 7 * * *
  workflow_dispatch:
    inputs:
      release:
        description: "the version to publish, if you just want to regen the changelog.md set 0.0.0"
        required: true
        type: string
      check:
        required: false
        type: boolean
        default: false
        description: "check that everything is published correctly"
env:
  CHARTS_REPO: "kumahq/charts"
  BINARIES: "darwin-amd64,darwin-arm64,linux-amd64,linux-arm64"
  DOCKER_REPO: "kumahq"
  DOCKER_IMAGES: "kumactl,kuma-cp,kuma-dp,kuma-init,kuma-cni"
  RELEASE: ${{ inputs.release || '0.0.0' }}
  CHECK: ${{ inputs.check || 'false' }}
  EDITION: kuma
  MIN_VERSION: "2.2.0"
permissions:
  contents: read
jobs:
  get-active-release-branches:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    outputs:
      branches: ${{ steps.get-branches.outputs.branches }}
    steps:
      - name: "Get active branches"
        id: get-branches
        env:
          REPOSITORY: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          active_branches=$(gh api repos/$REPOSITORY/contents/active-branches.json --jq '[.content | @base64d | fromjson | .[] ]')
          if [[ "$active_branches" == "[]" || -z "$active_branches" ]]; then
              echo "No active branches to process"
              exit 1
          fi
          branches=($(echo "$active_branches" | jq -r '.[]'))

          if [[ ${{ env.RELEASE }} == "0.0.0" ]]; then
              echo "branches=$active_branches" >> $GITHUB_OUTPUT
              exit 0
          fi

          TARGET_MAJOR_MINOR=$(echo ${{ env.RELEASE }} | awk -F. '{print $1"."$2}')

          # Function to compare versions (ignores patch versions)
          compare_versions() {
              if [[ $1 == "master" ]]; then
                  return 0
              fi
              # Extract major.minor from branch (removing "release-" prefix)
              branch_major_minor=$(echo "$1" | sed 's/release-//' | cut -d'.' -f1,2)
              target_major_minor=$(echo "$2" | cut -d'.' -f1,2)

              # Compare versions using sort -V
              if [[ "$branch_major_minor" == "$target_major_minor" || "$(printf "%s\n%s" "$branch_major_minor" "$target_major_minor" | sort -V | head -n1)" == "$target_major_minor" ]]; then
                  return 0  # branch_version >= target_version (valid)
              else
                  return 1  # branch_version < target_version (skip)
              fi
          }
          valid_branches=()
          for branch in ${branches[@]}; do
              if compare_versions "$branch" "$TARGET_MAJOR_MINOR"; then
                  valid_branches+=("$branch")
              fi
          done
          valid_branches_json=$(printf '%s\n' "${valid_branches[@]}" | jq -R . | jq -cs .)

          echo "branches=$valid_branches_json" >> $GITHUB_OUTPUT
  release:
    strategy:
      matrix:
        branch: ${{ fromJSON(needs.get-active-release-branches.outputs.branches) }}
      fail-fast: false
    timeout-minutes: 30
    runs-on: ubuntu-24.04
    env:
      BRANCH: ${{ matrix.branch }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ env.BRANCH }}
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version-file: go.mod
      - name: install-kuma-ci-tools
        run: |
          echo $(go env GOPATH)/bin >> $GITHUB_PATH
          go install github.com/kumahq/ci-tools/cmd/release-tool@v1.1.0
      - name: Generate GitHub app token
        id: github-app-token
        uses: actions/create-github-app-token@0d564482f06ca65fa9e77e2510873638c82206f2 # v1.11.5
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      - name: create-release
        if: env.RELEASE != '0.0.0'
        env:
          GITHUB_TOKEN: ${{ steps.github-app-token.outputs.token }}
        run: |
          release-tool release changelog --repo ${{ github.repository }} --release ${{ env.RELEASE }}
      - name: check-helm
        if: env.RELEASE != '0.0.0' && fromJSON(env.CHECK)
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          release-tool release helm-chart --repo ${{ github.repository }} --charts-repo ${{ env.CHARTS_REPO }} --release ${{ env.RELEASE }}
      - name: check-binaries
        env:
          GITHUB_TOKEN: ${{ github.token }}
        if: fromJSON(env.CHECK)
        run: |
          release-tool release binaries --repo ${{ github.repository }} --release ${{ env.RELEASE }} --binaries ${{ env.BINARIES }}
      - name: check-docker
        env:
          GITHUB_TOKEN: ${{ github.token }}
        if: fromJSON(env.CHECK)
        run: |
          release-tool release docker --repo ${{ github.repository }} --release ${{ env.RELEASE }} --docker-repo ${{env.DOCKER_REPO }} --images ${{ env.DOCKER_IMAGES }}
      - name: update-active-branches.json
        if: env.RELEASE == '0.0.0'
        env:
          GITHUB_TOKEN: ${{ steps.github-app-token.outputs.token }}
        run: |
          release-tool version-file --repo ${{ github.repository }} --active-branches > active-branches.json
      - name: update-versions.yml
        env:
          GITHUB_TOKEN: ${{ steps.github-app-token.outputs.token }}
        run: | # need update here if tag 0.0.0
          release-tool version-file --repo ${{ github.repository }} --edition ${{ env.EDITION }} --min-version ${{ env.MIN_VERSION }} --branch ${{ env.BRANCH }} > versions.yml
      - name: update-CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ steps.github-app-token.outputs.token }}
        run: | # need update here
          release-tool changelog.md --repo ${{ github.repository }} > CHANGELOG.md
      - name: "Create Pull Request"
        uses: peter-evans/create-pull-request@67ccf781d68cd99b580ae25a5c18a1cc84ffff1f # v7.0.6
        with:
          commit-message: "docs(CHANGELOG.md): updating changelog and version files"
          signoff: true
          branch: chore/update-changelog-${{ env.BRANCH }}
          base: ${{ env.BRANCH }}
          delete-branch: true
          title: "docs(CHANGELOG.md): updating changelog and version files"
          draft: false
          labels: ci/skip-test,ci/auto-merge,${{ env.BRANCH }}
          token: ${{ steps.github-app-token.outputs.token }}
          committer: kumahq[bot] <110050114+kumahq[bot]@users.noreply.github.com>
          author: kumahq[bot] <110050114+kumahq[bot]@users.noreply.github.com>
