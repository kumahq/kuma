name: "Update insecure dependencies"
on:
  workflow_dispatch: {}
  schedule:
    - cron: 0 3 * * *
permissions: read-all
jobs:
  build-matrix:
    timeout-minutes: 10
    runs-on: ubuntu-24.04
    outputs:
      branches: ${{ steps.generate-matrix.outputs.out }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: "Get active branches"
        id: generate-matrix
        uses: ./.github/workflows/_get-active-branches.yaml
  update-insecure-dependencies:
    env:
      OSV_SCANNER_ADDITIONAL_OPTS: ""
    timeout-minutes: 20
    needs:
      - build-matrix
    strategy:
      fail-fast: false
      matrix:
        branch: ${{ fromJSON(needs.build-matrix.outputs.branches) }}
    runs-on: ubuntu-24.04
    steps:
      - name: Set Swap Space
        uses: pierotofy/set-swap-space@fc79b3f67fa8a838184ce84a674ca12238d2c761
        with:
          swap-size-gb: 10
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ matrix.branch }}
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: go.mod
      - uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
          MISE_DISABLE_TOOLS: "golangci-lint,skaffold"
      - name: "Install tools"
        run: |
          go install github.com/google/osv-scanner/cmd/osv-scanner@b13f37e1a1e4cb98556c1d34cd3256a876929be1 # v1.9.1
      - name: "Prepare commit body - before"
        id: prepare_commit_body_before
        run: |
          SCAN_OUTPUT_BEFORE=$(osv-scanner $OSV_SCANNER_ADDITIONAL_OPTS --lockfile=go.mod | tr "+" "|" | awk 'NR>3 {print last} {last=$0}' || true)
          echo "SCAN_OUTPUT_BEFORE<<EOF" >> $GITHUB_ENV
          echo "$SCAN_OUTPUT_BEFORE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: "Update dependencies"
        id: update
        run: |
          make update-vulnerable-dependencies
      - name: "Prepare commit body - after"
        id: prepare_commit_body_after
        run: |
          SCAN_OUTPUT_AFTER=$(osv-scanner $OSV_SCANNER_ADDITIONAL_OPTS --lockfile=go.mod | tr "+" "|" | awk 'NR>3 {print last} {last=$0}' || true)
          echo "SCAN_OUTPUT_AFTER<<EOF" >> $GITHUB_ENV
          echo "$SCAN_OUTPUT_AFTER" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Generate GitHub app token
        id: github-app-token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      - name: "Create Pull Request"
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          commit-message: "chore(deps): security update"
          signoff: true
          branch: chore/security-updates-${{ matrix.branch }}
          body: |
            Scan output:

            Before update:
            ${{ env.SCAN_OUTPUT_BEFORE }}

            After update:
            ${{ env.SCAN_OUTPUT_AFTER }}

            If a package is showing up in the scan but the script is not trying to update it then it might be because there is no fixed version yet.
          delete-branch: true
          title: "chore(deps): security update"
          draft: false
          labels: dependencies,${{ matrix.branch }}
          token: ${{ steps.github-app-token.outputs.token }}
          committer: kumahq[bot] <110050114+kumahq[bot]@users.noreply.github.com>
          author: kumahq[bot] <110050114+kumahq[bot]@users.noreply.github.com>
