name: "build-test-distribute"
on:
  push:
    branches: ["master", "release-*", "!*-merge-master"]
    tags: ["*"]
  pull_request:
    branches: ["master", "release-*"]
  workflow_dispatch: # Allows manual trigger from GitHub Actions UI or via REST call
permissions:
  contents: write # To upload assets
  id-token: write # For using token to sign images
  actions: read # For getting workflow run info to build provenance
  packages: write # Required for publishing provenance. Issue: https://github.com/slsa-framework/slsa-github-generator/tree/main/internal/builders/container#known-issues
env:
  KUMA_DIR: "."
  # To keep CI tools out of the SBOM, we use a `.ci_tools` directory in the parent
  # of the code checkout path (typically /home/runner/work/<repo-name>/<repo-name>
  # on the runner).
  CI_TOOLS_DIR: "/home/runner/work/kuma/.ci_tools"
concurrency:
  group: ${{ format('{0}-{1}-{2}', github.workflow, github.event_name, github.event_name == 'push' && github.sha || github.event_name == 'pull_request' && github.event.pull_request.number || github.event_name == 'workflow_dispatch' && github.ref_name) }}
  cancel-in-progress: ${{ github.event_name == 'push' && false || true }}
jobs:
  check:
    permissions:
      contents: read
      # golangci-lint-action
      checks: write
    timeout-minutes: 25
    runs-on: ubuntu-latest
    env:
      FULL_MATRIX: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' || contains(github.event.pull_request.labels.*.name, 'ci/run-full-matrix') }}
      ALLOW_PUSH: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'ci/force-publish') }}
      BUILD: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'ci/run-build') || contains(github.event.pull_request.labels.*.name, 'ci/force-publish') }}
      FORCE_PUBLISH_FROM_FORK: ${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'ci/force-publish') && github.event.pull_request.head.repo.full_name != github.repository }}
    outputs:
      FULL_MATRIX: ${{ env.FULL_MATRIX }}
      ALLOW_PUSH: ${{ env.ALLOW_PUSH }}
      BUILD: ${{ env.BUILD }}
      IMAGES: ${{ steps.metadata.outputs.images }}
      REGISTRY: ${{ steps.metadata.outputs.registry }}
      VERSION_NAME: ${{ steps.metadata.outputs.version }}
      NOTARY_REPOSITORY: ${{ (contains(steps.metadata.outputs.version, 'preview') && 'notary-internal') || 'notary' }}
      CLOUDSMITH_REPOSITORY: ${{ steps.metadata.outputs.distribution_repository }}
    steps:
      - name: "Fail when 'ci/force-publish' label is present on PRs from forks"
        if: ${{ fromJSON(env.FORCE_PUBLISH_FROM_FORK) }}
        run: |
          echo "::error title=Label 'ci/force-publish' cannot be used on PRs from forks::To prevent accidental exposure of secrets, CI won't use repository secrets on pull requests from forks"
          exit 1
      - uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0
      - name: Check PR title
        # Check PR title against the Conventional Commits format using commitlint.
        # For more details, see: https://www.conventionalcommits.org/en/v1.0.0/
        # This ensures the PR title matches the conventonal commit title format
        # as it will be usead as a commit name after squashing.
        # See: https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/about-pull-request-merges#merge-message-for-a-squash-merge.
        env:
          # Use an intermediate environment variable to safely handle the PR title
          # and avoid potential injection risks. See:
          # https://docs.github.com/en/actions/security-for-github-actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TITLE: ${{ github.event.pull_request.title }}
        run: |
          # Create a temporary commitlint configuration file
          cat <<EOF > commitlint.config.js
          module.exports = {
            extends: ["@commitlint/config-conventional"],
            helpUrl: "https://github.com/kumahq/kuma/blob/master/CONTRIBUTING.md#commit-message-format",
            rules: {
              "body-max-line-length": [0],
              "footer-max-line-length": [0],
              "footer-leading-blank": [0],
              "header-max-length": [0],
              "scope-enum": [2, "never", [
                "kumacp", "kumadp", "kumacni", "kumainit", "*", "madr", "test", "ci", "perf", "policies", "tests"
              ]],
              "scope-empty": [2, "never"]
            },
          };
          EOF

          # Install commitlint CLI and configuration
          npm install -g @commitlint/cli@19.6.0 @commitlint/config-conventional@19.6.0

          # Validate the PR title. Use the intermediate variable to safely handle the title.
          echo "$TITLE" | commitlint --config commitlint.config.js
