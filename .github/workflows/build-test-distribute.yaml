name: "build-test-distribute"
on:
  push:
    branches: ["amd64-sh-runners", "master", "release-*", "!*-merge-master"]
    tags: ["*"]
  pull_request:
    branches: ["master", "release-*"]
permissions:
  contents: write # To upload assets
  id-token: write # For using token to sign images
  actions: read # For getting workflow run info to build provenance
  packages: write # Required for publishing provenance. Issue: https://github.com/slsa-framework/slsa-github-generator/tree/main/internal/builders/container#known-issues
env:
  KUMA_DIR: "."
  CI_TOOLS_DIR: "/home/runner/work/kuma/kuma/.ci_tools"
jobs:
  check:
    permissions:
      contents: read
      # golangci-lint-action
      checks: write
    timeout-minutes: 15
    runs-on: ubuntu-latest-kong
    env:
      FULL_MATRIX: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'ci/run-full-matrix') }}
      ALLOW_PUSH: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'ci/force-publish') }}
      BUILD: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'ci/run-build') || contains(github.event.pull_request.labels.*.name, 'ci/force-publish') }}
      FORCE_PUBLISH_FROM_FORK: ${{ github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'ci/force-publish') && github.event.pull_request.head.repo.full_name != github.repository }}
    outputs:
      FULL_MATRIX: "true"
      ALLOW_PUSH: "false"
      BUILD: ${{ env.BUILD }}
      IMAGES: ${{ steps.metadata.outputs.images }}
      REGISTRY: ${{ steps.metadata.outputs.registry }}
      VERSION_NAME: ${{ steps.metadata.outputs.version }}
      NOTARY_REPOSITORY: ${{ (contains(steps.metadata.outputs.version, 'preview') && 'notary-internal') || 'notary' }}
      CLOUDSMITH_REPOSITORY: ${{ steps.metadata.outputs.distribution_repository }}
    steps:
      - name: "Fail when 'ci/force-publish' label is present on PRs from forks"
        if: ${{ fromJSON(env.FORCE_PUBLISH_FROM_FORK) }}
        run: |
          echo "::error title=Label 'ci/force-publish' cannot be used on PRs from forks::To prevent accidental exposure of secrets, CI won't use repository secrets on pull requests from forks"
          exit 1
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0
      - id: metadata
        run: |
          echo "images=$(make images/info/release/json)" >> $GITHUB_OUTPUT
          echo "registry=$(make docker/info/registry)" >> $GITHUB_OUTPUT
          echo "version=$(make build/info/version)" >> $GITHUB_OUTPUT
          echo "distribution_repository=$(make build/info/cloudsmith_repository)" >> $GITHUB_OUTPUT
  pull_images:
    timeout-minutes: 15
    runs-on: ubuntu-latest-kong
    env:
      CI_TOOLS_DIR: '/work/kuma/kuma/.ci_tools'
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0
      - run: |
          make dev/tools
      - name: "initial state"
        run: |
          docker info
          echo "docker auth info:"
          cat  ~/.docker/config.json | $CI_TOOLS_DIR/bin/yq '.auths | keys'
      - name: "pull by docker"
        run: |
          for i in `seq 1 1 150`; do
            docker pull busybox:stable-musl
            docker rmi busybox:stable-musl
            sleep 1
          done
      - name: "pull by k3d"
        run: |
          make test/e2e/k8s/start/cluster/kuma-1
          $CI_TOOLS_DIR/bin/k3d kubeconfig get kuma-1 > ./kuma-1.kubeconfig
          export KUBECONFIG=$(pwd)/kuma-1.kubeconfig
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Service
          metadata:
            name: busybox
            namespace: default
            labels:
              app: busybox
          spec:
            ports:
              - port: 80
                name: busybox
            clusterIP: None
            selector:
              app: busybox
          ---
          apiVersion: apps/v1
          kind: StatefulSet
          metadata:
            name: busybox
            namespace: default
          spec:
            selector:
              matchLabels:
                app: busybox
            serviceName: "busybox"
            replicas: 100
            template:
              metadata:
                labels:
                  app: busybox
              spec:
                containers:
                  - name: busybox
                    image: busybox:stable
                    imagePullPolicy: Always
                    command:
                      - sleep
                    args:
                      - infinity
                    resources:
                      requests:
                        cpu: 10m
                        memory: 15Mi
                      limits:
                        cpu: 50m
                        memory: 50Mi
              EOF
          
              echo "waiting for sts to finish"
              kubectl rollout status sts/busybox --timeout 15m
              kubectl get events > pod-events-1.log
              kubectl delete sts/busybox
      - uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        if: always()
        with:
          name: pod-events-1.log
          if-no-files-found: ignore
          path: |
            pod-events-1.log
          retention-days: 30

      - name: "login"
        run: |
          make docker/login
          docker info
          echo "docker auth info:"
          cat  ~/.docker/config.json | $CI_TOOLS_DIR/bin/yq '.auths | keys'
      - name: "pull by docker after login"
        run: |
          for i in `seq 1 1 150`; do
            docker pull busybox:stable-musl
            docker rmi busybox:stable-musl
            sleep 1
          done
      - name: "pull by k3d after login"
        run: |
          mkdir ./build
          export KUBECONFIG=$(pwd)/kuma-1.kubeconfig
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Service
          metadata:
            name: busybox
            namespace: default
            labels:
              app: busybox
          spec:
            ports:
              - port: 80
                name: busybox
            clusterIP: None
            selector:
              app: busybox
          ---
          apiVersion: apps/v1
          kind: StatefulSet
          metadata:
            name: busybox
            namespace: default
          spec:
            selector:
              matchLabels:
                app: busybox
            serviceName: "busybox"
            replicas: 100
            template:
              metadata:
                labels:
                  app: busybox
              spec:
                containers:
                  - name: busybox
                    image: busybox:stable
                    imagePullPolicy: Always
                    command:
                      - sleep
                    args:
                      - infinity
                    resources:
                      requests:
                        cpu: 10m
                        memory: 15Mi
                      limits:
                        cpu: 50m
                        memory: 50Mi
              EOF
          
              echo "waiting for sts to finish"
              kubectl rollout status sts/busybox --timeout 15m
              kubectl get events > pod-events-2.log
              kubectl delete sts/busybox
      - uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        if: always()
        with:
          name: pod-events-2.log
          if-no-files-found: ignore
          path: |
            pod-events-2.log
          retention-days: 30
      - name: "logout"
        run: |
            make docker/logout
            docker info
            echo "docker auth info:"
            cat  ~/.docker/config.json | $CI_TOOLS_DIR/bin/yq '.auths | keys'
      - name: "pull by docker after logout"
        run: |
          for i in `seq 1 1 150`; do
            docker pull busybox:stable-musl
            docker rmi busybox:stable-musl
            sleep 1
          done
      - name: "pull by k3d after logout"
        run: |
          export KUBECONFIG=$(pwd)/kuma-1.kubeconfig
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Service
          metadata:
            name: busybox
            namespace: default
            labels:
              app: busybox
          spec:
            ports:
              - port: 80
                name: busybox
            clusterIP: None
            selector:
              app: busybox
          ---
          apiVersion: apps/v1
          kind: StatefulSet
          metadata:
            name: busybox
            namespace: default
          spec:
            selector:
              matchLabels:
                app: busybox
            serviceName: "busybox"
            replicas: 100
            template:
              metadata:
                labels:
                  app: busybox
              spec:
                containers:
                  - name: busybox
                    image: busybox:stable
                    imagePullPolicy: Always
                    command:
                      - sleep
                    args:
                      - infinity
                    resources:
                      requests:
                        cpu: 10m
                        memory: 15Mi
                      limits:
                        cpu: 50m
                        memory: 50Mi
              EOF
          
              echo "waiting for sts to finish"
              kubectl rollout status sts/busybox --timeout 15m
              kubectl get events > pod-events-3.log
              kubectl delete sts/busybox

      - uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        if: always()
        with:
          name: pod-events-3.log
          if-no-files-found: ignore
          path: |
            pod-events-3.log
          retention-days: 30
  test:
    permissions:
      contents: read
    needs: ["check"]
    uses: ./.github/workflows/_test.yaml
    with:
      FULL_MATRIX: ${{ needs.check.outputs.FULL_MATRIX }}
    secrets: inherit
  distributions:
    needs: ["check", "test"]
    timeout-minutes: 10
    if: ${{ always() }}
    runs-on: ubuntu-latest-kong
    permissions:
      contents: write
      actions: read # For getting workflow run info
    env:
      SECURITY_ASSETS_DOWNLOAD_PATH: "${{ github.workspace }}/security-assets"
      SECURITY_ASSETS_PACKAGE_NAME: "security-assets" # Cloudsmith package for hosting security assets
    steps:
      - name: "Halt due to previous failures"
        run: |-
          echo "results: ${{ toJson(needs.*.result) }}"
          # for some reason, GH Action will always trigger a downstream job even if there are errors in an dependent job
          # so we manually check it here. An example could be found here: https://github.com/kumahq/kuma/actions/runs/7044980149
          [[ ${{ contains(needs.*.result, 'failure')|| contains(needs.*.result, 'cancelled') }} == "true" ]] && exit 1
          echo "All dependent jobs succeeded"
