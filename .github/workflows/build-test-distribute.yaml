name: "build-test-distribute"
on:
  push:
    branches: [ "master", "release-*", "!*-merge-master" ]
    tags: [ "*" ]
  pull_request:
    branches: [ "master", "release-*" ]
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
permissions:
  contents: read
env:
  # This is automatically managed by CI
  K8S_MIN_VERSION: v1.23.17-k3s1
  K8S_MAX_VERSION: v1.29.1-k3s2
  KUMA_DIR: "."
  GH_OWNER: ${{ github.repository_owner }}
  GH_USER: "github-actions[bot]"
  GH_EMAIL: "<41898282+github-actions[bot]@users.noreply.github.com>"
  GH_REPO: "charts"
  CI_TOOLS_DIR: "/home/runner/work/kuma/kuma/.ci-tools"
jobs:
  check:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    outputs:
      FULL_MATRIX: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'ci/run-full-matrix') }}
      ALLOW_PUSH: ${{ github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'ci/force-publish') }}
      K8S_MIN_VERSION: ${{ env.K8S_MIN_VERSION }}
      K8S_MAX_VERSION: ${{ env.K8S_MAX_VERSION }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version-file: go.mod
          cache: false
      - uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4.0.0
        with:
          path: |
            ${{ env.CI_TOOLS_DIR }}
          key: ${{ runner.os }}-${{ runner.arch }}-devtools-${{ hashFiles('mk/dependencies/deps.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-devtools
      - run: |
          make dev/tools
      - uses: golangci/golangci-lint-action@3cfe3a4abbb849e10058ce4af15d205b6da42804 # v4.0.0
        with:
          args: --fix=false --verbose
          version: v1.56.1
          skip-pkg-cache: true
      - run: |
          make clean
      - run: |
          make check
  test:
    needs: ["check"]
    if: ${{ ! contains(github.event.pull_request.labels.*.name, 'ci/skip-test') }}
    uses: ./.github/workflows/_test.yaml
    with:
      FULL_MATRIX: ${{ needs.check.outputs.FULL_MATRIX }}
      K8S_MIN_VERSION: ${{ needs.check.outputs.K8S_MIN_VERSION }}
      K8S_MAX_VERSION: ${{ needs.check.outputs.K8S_MAX_VERSION }}
    secrets: inherit
  build:
    needs: ["check"]
    uses: ./.github/workflows/_build.yaml
    with:
      FULL_MATRIX: ${{ needs.check.outputs.FULL_MATRIX }}
      IMAGE_ARTIFACTS_NAME: "image_artifacts"
      BINARY_ARTIFACTS_NAME: "binary_artifacts"
    secrets: inherit
  distributions:
    timeout-minutes: 40
    needs: ["check", "build", "test"]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: "Halt due to previous failures"
        if: ${{ contains(needs.*.result, 'failure')|| contains(needs.*.result, 'cancelled') }}
        run: |
          exit 1
          # for some reason, GH Action will always trigger a downstream job even if there are errors in an dependent job
          # so we manually check it here. An example could be found here: https://github.com/kumahq/kuma/actions/runs/7044980149
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0
      - name: Publish distributions to Pulp
        env:
          PULP_USERNAME: ${{ vars.PULP_USERNAME }}
          PULP_PASSWORD: ${{ secrets.PULP_PASSWORD }}
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
        run: |
          make publish/pulp
      - name: Publish images
        env:
          DOCKER_API_KEY: ${{ secrets.DOCKER_API_KEY }}
          DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
        run: |-
          make docker/login
          # ensure we always logout
          function on_exit() {
            make docker/logout
          }
          trap on_exit EXIT
          make docker/push
          make docker/manifest
      - name: package-helm-chart
        id: package-helm
        env:
          HELM_DEV: ${{ !startsWith(github.event.ref, 'refs/tags/') }}
        run: |
          make helm/update-version

          git config user.name "${GH_USER}"
          git config user.email "${GH_EMAIL}"
          git add -u deployments/charts
          # This commit never ends up in the repo
          git commit --allow-empty -m "ci(helm): update versions"
          # To get an idea of what's in the commit to debug
          git show

          make helm/package
          PKG_FILENAME=$(find .cr-release-packages -type f -printf "%f\n")
          echo "filename=${PKG_FILENAME}" >> $GITHUB_OUTPUT
      - name: Upload packaged chart
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: ${{ steps.package-helm.outputs.filename }}
          path: .cr-release-packages/${{ steps.package-helm.outputs.filename }}
          retention-days: ${{ github.event_name == 'pull_request' && 1 || 30 }}
      # Everything from here is only running on releases.
      # Ideally we'd finish the workflow early, but this isn't possible: https://github.com/actions/runner/issues/662
      - name: Generate GitHub app token
        id: github-app-token
        if: ${{ startsWith(github.event.ref, 'refs/tags/') }}
        uses: actions/create-github-app-token@f4c6bf6752984b3a29fcc135a5e70eb792c40c6b # v1.8.0
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: ${{ env.GH_REPO }}
      - name: Release chart
        if: ${{ startsWith(github.event.ref, 'refs/tags/') }}
        env:
          GITHUB_APP: "true"
          GH_TOKEN: ${{ steps.github-app-token.outputs.token }}
        run: make helm/release
