name: pull request comment
on:
  issue_comment:
    types: [created]
env:
  GH_USER: "github-actions[bot]"
  GH_EMAIL: "<41898282+github-actions[bot]@users.noreply.github.com>"
jobs:
  pr_comments:
    if: github.event.issue.pull_request != '' && (contains(github.event.comment.body, '/format') || contains(github.event.comment.body, '/golden_files'))
    runs-on: ubuntu-latest
    steps:
      - name: Generate GitHub app token
        id: github-app-token
        uses: tibdex/github-app-token@0d49dd721133f900ebd5e0dff2810704e8defbc6 # v1.8.2
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
      - name: check-maintainer
        run: |
          # Ensure the commenter is a maintainer
          if [[ `gh api  '/repos/${{ github.repository }}/collaborators?permission=maintain' --paginate --jq '.[].login' | grep ${{ github.event.comment.user.login }}` ]]; then
            gh api --method POST -f content='+1' ${{ github.event.comment.url }}/reactions
          else
            gh api --method POST -f content='-1' ${{ github.event.comment.url }}/reactions
            echo "${{ github.event.comment.user.login }} is not a maintainer of the repo, can't run this action"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ steps.github-app-token.outputs.token }}
      - id: get-branch
        run: |
          echo "BRANCH_NAME=$(gh pr view ${{ github.event.issue.number }} --repo ${{ github.repository }} --json headRefName --jq '.headRefName')" >> $GITHUB_ENV
          echo "REPO=$(gh pr view ${{ github.event.issue.number }} --repo ${{ github.repository }} --json headRepository,headRepositoryOwner --jq '[.headRepositoryOwner.login,.headRepository.name] | join("/")')" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ steps.github-app-token.outputs.token }}
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: ${{ env.REPO }}
          ref: ${{ env.BRANCH_NAME }}
        env:
          GITHUB_TOKEN: ${{ steps.github-app-token.outputs.token }}
      - uses: actions/setup-go@v4
        with:
          go-version: "1.20.7"
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/.kuma-dev
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-${{ hashFiles('mk/dependencies/deps.lock') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - run: |
          make dev/tools
      - name: format
        if: contains(github.event.comment.body, '/format') # check the comment if it contains the keywords
        run: |
          make clean format
      - name: run golden_files
        if: contains(github.event.comment.body, '/golden_files') # check the comment if it contains the keywords
        run: |
          make test UPDATE_GOLDEN_FILES=true
      - name: commit and push fixes
        env:
          GITHUB_TOKEN: ${{ steps.github-app-token.outputs.token }}
        run: |
          if git diff --exit-code --stat; then
            echo "No change detected, skipping git push"
          else
            git config user.name "${GH_USER}"
            git config user.email "${GH_EMAIL}"
            git commit -s -m "fix(ci): format files" .
            git push
          fi
      - run: gh api --method POST -f content='hooray' ${{ github.event.comment.url }}/reactions
        env:
          GITHUB_TOKEN: ${{ steps.github-app-token.outputs.token }}
