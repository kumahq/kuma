syntax = "proto3";

package konvoy.mesh.v1alpha1;

option go_package = "v1alpha1";

import "gogoproto/gogo.proto";
import "validate/validate.proto";

option (gogoproto.equal_all) = true;

// Dataplane defines configuration of a side-car proxy.
message Dataplane {

  // Networking describes inbound and outbound interfaces of a dataplane.
  message Networking {

    // Inbound describes a service implemented by the dataplane.
    message Inbound {

      // Interface describes networking rules for incoming traffic.
      // The value is a string formatted as
      // <WORKLOAD_IP_ADDRESS>:<SERVICE_PORT>:<WORKLOAD_PORT>, which means
      // that dataplane must listen on <WORKLOAD_IP_ADDRESS>:<WORKLOAD_PORT>
      // and must dispatch to 127.0.0.1:<WORKLOAD_PORT>;
      // client applications should connect to
      // <SERVICE_DNS_NAME>:<SERVICE_PORT>.
      string interface = 1 [ (validate.rules).string.min_len = 2 ];

      // Tags associated with an application this dataplane is deployed next to,
      // e.g. service=web, version=1.0.
      // `service` tag is mandatory.
      map<string, string> tags = 2 [ (validate.rules).map.min_pairs = 1 ];
    }

    // Outbound describes a service consumed by the dataplane.
    message Outbound {

      // Interface describes networking rules for outgoing traffic.
      // The value is a string formatted as <IP_ADDRESS>:<PORT>,
      // which means that dataplane must listen on <IP_ADDRESS>:<PORT>
      // and must be dispatch to <SERVICE>:<SERVICE_PORT>.
      string interface = 1 [ (validate.rules).string.min_len = 2 ];

      // Service name.
      string service = 2 [ (validate.rules).string.hostname = true ];

      // Service port.
      uint32 service_port = 3
          [ (validate.rules).uint32 = {gte : 1, lte : 65535} ];
    }

    // Inbound describes a list of inbound interfaces of the dataplane.
    repeated Inbound inbound = 1;

    // Outbound describes a list of outbound interfaces of the dataplane.
    repeated Outbound outbound = 2;
  }

  // Networking describes inbound and outbound interfaces of the dataplane.
  Networking networking = 1;
}
